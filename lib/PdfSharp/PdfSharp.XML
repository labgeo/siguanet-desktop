<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PdfSharp</name>
    </assembly>
    <members>
        <member name="T:PdfSharp.Drawing.BarCodes.DataMatrixImage">
            <summary>
            Creates the XImage object for a DataMatrix.
            Important note for OpenSource version of PDFsharp:
              The generated image object only contains random data.
              If you need the correct implementation as defined in the ISO/IEC 16022:2000 specification,
              please contact empira Software GmbH via www.pdfsharp.com.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.BarCodes.DataMatrixImage.ecc200Sizes">
            <summary>
            Possible ECC200 Matrixes
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.DataMatrixImage.DataMatrix">
            <summary>
            Creates the DataMatrix code.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.DataMatrixImage.Iec16022Ecc200(System.Int32,System.Int32,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Encodes the DataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.DataMatrixImage.CreateImage(System.Char[],System.Int32)">
            <summary>
            Creates a DataMatrix image object.
            </summary>
            <param name="code">A hex string like "AB 08 C3...".</param>
            <param name="size">I.e. 26 for a 26x26 matrix</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.DataMatrixImage.CreateImage(System.Char[],System.Int32,System.Int32)">
            <summary>
            Creates a DataMatrix image object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.DataMatrixImage.CreateImage(System.Char[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a DataMatrix image object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Layout.XParagraphAlignment">
            <summary>
            Specifies the alignment of a paragraph.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfToUnicodeMap">
            <summary>
            Represents a ToUnicode map for composite font.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDictionary">
            <summary>
            Represents a PDF dictionary object.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfObject">
            <summary>
            Base class of all composite PDF objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfItem">
            <summary>
            The base class of all PDF objects and simple types.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfItem.Clone">
            <summary>
            Creates a copy of this object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfItem.Copy">
            <summary>
            Implements the copy mechanism. Must be overridden in derived classes.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfItem.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            When overridden in a derived class, appends a raw string representation of this object
            to the specified PdfWriter.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.#ctor(PdfSharp.Pdf.PdfObject)">
            <summary>
            Initializes a new instance from an existing object. Used for object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.Clone">
            <summary>
            Creates a copy of this object. The clone does not belong to a document, i.e. its owner and its iref are null.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.SetObjectID(System.Int32,System.Int32)">
            <summary>
            ...
            Setting the object identifier makes this object an indirect object, i.e. the object gets
            a PdfReference entry in the PdfReferenceTable.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.PrepareForSave">
            <summary>
            When overridden in a derived class, prepares the object to get saved.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Saves the stream position. 2nd Edition.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.DeepCopyClosure(PdfSharp.Pdf.PdfDocument,PdfSharp.Pdf.PdfObject)">
            <param name="owner">The document that ownes the cloned objects.</param>
            <param name="externalObject">The root object to be cloned.</param>
            <returns>The clone of the root object</returns>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.ImportClosure(PdfSharp.Pdf.Advanced.PdfImportedObjectTable,PdfSharp.Pdf.PdfDocument,PdfSharp.Pdf.PdfObject)">
            <param name="importedObjectTable">The imported object table of the owner for the external document.</param>
            <param name="owner">The document that ownes the cloned objects.</param>
            <param name="externalObject">The root object to be cloned.</param>
            <returns>The clone of the root object</returns>
        </member>
        <member name="M:PdfSharp.Pdf.PdfObject.FixUpObject(PdfSharp.Pdf.Advanced.PdfImportedObjectTable,PdfSharp.Pdf.PdfDocument,PdfSharp.Pdf.PdfObject)">
            <summary>
            Replace all indirect references to external objects by their cloned counterparts
            owned by the importer document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.Owner">
            <summary>
            Gets the PdfDocument this object belongs to.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.Document">
            <summary>
            Gets or sets the PdfDocument this object belongs to.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.IsIndirect">
            <summary>
            Indicates whether the object is an indirect object.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.ObjectID">
            <summary>
            Gets the object identifier. Returns PdfObjectID.Empty for direct objects.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.ObjectNumber">
            <summary>
            Gets the object number.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.GenerationNumber">
            <summary>
            Gets the generation number.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObject.Reference">
            <summary>
            Gets the indirect reference of this object. If the value is null, this object is a direct object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.#ctor(PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Initializes a new instance from an existing dictionary. Used for object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.Clone">
            <summary>
            Creates a copy of this dictionary. Direct values are deep copied. Indirect references are not
            modified.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.Copy">
            <summary>
            This function is useful for importing objects from external documents. The returned object is not
            yet complete. irefs refer to external objects and directed objects are coloned but their document
            property is null. A cloned dictionary or array needs a 'fix-up' to be a valid object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.ToString">
            <summary>
            Returns a string with the content of this object in a readable form. Useful for debugging purposes only.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.WriteDictionaryElement(PdfSharp.Pdf.IO.PdfWriter,PdfSharp.Pdf.PdfName)">
            <summary>
            Writes a key/value pair of this dictionary. This function is intended to be overridden
            in derived classes.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.WriteDictionaryStream(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the stream of this dictionary. This function is intended to be overridden
            in a derived class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.CreateStream(System.Byte[])">
            <summary>
            Creates the stream of this dictionary and initializes it with the specified byte array.
            The function must not be called if the dictionary already has a strem.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.Elements">
            <summary>
            Gets the hashtable containing the elements of this dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.Stream">
            <summary>
            Gets or sets the PDF stream belonging to this dictionary. Returns null if the dictionary has
            no stream. To create the stream, call the CreateStream function.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.Meta">
            <summary>
            When overridden in a derived class, gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDictionary.DictionaryElements">
            <summary>
            Represents the interface to the elements of a PDF dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Clone">
            <summary>
            Creates a shallow copy of this object. The clone is not owned by a dictionary anymore.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.SetOwner(PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Moves this instance to another dictionary during object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetBoolean(System.String,System.Boolean)">
            <summary>
            Converts the specified value to boolean.
            If the value not exists, the function returns false.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetInteger(System.String,System.Boolean)">
            <summary>
            Converts the specified value to integer.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetReal(System.String,System.Boolean)">
            <summary>
            Converts the specified value to double.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetString(System.String,System.Boolean)">
            <summary>
            Converts the specified value to String.
            If the value not exists, the function returns the empty string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetName(System.String)">
            <summary>
            Converts the specified value to a name.
            If the value not exists, the function returns the empty string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.SetName(System.String,System.String)">
            <summary>
            Sets the specified name value.
            If the value doesn't start with a slash, it is added automatically.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetRectangle(System.String,System.Boolean)">
            <summary>
            Converts the specified value to PdfRectangle.
            If the value not exists, the function returns an empty rectangle.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetValue(System.String,PdfSharp.Pdf.VCF)">
            <summary>
            Gets the value for the specified key. If the value does not exists, it is optionally created.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetValue(System.String)">
            <summary>
            Short cut for GetValue(key, VCF.None).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetValueType(System.String)">
            <summary>
            Returns the type of the object to be created as value of the specified key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetIndirectObject(System.String)">
            <summary>
            Returns the indirect object if the value of the specified key is a PdfReference.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetObject(System.String)">
            <summary>
            Gets the PdfObject with the specified key, or null, if no such object exists. If the key refers to
            a reference, the referenced PdfObject is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetDictionary(System.String)">
            <summary>
            Gets the PdfArray with the specified key, or null, if no such object exists. If the key refers to
            a reference, the referenced PdfArray is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetArray(System.String)">
            <summary>
            Gets the PdfArray with the specified key, or null, if no such object exists. If the key refers to
            a reference, the referenced PdfArray is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.GetReference(System.String)">
            <summary>
            Gets the PdfReference with the specified key, or null, if no such object exists.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Contains(System.String)">
            <summary>
            Determines whether the dictionary contains the specified name.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Item(System.String)">
            <summary>
            Gets or sets an entry in the dictionary. The specified key must be a valid PDF name
            starting with a slash '/'. This property provides full access to the elements of the
            PDF dictionary. Wrong use can lead to errors or corrupt PDF files.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Item(PdfSharp.Pdf.PdfName)">
            <summary>
            Gets or sets an entry in the dictionary identified by a PdfName object.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.DictionaryElements.KeyNames">
            <summary>
            Gets all keys currently in use in this dictionary as an array of PdfName objects.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Keys">
            <summary>
            Get all keys currently in use in this dictionary as an array of string objects.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.DictionaryElements.Values">
            <summary>
            Gets all values currently in use in this dictionary as an array of PdfItem objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDictionary.PdfStream">
            <summary>
            Base class for all PDF stream objects.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.owner">
            <summary>
            The dictionary the stream belongs to.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.PdfStream.#ctor(System.Byte[],PdfSharp.Pdf.PdfDictionary)">
            <summary>
            A .NET string can contain char(0) as a valid character.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.PdfStream.SetOwner(PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Moves this instance to another dictionary during object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDictionary.PdfStream.ToString">
            <summary>
            Returns the strem content a raw string.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.PdfStream.Value">
            <summary>
            Get or sets the bytes of the stream as they are, i.e. if one or more filters exists the bytes are
            not unfiltered.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDictionary.PdfStream.UnfilteredValue">
            <summary>
            Gets the value of the stream unfiltered. The stream content is not modified by this operation.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.KeysBase">
            <summary>
            Base class for all dictionary Keys classes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.Length">
            <summary>
            (Required) The number of bytes from the beginning of the line following the keyword
            stream to the last byte just before the keywordendstream. (There may be an additional
            EOL marker, preceding endstream, that is not included in the count and is not logically
            part of the stream data.)
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.Filter">
            <summary>
            (Optional) The name of a filter to be applied in processing the stream data found between
            the keywords stream and endstream, or an array of such names. Multiple filters should be
            specified in the order in which they are to be applied.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.DecodeParms">
            <summary>
            (Optional) A parameter dictionary or an array of such dictionaries, used by the filters
            specified by Filter. If there is only one filter and that filter has parameters, DecodeParms
            must be set to the filter’s parameter dictionary unless all the filter’s parameters have
            their default values, in which case the DecodeParms entry may be omitted. If there are 
            multiple filters and any of the filters has parameters set to nondefault values, DecodeParms
            must be an array with one entry for each filter: either the parameter dictionary for that
            filter, or the null object if that filter has no parameters (or if all of its parameters have
            their default values). If none of the filters have parameters, or if all their parameters
            have default values, the DecodeParms entry may be omitted.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.F">
            <summary>
            (Optional; PDF 1.2) The file containing the stream data. If this entry is present, the bytes
            between stream and endstream are ignored, the filters are specified by FFilter rather than
            Filter, and the filter parameters are specified by FDecodeParms rather than DecodeParms.
            However, the Length entry should still specify the number of those bytes. (Usually, there are
            no bytes and Length is 0.)
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.FFilter">
            <summary>
            (Optional; PDF 1.2) The name of a filter to be applied in processing the data found in the
            stream’s external file, or an array of such names. The same rules apply as for Filter.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.FDecodeParms">
            <summary>
            (Optional; PDF 1.2) A parameter dictionary, or an array of such dictionaries, used by the
            filters specified by FFilter. The same rules apply as for DecodeParms.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDictionary.PdfStream.Keys.DL">
            <summary>
            Optional; PDF 1.5) A non-negative integer representing the number of bytes in the decoded
            (defiltered) stream. It can be used to determine, for example, whether enough disk space is
            available to write a stream to a file.
            This value should be considered a hint only; for some stream filters, it may not be possible
            to determine this value precisely.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfToUnicodeMap.PrepareForSave">
            <summary>
            Creates the ToUnicode map from the CMapInfo.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfToUnicodeMap.CMapInfo">
            <summary>
            Gets or sets the CMap info.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CObject">
            <summary>
            Base class for all PDF content stream objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Pdf.Content.Objects.CObject"/> class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CObject.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CObject.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CObject.Copy">
            <summary>
            Implements the copy mechanism. Must be overridden in derived classes.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CComment">
            <summary>
            Represents a comment in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CComment.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CComment.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.CComment.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CSequence">
            <summary>
            Represents a sequence of objects in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CSequence.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CSequence.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CSequence.Add(PdfSharp.Pdf.Content.Objects.CSequence)">
            <summary>
            Adds the specified sequence.
            </summary>
            <param name="sequence">The sequence.</param>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CSequence.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CNumber">
            <summary>
            Represents the base class for numerical objects in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CNumber.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CNumber.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CInteger">
            <summary>
            Represents an integer value in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CInteger.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CInteger.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.CInteger.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CReal">
            <summary>
            Represents a real value in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CReal.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CReal.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.CReal.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CString">
            <summary>
            Represents a string value in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CString.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CString.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.CString.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CName">
            <summary>
            Represents a name in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CName.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CName.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.CName.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.CArray">
            <summary>
            Represents an array of objects in a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CArray.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.CArray.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.COperator">
            <summary>
            Represents an operator a PDF content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.COperator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.COperator.Copy">
            <summary>
            Implements the copy mechanism of this class.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.COperator.Name">
            <summary>
            Gets or sets the name of the operator
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:PdfSharp.Pdf.Content.Objects.COperator.Operands">
            <summary>
            Gets or sets the operands.
            </summary>
            <value>The operands.</value>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.OpCodeName">
            <summary>
            The names of the op-codes. 
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.OpCodeFlags">
            <summary>
            Specifies the group of operations the op-code belongs to.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.OpCode">
            <summary>
            Represents a PDF content stream operator description.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.OpCode.#ctor(System.String,PdfSharp.Pdf.Content.Objects.OpCodeName,System.Int32,System.String,PdfSharp.Pdf.Content.Objects.OpCodeFlags,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Pdf.Content.Objects.OpCode"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="opcodeName">The enum value of the operator.</param>
            <param name="operands">The number of operands.</param>
            <param name="postscript">The postscript equvalent, or null, if no such operation exists.</param>
            <param name="flags">The flags.</param>
            <param name="description">The description from Adobe PDF Reference.</param>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.Name">
            <summary>
            The name of the operator.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.OpCodeName">
            <summary>
            The enum value of the operator.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.Operands">
            <summary>
            The number of operands. -1 indicates a variable number of operands.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.Postscript">
            <summary>
            The postscript equvalent, or null, if no such operation exists.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCode.Description">
            <summary>
            The description from Adobe PDF Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Objects.OpCodes">
            <summary>
            Static class with all PDF op-codes.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.OpCodes.OperatorFromName(System.String)">
            <summary>
            Operators from name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:PdfSharp.Pdf.Content.Objects.OpCodes.#cctor">
            <summary>
            Initializes the <see cref="T:PdfSharp.Pdf.Content.Objects.OpCodes"/> class.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Content.Objects.OpCodes.ops">
            <summary>
            Array of all OpCodes.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.Chars">
            <summary>
            Character table by name. Same as PdfSharp.Pdf.IO.Chars. Not yet clear if necessary.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.CLexer">
            <summary>
            Lexical analyser for PDF content files. Adobe specifies no grammer, but it seems that it
            is a simple post-fix notation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the Lexer class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanNextToken">
            <summary>
            Reads the next token and returns its type.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanComment">
            <summary>
            Scans a comment line. (Not yet used, comments are skipped by lexer.)
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanName">
            <summary>
            Scans a name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanNumber">
            <summary>
            Scans an integer or real number.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanOperator">
            <summary>
            Scans an operator.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ScanNextChar">
            <summary>
            Move current position one character further in content stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.ClearToken">
            <summary>
            Resets the current token to the empty string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.AppendAndScanNextChar">
            <summary>
            Appends current character to the token and reads next one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.MoveToNonWhiteSpace">
            <summary>
            If the current character is not a white space, the function immediately returns it.
            Otherwise the PDF cursor is moved forward to the first non-white space or EOF.
            White spaces are NUL, HT, LF, FF, CR, and SP.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.IsWhiteSpace(System.Char)">
            <summary>
            Indicates whether the specified character is a content stream white-space character.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.IsOperatorChar(System.Char)">
            <summary>
            Indicates whether the specified character is an content operator character.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CLexer.IsDelimiter(System.Char)">
            <summary>
            Indicates whether the specified character is a PDF delimiter character.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.CLexer.Symbol">
            <summary>
            Gets or sets the current symbol.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.CLexer.Token">
            <summary>
            Gets the current token.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.CLexer.TokenToInteger">
            <summary>
            Interprets current token as integer literal.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Content.CLexer.TokenToReal">
            <summary>
            Interpret current token as real or interger literal.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.ContentReader">
            <summary>
            Represents the functionality for reading PDF content streams.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.ContentReader.ReadContent(PdfSharp.Pdf.PdfPage)">
            <summary>
            Reads the content stream(s) of the specified page.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:PdfSharp.Pdf.Content.ContentReader.ReadContent(System.Byte[])">
            <summary>
            Reads the specified content.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="T:PdfSharp.Pdf.Content.ContentReaderException">
            <summary>
            Exception thrown by ContentReader.
            </summary>
        </member>
        <member name="T:PdfSharp.PdfSharpException">
            <summary>
            Base class of all exceptions in the PDFsharp frame work.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.CParser">
            <summary>
            Provides the functionality to parse PDF content streams.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CParser.ParseObject(PdfSharp.Pdf.Content.Objects.CSequence,PdfSharp.Pdf.Content.CSymbol)">
            <summary>
            Parses whatever comes until the specified stop symbol is reached.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Content.CParser.ReadSymbol(PdfSharp.Pdf.Content.CSymbol)">
            <summary>
            Reads the next symbol that must be the specified one.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Content.CSymbol">
            <summary>
            Terminal symbols recognized by PDF content stream lexer.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.BarCode">
            <summary>
            Represents the base class of all bar codes.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.CodeBase">
            <summary>
            Represents the base class of all codes.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeBase.CheckCode(System.String)">
            <summary>
            Whem implemented in a derived class, determines whether the specified string can be used as Text
            for this bar code type.
            </summary>
            <param name="text">The code string to check.</param>
            <returns>True if the text can be used for the actual barcode.</returns>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeBase.CalcDistance(PdfSharp.Drawing.BarCodes.AnchorType,PdfSharp.Drawing.BarCodes.AnchorType,PdfSharp.Drawing.XSize)">
            <summary>
            Calculates the distance between an old anchor point and a new anchor point.
            </summary>
            <param name="oldType"></param>
            <param name="newType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:PdfSharp.Drawing.BarCodes.CodeBase.Text">
            <summary>
            Gets or sets the text the bar code shall represent.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.BarCodes.CodeBase.Anchor">
            <summary>
            Always MiddleCenter.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.BcgSR">
            <summary>
            String resources for the empira barcde renderer.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.BarCodeRenderInfo">
            <summary>
            Holds all temporary information needed during rendering.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.CodeDataMatrix">
            <summary>
            Defines the DataMatrix 2D barcode. THIS IS AN EMPIRA INTERNAL IMPLEMENTATION. THE CODE IN
            THE OPEN SOURCE VERSION IS A FAKE.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.MatrixCode">
            <summary>
            Represents the base class of all 2D codes.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.Int32,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,PdfSharp.Drawing.BarCodes.DataMatrixEncoding,System.Int32,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.Int32,System.Int32,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,PdfSharp.Drawing.BarCodes.DataMatrixEncoding,System.Int32,System.Int32,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of CodeDataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.SetEncoding(PdfSharp.Drawing.BarCodes.DataMatrixEncoding)">
            <summary>
            Sets the encoding of the DataMatrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.Render(PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XPoint)">
            <summary>
            Renders the matrix code.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeDataMatrix.CheckCode(System.String)">
            <summary>
            Determines whether the specified string can be used as data in the DataMatrix.
            </summary>
            <param name="text">The code to be checked.</param>
        </member>
        <member name="P:PdfSharp.Drawing.BarCodes.CodeDataMatrix.QuietZone">
            <summary>
            Gets or sets the size of the Matrix' Quiet Zone.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.CodeOmr">
            <summary>
            Represents an OMR code.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.CodeOmr.#ctor(System.String,PdfSharp.Drawing.XSize,PdfSharp.Drawing.BarCodes.CodeDirection)">
            <summary>
            initializes a new OmrCode with the given data.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.CodeDirection">
            <summary>
            Specifies the drawing direction of the code.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight">
            <summary>
            Does not rotate the code.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop">
            <summary>
            Rotates the code 180° at the anchor position.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.BarCodes.CodeDirection.RightToLeft">
            <summary>
            Rotates the code 180° at the anchor position.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.BarCodes.CodeDirection.TopToBottom">
            <summary>
            Rotates the code 180° at the anchor position.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.AnchorType">
            <summary>
            Specifies whether and how the text is displayed at the code area.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.CodeType">
            <summary>
            Specifies the type of the bar code.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.TextLocation">
            <summary>
            Specifies whether and how the text is displayed at the code.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.Code2of5Interleaved">
            <summary>
            Summary description for Interleave5of9.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.ThickThinBarCode">
            <summary>
            Internal base class for several bar code types.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.ThickThinBarCode.RenderBar(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo,System.Boolean)">
            <summary>
            Renders a thick or thin line for the bar code.
            </summary>
            <param name="info"></param>
            <param name="isThick">Determines whether a thick or a thin line is about to be rendered.</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.ThickThinBarCode.RenderGap(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo,System.Boolean)">
            <summary>
            Renders a thick or thin gap for the bar code.
            </summary>
            <param name="info"></param>
            <param name="isThick">Determines whether a thick or a thin gap is about to be rendered.</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.ThickThinBarCode.GetBarWidth(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo,System.Boolean)">
            <summary>
            Gets the width of a thick or a thin line (or gap). CalcLineWidth must have been called before.
            </summary>
            <param name="info"></param>
            <param name="isThick">Determines whether a thick line's with shall be returned.</param>
        </member>
        <member name="P:PdfSharp.Drawing.BarCodes.ThickThinBarCode.WideNarrowRatio">
            <summary>
            Gets or sets the ration between thick an thin lines. Must be between 2 an 3.
            Optimal and also default value is 2.6.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.#ctor">
            <summary>
            Initializes a new instance of Interleaved2of5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.#ctor(System.String)">
            <summary>
            Initializes a new instance of Interleaved2of5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.#ctor(System.String,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of Interleaved2of5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.#ctor(System.String,PdfSharp.Drawing.XSize,PdfSharp.Drawing.BarCodes.CodeDirection)">
            <summary>
            Initializes a new instance of Interleaved2of5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.ThickAndThinLines(System.Int32)">
            <summary>
            Returns an array of size 5 that represents the thick (true) and thin (false) lines or spaces
            representing the specified digit.
            </summary>
            <param name="digit">The digit to represent.</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.Render(PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XPoint)">
            <summary>
            Renders the bar code.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.CalcThinBarWidth(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo)">
            <summary>
            Calculates the thick and thin line widths,
            taking into acount the required rendering size.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.RenderNextPair(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo)">
            <summary>
            Renders the next digit pair as bar code element.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code2of5Interleaved.CheckCode(System.String)">
            <summary>
            Checks the code to be convertible into an interleaved 2 of 5 bar code.
            </summary>
            <param name="text">The code to be checked.</param>
        </member>
        <member name="T:PdfSharp.Drawing.BarCodes.Code3of9Standard">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.#ctor">
            <summary>
            Initializes a new instance of Standard3of9.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.#ctor(System.String)">
            <summary>
            Initializes a new instance of Standard3of9.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.#ctor(System.String,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of Standard3of9.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.#ctor(System.String,PdfSharp.Drawing.XSize,PdfSharp.Drawing.BarCodes.CodeDirection)">
            <summary>
            Initializes a new instance of Standard3of9.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.ThickThinLines(System.Char)">
            <summary>
            Returns an array of size 9 that represents the thick (true) and thin (false) lines and spaces
            representing the specified digit.
            </summary>
            <param name="ch">The character to represent.</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.CalcThinBarWidth(PdfSharp.Drawing.BarCodes.BarCodeRenderInfo)">
            <summary>
            Calculates the thick and thin line widths,
            taking into acount the required rendering size.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.CheckCode(System.String)">
            <summary>
            Checks the code to be convertible into an standard 3 of 9 bar code.
            </summary>
            <param name="text">The code to be checked.</param>
        </member>
        <member name="M:PdfSharp.Drawing.BarCodes.Code3of9Standard.Render(PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XPoint)">
            <summary>
            Renders the bar code.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Layout.XTextFormatter">
            <summary>
            Represents a very simple text formatter.
            If this class does not satisfy your needs on formatting paragraphs I recommend to take a look
            at MigraDoc Lite. Alternatively you should copy this class in you own source code and modify it.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.#ctor(PdfSharp.Drawing.XGraphics)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.Layout.XTextFormatter"/> class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.DrawString(System.String,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XRect)">
            <summary>
            Draws the text.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="font">The font.</param>
            <param name="brush">The text brush.</param>
            <param name="layoutRectangle">The layout rectangle.</param>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.DrawString(System.String,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XRect,PdfSharp.Drawing.XStringFormat)">
            <summary>
            Draws the text.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="font">The font.</param>
            <param name="brush">The text brush.</param>
            <param name="layoutRectangle">The layout rectangle.</param>
            <param name="format">The format. Must be <c>XStringFormat.TopLeft</c></param>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.AlignLine(System.Int32,System.Int32,System.Double)">
            <summary>
            Align center, right or justify.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.Layout.XTextFormatter.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:PdfSharp.Drawing.Layout.XTextFormatter.Block">
            <summary>
            Represents a single word.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.Block.#ctor(System.String,PdfSharp.Drawing.Layout.XTextFormatter.BlockType,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.Layout.XTextFormatter.Block"/> class.
            </summary>
            <param name="text">The text of the block.</param>
            <param name="type">The type of the block.</param>
            <param name="width">The width of the text.</param>
        </member>
        <member name="M:PdfSharp.Drawing.Layout.XTextFormatter.Block.#ctor(PdfSharp.Drawing.Layout.XTextFormatter.BlockType)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.Layout.XTextFormatter.Block"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Text">
            <summary>
            The text represented by this block.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Type">
            <summary>
            The type of the block.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Width">
            <summary>
            The width of the text.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Location">
            <summary>
            The location relative to the opper left corner of the layout rectangle.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Alignment">
            <summary>
            The alignment of this line.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Layout.XTextFormatter.Block.Stop">
            <summary>
            A flag indicating that this is the last bock that fits in the layout rectangle.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Pdf.PdfGraphicsState">
            <summary>
            Represents the current PDF graphics state.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.PdfGraphicsState.realizedCtm">
            <summary>
            The realized current transformation matrix.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.PdfGraphicsState.unrealizedCtm">
            <summary>
            The unrealized current transformation matrix.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.PdfGraphicsState.MustRealizeCtm">
            <summary>
            A flag indicating whether the CTM must be realized.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.PdfGraphicsState.MultiplyTransform(PdfSharp.Drawing.XMatrix,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Modifies the current transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.PdfGraphicsState.RealizeCtm">
            <summary>
            Realizes the CTM.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Pdf.StreamMode">
            <summary>
            Indicates whether we are within a BT/ET block.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.StreamMode.Graphic">
            <summary>
            Graphic mode. This is default.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.StreamMode.Text">
            <summary>
            Text mode.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer">
            <summary>
            Represents a drawing surface for PdfPages.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.IXGraphicsRenderer">
            <summary>
            Represents a drawing surface for PdfPages.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.Clear(PdfSharp.Drawing.XColor)">
            <summary>
            Fills the entire drawing surface with the specified color.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawLine(PdfSharp.Drawing.XPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a straight line.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawLines(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XPoint[])">
            <summary>
            Draws a series of straight lines.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawBezier(PdfSharp.Drawing.XPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a Bézier spline.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawBeziers(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XPoint[])">
            <summary>
            Draws a series of Bézier splines.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawCurve(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XPoint[],System.Double)">
            <summary>
            Draws a cardinal spline.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawArc(PdfSharp.Drawing.XPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws an arc.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawRectangle(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawRectangles(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XRect[])">
            <summary>
            Draws a series of rectangles.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawRoundedRectangle(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle with rounded corners.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawEllipse(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws an ellipse.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawPolygon(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XPoint[],PdfSharp.Drawing.XFillMode)">
            <summary>
            Draws a polygon.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawPie(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a pie.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawClosedCurve(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XPoint[],System.Double,PdfSharp.Drawing.XFillMode)">
            <summary>
            Draws a cardinal spline.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawPath(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XGraphicsPath)">
            <summary>
            Draws a graphical path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawString(System.String,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XBrush,PdfSharp.Drawing.XRect,PdfSharp.Drawing.XStringFormat)">
            <summary>
            Draws a series of glyphs identified by the specified text and font.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.DrawImage(PdfSharp.Drawing.XImage,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws an image.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.Save(PdfSharp.Drawing.XGraphicsState)">
            <summary>
            Saves the current graphics state without changing it.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.Restore(PdfSharp.Drawing.XGraphicsState)">
            <summary>
            Restores the specified graphics state.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.BeginContainer(PdfSharp.Drawing.XGraphicsContainer,PdfSharp.Drawing.XRect,PdfSharp.Drawing.XRect,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.EndContainer(PdfSharp.Drawing.XGraphicsContainer)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.SetPageTransform(PdfSharp.Drawing.XPageDirection,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Sets all values that influence the page transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.IXGraphicsRenderer.WriteComment(System.String)">
            <summary>
            Writes a comment to the output stream. Comments have no effect on the rendering of the output.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.IXGraphicsRenderer.Transform">
            <summary>
            Gets or sets the transformation matrix.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GraphicsStackLevelInitial">
            <summary>
            The q/Q nesting level is 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GraphicsStackLevelPageSpace">
            <summary>
            The q/Q nesting level is 1.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GraphicsStackLevelWorldSpace">
            <summary>
            The q/Q nesting level is 2.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GetContent">
            <summary>
            Gets the content created by this renderer.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.DrawLine(PdfSharp.Drawing.XPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Strokes a single connection of two points.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.DrawLines(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XPoint[])">
            <summary>
            Strokes a series of connected points.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Save(PdfSharp.Drawing.XGraphicsState)">
            <summary>
            Clones the current graphics state and push it on a stack.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.ResetClip">
            <summary>
            Sets the clip path empty. Only possible if graphic state level has the same value as it has when
            the first time SetClip was invoked.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.clipLevel">
            <summary>
            The nesting level of the PDF graphics state stack when the clip region was set to non empty.
            Because of the way PDF is made the clip region can only be reset at this level.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.WriteComment(System.String)">
            <summary>
            Writes a comment to the PDF content stream. May be useful for debugging purposes.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.AppendPartialArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.PathStart)">
            <summary>
            Appends one or up to five Bézier curves that interpolate the arc.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Quatrant(System.Double,System.Boolean,System.Boolean)">
            <summary>
            Gets the quadrant (0 through 3) of the specified angle. If the angle lies on an edge
            (0, 90, 180, etc.) the result depends on the details how the angle is used.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.AppendPartialArcQuadrant(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.PathStart)">
            <summary>
            Appends a Bézier curve for an arc within a quadrant.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.AppendCurveSegment(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint,System.Double)">
            <summary>
            Appends a Bézier curve for a cardinal spline through pt1 and pt2.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.AppendPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Appends the content of a GraphicsPath object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.BeginPage">
            <summary>
            Initializes the default view transformation, i.e. the transformation from the user page
            space to the PDF page space.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.EndPage">
            <summary>
            Ends the content stream, i.e. ends the text mode and balances the graphic state stack.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.BeginGraphic">
            <summary>
            Begins the graphic mode (i.e. ends the text mode).
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Realize(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XBrush)">
            <summary>
            Makes the specified pen and brush to the current graphics objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Realize(PdfSharp.Drawing.XPen)">
            <summary>
            Makes the specified pen to the current graphics object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Realize(PdfSharp.Drawing.XBrush)">
            <summary>
            Makes the specified brush to the current graphics object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Realize(PdfSharp.Drawing.XFont,PdfSharp.Drawing.XBrush,System.Int32)">
            <summary>
            Makes the specified font and brush to the current graphics objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Realize(PdfSharp.Drawing.XImage)">
            <summary>
            Makes the specified image to the current graphics object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.RealizeTransform">
            <summary>
            Realizes the current transformation matrix, if necessary.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GetFontName(PdfSharp.Drawing.XFont,PdfSharp.Pdf.Advanced.PdfFont@)">
            <summary>
            Gets the resource name of the specified font within this page or form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GetImageName(PdfSharp.Drawing.XImage)">
            <summary>
            Gets the resource name of the specified image within this page or form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.GetFormName(PdfSharp.Drawing.XForm)">
            <summary>
            Gets the resource name of the specified form within this page or form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.SaveState">
            <summary>
            Saves the current graphical state.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.RestoreState">
            <summary>
            Restores the previous graphical state.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.gfxState">
            <summary>
            The current graphical state.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.gfxStateStack">
            <summary>
            The graphical state stack.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.defaultViewMatrix">
            <summary>
            The final transformation from the world space to the default page space.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Owner">
            <summary>
            Gets the owning PdfDocument of this page or form.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Resources">
            <summary>
            Gets the PdfResources of this page or form.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.Pdf.XGraphicsPdfRenderer.Size">
            <summary>
            Gets the size of this page or form.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.Rtf.XGraphicsRtfRenderer">
            <summary>
            Represents a drawing surface for PdfPages.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XColorSpace">
            <summary>
             Currently not used. Only DeviceRGB is rendered in PDF.
             </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XCombineMode">
            <summary>
            Specifies how different clipping regions can be combined.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Replace">
            <summary>
            One clipping region is replaced by another.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Intersect">
            <summary>
            Two clipping regions are combined by taking their intersection.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Union">
            <summary>
            Not yet implemented in PDFsharp.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Xor">
            <summary>
            Not yet implemented in PDFsharp.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Exclude">
            <summary>
            Not yet implemented in PDFsharp.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XCombineMode.Complement">
            <summary>
            Not yet implemented in PDFsharp.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with an XPen object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XFillMode">
            <summary>
            Specifies how the interior of a closed path is filled.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XFillMode.Alternate">
            <summary>
            Specifies the alternate fill mode. Called the 'odd-even rule' in PDF terminology.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XFillMode.Winding">
            <summary>
            Specifies the winding fill mode. Called the 'nonzero winding number rule' in PDF terminology.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsPathItemType">
            <summary>
            Type of the path data.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsPdfPageOptions">
            <summary>
            Specifies how the content of an exisiting PDF page and new content is combined.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsPdfPageOptions.Append">
            <summary>
            The new content is inserted behind the old content and any subsequent drawing in done above the existing graphic.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsPdfPageOptions.Prepend">
            <summary>
            The new content is inserted before the old content and any subsequent drawing in done beneath the existing graphic.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsPdfPageOptions.Replace">
            <summary>
            The new content entirely replaces the old content and any subsequent drawing in done on a blank page.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsUnit">
            <summary>
            Specifies the unit of measure.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsUnit.Point">
            <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsUnit.Inch">
            <summary>
            Specifies the inch (2.54 cm) as the unit of measure.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsUnit.Millimeter">
            <summary>
            Specifies the millimeter as the unit of measure.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsUnit.Centimeter">
            <summary>
            Specifies the centimeter as the unit of measure.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsUnit.Presentation">
            <summary>
            Specifies a presentation point (1/96 inch) as the unit of measure.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XKnownColor">
            <summary>
             Specifies the known colors.
             </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XLineAlignment.BaseLine">
            <summary>
            ...
            With this option the layout rectangle must have a height of 0.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XLinearGradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XLinearGradientMode.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XLinearGradientMode.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XLinearGradientMode.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XLinearGradientMode.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XLineCap">
            <summary>
            Specifies the available cap styles with which an XPen object can start and end a line.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XLineJoin">
            <summary>
            Specifies how to join consecutive line or curve segments in a figure or subpath.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XMatrixOrder">
            <summary>
            Specifies the order for matrix transform operations.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XMatrixOrder.Prepend">
            <summary>
            The new operation is applied before the old operation.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XMatrixOrder.Append">
            <summary>
            The new operation is applied after the old operation.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPageDirection">
            <summary>
            Specifies the direction of the y-axis.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XPageDirection.Downwards">
            <summary>
            Increasing Y values go downwards. This is the default.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XPageDirection.Upwards">
            <summary>
            Increasing Y values go upwards. This is only possible when drawing on a PDF page.
            It is not implemented when drawing on a System.Drawing.Graphics object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XSmoothingMode">
            <summary>
            Specifies whether smoothing (or antialiasing) is applied to lines and curves
            and the edges of filled areas.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.Invalid">
            <summary>
            Specifies an invalid mode.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.Default">
            <summary>
            Specifies the default mode.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.HighSpeed">
            <summary>
            Specifies high speed, low quality rendering.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.HighQuality">
            <summary>
            Specifies high quality, low speed rendering.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.None">
            <summary>
            Specifies no antialiasing.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XSmoothingMode.AntiAlias">
            <summary>
            Specifies antialiased rendering.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XStringAlignment">
            <summary>
            Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.GraphicsStateStack">
            <summary>
            Represents a stack of XGraphicsState and XGraphicsContainer objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.InternalGraphicsState">
            <summary>
            Represents the internal state of an XGraphics object.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.InternalGraphicsState.GdipGraphicsState">
            <summary>
            The GDI+ GraphicsState if contructed from XGraphicsState.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.InternalGraphicsState.Transform">
            <summary>
            Gets or sets the current transformation matrix.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPdfFontOptions">
            <summary>
            Specifies details about the font used in PDF files.
            This class is still under construction and may change in future implementations.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfFontOptions.#ctor(System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.XPdfFontOptions"/> class.
            </summary>
            <param name="embed">If set to <c>true</c> the font is embedded.</param>
            <param name="unicode">If set to <c>true</c> Unicode encoding is used.</param>
            <param name="baseFont">Not yet implemented. Should be "".</param>
            <param name="fontFile">Not yet implemented. Should be "".</param>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfFontOptions.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.XPdfFontOptions"/> class.
            </summary>
            <param name="embed">If set to <c>true</c> the font is embedded.</param>
            <param name="baseFont">Not yet implemented. Should be "".</param>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfFontOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.XPdfFontOptions"/> class.
            </summary>
            <param name="embed">If set to <c>true</c> the font is embedded.</param>
            <param name="unicode">If set to <c>true</c> Unicode encoding is used.</param>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfFontOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Drawing.XPdfFontOptions"/> class.
            </summary>
            <param name="embed">If set to <c>true</c> the font is embedded.</param>
        </member>
        <member name="T:PdfSharp.Drawing.XBrush">
            <summary>
            Classes derived from this abstract base class define objects used to fill the 
            interiors of paths.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XBrushes">
            <summary>
            Brushes for all the pre-defined colors.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.AliceBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.AntiqueWhite">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Aqua">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Aquamarine">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Azure">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Beige">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Bisque">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Black">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.BlanchedAlmond">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Blue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.BlueViolet">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Brown">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.BurlyWood">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.CadetBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Chartreuse">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Chocolate">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Coral">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.CornflowerBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Cornsilk">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Crimson">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Cyan">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkCyan">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkGoldenrod">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkKhaki">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkMagenta">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkOliveGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkOrange">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkOrchid">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkRed">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkSalmon">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkSeaGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkSlateBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkSlateGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkTurquoise">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DarkViolet">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DeepPink">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DeepSkyBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DimGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.DodgerBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Firebrick">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.FloralWhite">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.ForestGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Fuchsia">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Gainsboro">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.GhostWhite">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Gold">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Goldenrod">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Gray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Green">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.GreenYellow">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Honeydew">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.HotPink">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.IndianRed">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Indigo">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Ivory">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Khaki">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Lavender">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LavenderBlush">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LawnGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LemonChiffon">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightCoral">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightCyan">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightGoldenrodYellow">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightPink">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightSalmon">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightSeaGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightSkyBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightSlateGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightSteelBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LightYellow">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Lime">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.LimeGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Linen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Magenta">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Maroon">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumAquamarine">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumOrchid">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumPurple">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumSeaGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumSlateBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumSpringGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumTurquoise">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MediumVioletRed">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MidnightBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MintCream">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.MistyRose">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Moccasin">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.NavajoWhite">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Navy">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.OldLace">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Olive">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.OliveDrab">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Orange">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.OrangeRed">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Orchid">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PaleGoldenrod">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PaleGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PaleTurquoise">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PaleVioletRed">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PapayaWhip">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PeachPuff">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Peru">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Pink">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Plum">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.PowderBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Purple">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Red">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.RosyBrown">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.RoyalBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SaddleBrown">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Salmon">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SandyBrown">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SeaGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SeaShell">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Sienna">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Silver">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SkyBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SlateBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SlateGray">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Snow">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SpringGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.SteelBlue">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Tan">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Teal">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Thistle">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Tomato">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Transparent">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Turquoise">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Violet">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Wheat">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.White">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.WhiteSmoke">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.Yellow">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XBrushes.YellowGreen">
            <summary>Gets a pre-defined XBrush object.</summary>
        </member>
        <member name="T:PdfSharp.Drawing.XColor">
            <summary>
             Represents a RGB, CMYK, or gray scale color.
             </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.FromKnownColor(System.Drawing.KnownColor)">
            <summary>
            Creates an XColor from the specified pre-defined color.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.FromName(System.String)">
            <summary>
            Creates an XColor from the specified name of a pre-defined color.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.ToGdiColor">
            <summary>
             Creates a System.Drawing.Color object from this color.
             </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.GetHue">
            <summary>
            Gets the hue-saturation-brightness (HSB) hue value, in degrees, for this color.
            </summary>
            <returns>The hue, in degrees, of this color. The hue is measured in degrees, ranging from 0 through 360, in HSB color space.</returns>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.GetSaturation">
            <summary>
            Gets the hue-saturation-brightness (HSB) saturation value for this color.
            </summary>
            <returns>The saturation of this color. The saturation ranges from 0 through 1, where 0 is grayscale and 1 is the most saturated.</returns>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.GetBrightness">
            <summary>
            Gets the hue-saturation-brightness (HSB) brightness value for this color.
            </summary>
            <returns>The brightness of this color. The brightness ranges from 0 through 1, where 0 represents black and 1 represents white.</returns>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.RgbChanged">
            <summary>
             One of the RGB values changed; recalculate other color representations.
             </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.CmykChanged">
            <summary>
             One of the CMYK values changed; recalculate other color representations.
             </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XColor.GrayChanged">
            <summary>
             The gray scale value changed; recalculate other color representations.
             </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XColor.Empty">
            <summary>
            Represents the null color.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.ColorSpace">
            <summary>
            Gets or sets the color space to be used for PDF generation.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.IsEmpty">
            <summary>
            Indicates whether this XColor structure is uninitialized.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.A">
            <summary>
            Gets or sets the alpha value the specifies the transparency. 
            The value is in the range from 1 (opaque) to 0 (completely transparent).
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.R">
            <summary>
            Gets or sets the red value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.G">
            <summary>
            Gets or sets the green value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.B">
            <summary>
            Gets or sets the blue value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.Rgb">
            <summary>
            Gets the RGB part value of the color. Internal helper function.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.Argb">
            <summary>
            Gets the ARGB part value of the color. Internal helper function.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.C">
            <summary>
            Gets or sets the cyan value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.M">
            <summary>
            Gets or sets the magenta value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.Y">
            <summary>
            Gets or sets the yellow value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.K">
            <summary>
            Gets or sets the black (or key) value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.GS">
            <summary>
            Gets or sets the gray scale value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColor.RgbCmykG">
            <summary>
             Special property for XmlSerializer only.
             </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XColors">
            <summary>
             Represents a set of 141 pre-defined RGB colors. Incidentally the values are the same
             as in System.Drawing.Color.
             </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.AliceBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.AntiqueWhite">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Aqua">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Aquamarine">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Azure">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Beige">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Bisque">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Black">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.BlanchedAlmond">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Blue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.BlueViolet">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Brown">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.BurlyWood">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.CadetBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Chartreuse">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Chocolate">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Coral">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.CornflowerBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Cornsilk">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Crimson">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Cyan">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkCyan">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkGoldenrod">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkKhaki">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkMagenta">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkOliveGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkOrange">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkOrchid">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkRed">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkSalmon">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkSeaGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkSlateBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkSlateGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkTurquoise">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DarkViolet">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DeepPink">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DeepSkyBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DimGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.DodgerBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Firebrick">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.FloralWhite">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.ForestGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Fuchsia">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Gainsboro">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.GhostWhite">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Gold">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Goldenrod">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Gray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Green">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.GreenYellow">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Honeydew">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.HotPink">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.IndianRed">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Indigo">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Ivory">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Khaki">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Lavender">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LavenderBlush">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LawnGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LemonChiffon">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightCoral">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightCyan">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightGoldenrodYellow">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightPink">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightSalmon">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightSeaGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightSkyBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightSlateGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightSteelBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LightYellow">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Lime">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.LimeGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Linen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Magenta">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Maroon">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumAquamarine">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumOrchid">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumPurple">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumSeaGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumSlateBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumSpringGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumTurquoise">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MediumVioletRed">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MidnightBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MintCream">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.MistyRose">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Moccasin">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.NavajoWhite">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Navy">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.OldLace">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Olive">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.OliveDrab">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Orange">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.OrangeRed">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Orchid">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PaleGoldenrod">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PaleGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PaleTurquoise">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PaleVioletRed">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PapayaWhip">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PeachPuff">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Peru">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Pink">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Plum">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.PowderBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Purple">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Red">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.RosyBrown">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.RoyalBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SaddleBrown">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Salmon">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SandyBrown">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SeaGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SeaShell">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Sienna">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Silver">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SkyBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SlateBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SlateGray">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Snow">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SpringGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.SteelBlue">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Tan">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Teal">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Thistle">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Tomato">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Transparent">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Turquoise">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Violet">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Wheat">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.White">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.WhiteSmoke">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.Yellow">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XColors.YellowGreen">
            <summary>Gets a predefined color.</summary>
        </member>
        <member name="T:PdfSharp.Drawing.XConvert">
            <summary>
            Converts XGraphics enums to GDI+ enums.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XConvert.ToLineJoin(PdfSharp.Drawing.XLineJoin)">
            <summary>
            Converts XLineJoin to LineJoin.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XConvert.ToLineCap(PdfSharp.Drawing.XLineCap)">
            <summary>
            Converts XLineCap to LineCap.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XFont">
            <summary>
            Defines an object used to draw glyphs.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFont.GetHeight">
            <summary>
            Returns the line spacing, in pixels, of this font. The line spacing is the vertical distance
            between the base lines of two consecutive lines of text. Thus, the line spacing includes the
            blank space between lines along with the height of the character itself.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFont.GetHeight(PdfSharp.Drawing.XGraphics)">
            <summary>
            Returns the line spacing, in the current unit of a specified Graphics object, of this font.
            The line spacing is the vertical distance between the base lines of two consecutive lines of
            text. Thus, the line spacing includes the blank space between lines along with the height of
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XFont.selector">
            <summary>
            Cache PdfFontTable.FontSelector to speed up finding the right PdfFont
            if this font is used more than once.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.FontFamily">
            <summary>
            Gets the XFontFamily object associated with this XFont object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Name">
            <summary>
            Gets the face name of this Font object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Size">
            <summary>
            Gets the em-size of this Font object measured in the unit of this Font object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Height">
            <summary>
            Gets the line spacing of this font.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Style">
            <summary>
            Gets style information for this Font object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Bold">
            <summary>
            Indicates whether this XFont object is bold.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Italic">
            <summary>
            Indicates whether this XFont object is italic.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFont.Metrics">
            <summary>
            Gets
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XFontFamily">
            <summary>
            Defines a group of type faces having a similar basic design and certain variations in styles.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.GetCellAscent(PdfSharp.Drawing.XFontStyle)">
            <summary>
            Returns the cell ascent, in design units, of the XFontFamily object of the specified style.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.GetCellDescent(PdfSharp.Drawing.XFontStyle)">
            <summary>
            Returns the cell descent, in design units, of the XFontFamily object of the specified style.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.GetEmHeight(PdfSharp.Drawing.XFontStyle)">
            <summary>
            Gets the height, in font design units, of the em square for the specified style.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.GetLineSpacing(PdfSharp.Drawing.XFontStyle)">
            <summary>
            Returns the line spacing, in design units, of the FontFamily object of the specified style.
            The line spacing is the vertical distance between the base lines of two consecutive lines of text.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.IsStyleAvailable(PdfSharp.Drawing.XFontStyle)">
            <summary>
            Indicates whether the specified FontStyle enumeration is available.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XFontFamily.GetFamilies(PdfSharp.Drawing.XGraphics)">
            <summary>
            Returns an array that contains all the FontFamily objects available for the specified 
            graphics context.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XFontFamily.family">
            <summary>
            GDI+ object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XFontFamily.Families">
            <summary>
            Returns an array that contains all the FontFamily objects associated with the current graphics context.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XFontMetrics">
            <summary>
            Summary description for XFontMetrics.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XForm">
            <summary>
            
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XImage">
            <summary>
            Defines an object used to draw image files (bmp, png, jpeg, gif) and PDF forms.
            An abstract base class that provides functionality for the Bitmap and Metafile descended classes.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XImage.Dispose">
            <summary>
            under construction
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XImage.path">
            <summary>
            If path starts with '*' the image is created from a stream and the path is a GUID.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XImage.selector">
            <summary>
            Cache PdfImageTable.ImageSelector to speed up finding the right PdfImage
            if this image is used more than once.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XImage.Interpolate">
            <summary>
            Gets or sets a flag indicating whether image interpolation is to be performed. 
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.#ctor(PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of the XForm class such that it can be drawn on the specifed graphics
            object.
            </summary>
            <param name="gfx">The graphics object that later is used to draw this form.</param>
            <param name="size">The size in points of the form.</param>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.#ctor(PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XUnit,PdfSharp.Drawing.XUnit)">
            <summary>
            Initializes a new instance of the XForm class such that it can be drawn on the specifed graphics
            object.
            </summary>
            <param name="gfx">The graphics object that later is used to draw this form.</param>
            <param name="width">The width of the form.</param>
            <param name="height">The height of the form.</param>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.DrawingFinished">
            <summary>
            This function should be called when drawing the content of this form is finished.
            The XGraphics object used for drawing the content is disposed by this function and 
            cannot be used for any further drawing operations.
            PDFsharp automatically calls this function when this form was used the first time
            in a DrawImage function. 
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.AssociateGraphics(PdfSharp.Drawing.XGraphics)">
            <summary>
            Called from XGraphics constructor that creates an instance that work on this form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.Finish">
            <summary>
            Sets the form in the state FormState.Finished.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.GetFontName(PdfSharp.Drawing.XFont,PdfSharp.Pdf.Advanced.PdfFont@)">
            <summary>
            Gets the resource name of the specified font within this form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.GetImageName(PdfSharp.Drawing.XImage)">
            <summary>
            Gets the resource name of the specified image within this form.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XForm.GetFormName(PdfSharp.Drawing.XForm)">
            <summary>
            Gets the resource name of the specified form within this form.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XForm.pdfForm">
            <summary>
            The PdfFormXObject gets invalid when PageNumber or transform changed. This is because a modification
            of an XPdfForm must not change objects that are already been drawn.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XForm.Width">
            <summary>
            Get the width of the page identified by the property PageNumber.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XForm.Height">
            <summary>
            Get the width of the page identified by the property PageNumber.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XForm.HorizontalResolution">
            <summary>
            Gets 72, the horizontal resolution by design of a form object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XForm.VerticalResolution">
            <summary>
            Gets 72, the vertical resolution by design of a form object.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XForm.FormState.NotATemplate">
            <summary>
            The form is an imported page.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XForm.FormState.Created">
            <summary>
            The template is just created.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XForm.FormState.UnderConstruction">
            <summary>
            XGraphics.FromForm() was called.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XForm.FormState.Finished">
            <summary>
            The form was drawn at least once and is 'frozen' now.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphics">
            <summary>
            Represents a drawing surface (or canvas) for a fixed size page.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.#ctor(System.Drawing.Graphics,PdfSharp.Drawing.XSize,PdfSharp.Drawing.XGraphicsUnit,PdfSharp.Drawing.XPageDirection)">
            <summary>
            Initializes a new instance of the XGraphics class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.#ctor(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsPdfPageOptions,PdfSharp.Drawing.XGraphicsUnit,PdfSharp.Drawing.XPageDirection)">
            <summary>
            Initializes a new instance of the XGraphics class for drawing on a PDF page.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.#ctor(PdfSharp.Drawing.XForm)">
            <summary>
            Initializes a new instance of the XGraphics class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromGraphics(System.Drawing.Graphics,PdfSharp.Drawing.XSize)">
            <summary>
            Creates a new instance of the XGraphics class from a System.Drawing.Graphics object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromGraphics(System.Drawing.Graphics,PdfSharp.Drawing.XSize,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Creates a new instance of the XGraphics class from a System.Drawing.Graphics object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XPageDirection)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsPdfPageOptions)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsPdfPageOptions,PdfSharp.Drawing.XPageDirection)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsPdfPageOptions,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfPage(PdfSharp.Pdf.PdfPage,PdfSharp.Drawing.XGraphicsPdfPageOptions,PdfSharp.Drawing.XGraphicsUnit,PdfSharp.Drawing.XPageDirection)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Pdf.PdfPage object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromPdfForm(PdfSharp.Drawing.XPdfForm)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Drawing.XPdfForm object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.FromForm(PdfSharp.Drawing.XForm)">
            <summary>
            Creates a new instance of the XGraphics class from a PdfSharp.Drawing.XForm object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.Initialize">
            <summary>
            Internal setup.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.Dispose">
            <summary>
            Releases all resources used by this object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.Clear(PdfSharp.Drawing.XColor)">
            <summary>
            Fills the entire drawing surface with the specified color. The functions works only if
            the current transformation is identity, i.e. the function should be called only immediately
            after the XGraphics object was created.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.DrawLine(PdfSharp.Drawing.XPen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line connecting two Point structures.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.DrawLine(PdfSharp.Drawing.XPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.DrawLine(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint)">
            <summary>
            Draws a line connecting two XPoint structures.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.DrawLine(PdfSharp.Drawing.XPen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.DrawLine(PdfSharp.Drawing.XPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.CheckXPdfFormConsistence(PdfSharp.Drawing.XImage)">
            <summary>
            Checks whether drawing is allowed and disposes the XGraphics object, if neccessary.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.Save">
            <summary>
            Saves the current state of this XGraphics object and identifies the saved state with the
            returned XGraphicsState object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.Restore(PdfSharp.Drawing.XGraphicsState)">
            <summary>
            Restores the state of this XGraphics object to the state represented by the specified 
            XGraphicsState object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.TranslateTransform(System.Double,System.Double)">
            <summary>
            Applies the specified translation operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.TranslateTransform(System.Double,System.Double,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Applies the specified translation operation to the transformation matrix of this object
            in the specified order.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ScaleTransform(System.Double,System.Double)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ScaleTransform(System.Double,System.Double,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this object
            in the specified order.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ScaleTransform(System.Double)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ScaleTransform(System.Double,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this object
            in the specified order.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.RotateTransform(System.Double)">
            <summary>
            Applies the specified rotation operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.RotateTransform(System.Double,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Applies the specified rotation operation to the transformation matrix of this object
            in the specified order. The angle unit of measure is degree.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.RotateAtTransform(System.Double,PdfSharp.Drawing.XPoint)">
            <summary>
            Applies the specified rotation operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.RotateAtTransform(System.Double,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Applies the specified rotation operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MultiplyTransform(PdfSharp.Drawing.XMatrix)">
            <summary>
            Multiplies the transformation matrix of this object and specified matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MultiplyTransform(PdfSharp.Drawing.XMatrix,PdfSharp.Drawing.XMatrixOrder)">
            <summary>
            Multiplies the transformation matrix of this object and specified matrix in the specified order.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ResetTransform">
            <summary>
            Resets the transformation matrix of this object to the identity matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.ResetClip">
            <summary>
            Empties the clip region, i.e. no clipping takes place.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.WriteComment(System.String)">
            <summary>
            Writes a comment to the output stream. Comments have no effect on the rendering of the output.
            They may be useful to mark a position in a content stream of a PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MakePointFArray(System.Drawing.Point[])">
            <summary>
            Converts a Point[] into a PointF[].
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MakePointFArray(PdfSharp.Drawing.XPoint[])">
            <summary>
            Converts a XPoint[] into a PointF[].
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MakeXPointArray(System.Drawing.Point[])">
            <summary>
            Converts a Point[] into a XPoint[].
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.MakeXPointArray(System.Drawing.PointF[])">
            <summary>
            Converts a PointF[] into a XPoint[].
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.gfx">
            <summary>
            Always defined System.Drawing.Graphics object. Used as 'query context' for PDF pages.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.defaultViewMatrix">
            <summary>
            The transformation matrix from the XGraphics page space to the Graphics world space.
            (The name 'default view matrix' comes from Microsoft OS/2 Presentation Manager. I choose
            this name because I have no better one.)
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.drawGraphics">
            <summary>
            Indicates whether to send drawing operations to this.gfx.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.renderer">
            <summary>
            Interface to an (optional) renderer. Currently it is the XGraphicsPdfRenderer, if defined.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.transform">
            <summary>
            The transformation matrix from XGraphics world space to page unit space.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphics.gsStack">
            <summary>
            The graphics state stack.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.MUH">
            <summary>
            Internal hack for MigraDoc. Will be removed in further releases.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.PageUnit">
            <summary>
            Gets or sets the unit of measure used for page coordinates.
            CURRENTLY ONLY POINT IS IMPLEMENTED.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.PageDirection">
            <summary>
            Gets or sets the a value indicating in which direction y-value grow.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.GraphicsStateLevel">
            <summary>
            Gets the current graphics state level. The default value is 0. Each call of Save or BeginContainer
            increased and each call of Restore or EndContainer decreased the value by 1.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.Transform">
            <summary>
            Gets or sets the transformation matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.Internals">
            <summary>
            Permits acces to internal data.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.Transformer">
            <summary>
            (Under construction. May change in future versions.)
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.PdfPage">
            <summary>
            Gets the PDF page that serves as drawing surface if PDF is rendered, otherwise null.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.Graphics">
            <summary>
            Gets the System.Drawing.Graphics objects that serves as drawing surface if no PDF is rendered,
            or null, if no such object exists.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphics.XGraphicsInternals.Graphics">
            <summary>
            Gets the underlying Graphics object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphics.SpaceTransformer">
            <summary>
            (This class is under construction.)
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphics.SpaceTransformer.WorldToDefaultPage(PdfSharp.Drawing.XRect)">
            <summary>
            Gets the smalles rectangle in default page space units that completely encloses the specified rect
            in world space units.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsContainer">
            <summary>
            Represents the internal state of an XGraphics object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsPath">
            <summary>
            Represents a series of connected lines and curves.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.#ctor">
            <summary>
            Initializes a new instance of the XGraphicsPath class. 
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XGraphicsPath.gdipPath">
            <summary>
            Gets access to underlying GDI+ path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.GetPathData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Adds a line segment to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds  a line segment to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLine(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint)">
            <summary>
            Adds  a line segment to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds  a line segment to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds  a line segment to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLines(System.Drawing.Point[])">
            <summary>
            Adds a series of connected line segments to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLines(System.Drawing.PointF[])">
            <summary>
            Adds a series of connected line segments to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddLines(PdfSharp.Drawing.XPoint[])">
            <summary>
            Adds a series of connected line segments to current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBezier(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a cubic Bézier curve to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBeziers(System.Drawing.Point[])">
            <summary>
            Adds a sequence of connected cubic Bézier curves to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBeziers(System.Drawing.PointF[])">
            <summary>
            Adds a sequence of connected cubic Bézier curves to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddBeziers(PdfSharp.Drawing.XPoint[])">
            <summary>
            Adds a sequence of connected cubic Bézier curves to the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangle(System.Drawing.Rectangle)">
            <summary>
            Adds a rectangle to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangle(System.Drawing.RectangleF)">
            <summary>
            Adds a rectangle to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangle(PdfSharp.Drawing.XRect)">
            <summary>
            Adds a rectangle to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a rectangle to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a rectangle to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
            <summary>
            Adds a series of rectangles to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
            <summary>
            Adds a series of rectangles to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddRectangles(PdfSharp.Drawing.XRect[])">
            <summary>
            Adds a series of rectangles to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddEllipse(System.Drawing.Rectangle)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddEllipse(System.Drawing.RectangleF)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddEllipse(PdfSharp.Drawing.XRect)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddEllipse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds an ellipse to the current path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddPolygon(System.Drawing.Point[])">
            <summary>
            Adds a polygon to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddPolygon(System.Drawing.PointF[])">
            <summary>
            Adds a polygon to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddPolygon(PdfSharp.Drawing.XPoint[])">
            <summary>
            Adds a polygon to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.AddPath(PdfSharp.Drawing.XGraphicsPath,System.Boolean)">
            <summary>
            Adds the specified path to this path.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.CloseFigure">
            <summary>
            Closes the current figure and starts a new figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.StartFigure">
            <summary>
            Starts a new figure without closing the current figure.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Flatten">
            <summary>
            Converts each curve in this XGraphicsPath into a sequence of connected line segments. 
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Flatten(PdfSharp.Drawing.XMatrix)">
            <summary>
            Converts each curve in this XGraphicsPath into a sequence of connected line segments. 
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Flatten(PdfSharp.Drawing.XMatrix,System.Double)">
            <summary>
            Converts each curve in this XGraphicsPath into a sequence of connected line segments. 
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Widen(PdfSharp.Drawing.XPen)">
            <summary>
            Replaces this path with curves that enclose the area that is filled when this path is drawn 
            by the specified pen.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Widen(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XMatrix)">
            <summary>
            Replaces this path with curves that enclose the area that is filled when this path is drawn 
            by the specified pen.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.Widen(PdfSharp.Drawing.XPen,PdfSharp.Drawing.XMatrix,System.Double)">
            <summary>
            Replaces this path with curves that enclose the area that is filled when this path is drawn 
            by the specified pen.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XGraphicsPath.RealizeGdiPath">
            <summary>
            Converts the XGraphicsPath into a GDI+ path.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XGraphicsPath.FillMode">
            <summary>
            Gets or sets an XFillMode that determines how the interiors of shapes are filled.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsPathItem">
            <summary>
            Represents a segment of a path defined by a type and a set of points.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XGraphicsState">
            <summary>
            Represents the internal state of an XGraphics object.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XImageFormat">
            <summary>
            Specifies the format of the image.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XLinearGradientBrush">
            <summary>
            Defines a Brush with a linear gradient.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XMatrix">
            <summary>
            Represents a 3-by-3 matrix that represents an affine 2D transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
            <summary>
            Initializes a new instance of the Matrix class to the transform defined by the specified rectangle and 
            array of points.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Matrix class with the specified points.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.Invert">
            <summary>
            Inverts this XMatrix object. Throws an exception if the matrix is not invertible.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.Multiply(PdfSharp.Drawing.XMatrix)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.TransformPoints(System.Drawing.Point[])">
            <summary>
            Multiplies all points of the specified array with the this matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.TransformPoints(PdfSharp.Drawing.XPoint[])">
            <summary>
            Multiplies all points of the specified array with the this matrix.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.TransformVectors(PdfSharp.Drawing.XPoint[])">
            <summary>
            Multiplies all vectors of the specified array with the this matrix. The translation elements 
            of this matrix (third row) are ignored.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.TransformVectors(System.Drawing.PointF[])">
            <summary>
            Multiplies all vectors of the specified array with the this matrix. The translation elements 
            of this matrix (third row) are ignored.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XMatrix.ToMatrix">
            <summary>
            Converts this matrix to a System.Drawing.Drawing2D.Matrix object.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.Elements">
            <summary>
            Gets an array of double values that represents the elements of this matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.M11">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.M12">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.M21">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.M22">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.OffsetX">
            <summary>
            Gets the x translation value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.OffsetY">
            <summary>
            Gets the y translation value.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.IsIdentity">
            <summary>
            Indicates whether this matrix is the identity matrix.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.IsInvertible">
            <summary>
            Indicates whether this matrix is invertible, i. e. its determinant is not zero.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XMatrix.Identity">
            <summary>
            Gets an identity matrix.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPdfForm">
            <summary>
            Represents a so called 'PDF form external object', which is typically an imported page of an external
            PDF document. XPdfForm objects are used like images to draw an existing PDF page of an external
            document in the current document. XPdfForm objects can only be placed in PDF documents. If you try
            to draw them using a XGraphics based on an GDI+ context no action is taken if no placeholder image
            is specified. Otherwise the place holder is drawn.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfForm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XPdfForm class from the specified path to an external PDF document.
            Although PDFsharp internally caches XPdfForm objects it is recommended to reuse PdfXFrom objects
            in your code and change the PageNumber property if more than one page is neede form the external
            document. Furthermore, because XPdfForm can occupy very much memory, it is recommended to
            dispose XPdfForm objects if not needed anymore.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfForm.Finish">
            <summary>
            Sets the form in the state FormState.Finished.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfForm.Dispose(System.Boolean)">
            <summary>
            TODO:
            Frees the memory occupied by the underlying imported PDF document, even if other XPdfForm objects
            refer to this document. A reuse of this object doesnt fail, because the underlying PDF document
            is re-imported if neccessary. NYI
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPdfForm.ExtractPageNumber(System.String,System.Int32@)">
            <summary>
            Extracts the page number if the path has the form 'MyFile.pdf#123' and returns
            the actual path without the number sign and the following digits.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.PlaceHolder">
            <summary>
            Gets or sets an image that is used for drawing if the current XGraphics object cannot handle
            PDF forms. A place holder is useful for showing a preview of a page on the display, because
            PDFsharp cannot render native PDF objects.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.Page">
            <summary>
            Gets the underlying PdfPage (if one exists).
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.PageCount">
            <summary>
            Gets the number of pages in the PDF form.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.Width">
            <summary>
            Get the width of the page identified by the property PageNumber.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.Height">
            <summary>
            Get the width of the page identified by the property PageNumber.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.PageNumber">
            <summary>
            Gets or sets the page number in the external PDF document this object refers to. The page number
            is one-based, i.e. it is in the range from 1 to PageCount. The default value is 1.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPdfForm.ExternalDocument">
            <summary>
            Gets the underlying document from which pages are imported.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPen">
            <summary>
            Defines an object used to draw lines and curves.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPens">
            <summary>
            Pens for all the pre-defined colors.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.AliceBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.AntiqueWhite">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Aqua">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Aquamarine">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Azure">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Beige">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Bisque">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Black">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.BlanchedAlmond">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Blue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.BlueViolet">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Brown">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.BurlyWood">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.CadetBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Chartreuse">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Chocolate">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Coral">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.CornflowerBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Cornsilk">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Crimson">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Cyan">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkCyan">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkGoldenrod">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkKhaki">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkMagenta">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkOliveGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkOrange">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkOrchid">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkRed">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkSalmon">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkSeaGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkSlateBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkSlateGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkTurquoise">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DarkViolet">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DeepPink">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DeepSkyBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DimGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.DodgerBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Firebrick">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.FloralWhite">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.ForestGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Fuchsia">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Gainsboro">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.GhostWhite">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Gold">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Goldenrod">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Gray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Green">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.GreenYellow">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Honeydew">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.HotPink">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.IndianRed">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Indigo">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Ivory">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Khaki">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Lavender">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LavenderBlush">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LawnGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LemonChiffon">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightCoral">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightCyan">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightGoldenrodYellow">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightPink">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightSalmon">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightSeaGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightSkyBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightSlateGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightSteelBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LightYellow">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Lime">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.LimeGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Linen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Magenta">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Maroon">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumAquamarine">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumOrchid">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumPurple">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumSeaGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumSlateBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumSpringGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumTurquoise">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MediumVioletRed">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MidnightBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MintCream">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.MistyRose">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Moccasin">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.NavajoWhite">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Navy">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.OldLace">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Olive">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.OliveDrab">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Orange">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.OrangeRed">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Orchid">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PaleGoldenrod">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PaleGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PaleTurquoise">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PaleVioletRed">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PapayaWhip">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PeachPuff">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Peru">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Pink">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Plum">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.PowderBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Purple">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Red">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.RosyBrown">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.RoyalBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SaddleBrown">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Salmon">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SandyBrown">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SeaGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SeaShell">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Sienna">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Silver">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SkyBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SlateBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SlateGray">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Snow">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SpringGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.SteelBlue">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Tan">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Teal">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Thistle">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Tomato">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Transparent">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Turquoise">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Violet">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Wheat">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.White">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.WhiteSmoke">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.Yellow">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPens.YellowGreen">
            <summary>Gets a pre-defined XPen object.</summary>
        </member>
        <member name="T:PdfSharp.Drawing.XPoint">
            <summary>
            Represents a pair of floating point x- and y-coordinates that defines a point
            in a two-dimensional plane.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the XPoint class with the specified coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPoint.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the XPoint class with the specified point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPoint.#ctor(System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the XPoint class with the specified point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPoint.ToString">
            <summary>
            Converts this XPoint to a human readable string.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XPoint.ToPointF">
            <summary>
            Converts this XPoint to a PoinF.
            </summary>
        </member>
        <member name="F:PdfSharp.Drawing.XPoint.Empty">
            <summary>
            Represents a new instance of the XPoint class with member data left uninitialized.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPoint.X">
            <summary>
            Gets the x-coordinate of this XPoint.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPoint.Y">
            <summary>
            Gets the y-coordinate of this XPoint.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XPoint.IsEmpty">
            <summary>
            Indicates whether this XPoint is empty.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XRect">
            <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the XRect class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XRect.#ctor(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of the XRect class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XRect.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the XRect class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XRect.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the XRect class.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XRect.Center">
            <summary>
            Gets the center of the rectangle.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XSize">
            <summary>
            Represents a pair of floating-point numbers, typically the width and height of a
            graphical object.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XSize.ToPointF">
            <summary>
            Converts this XSize to a PointF.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XSize.ToXPoint">
            <summary>
            Converts this XSize to an XPoint.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XSize.ToSizeF">
            <summary>
            Converts this XSize to a SizeF.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XSolidBrush">
            <summary>
            Defines a single color object used to fill shapes and draw text.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XStringFormat">
            <summary>
            Represents the text layout information.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.Alignment">
            <summary>
            Gets or sets horizontal text alignment information.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.LineAlignment">
            <summary>
            Gets or sets the line alignment.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.Default">
            <summary>
            Gets a new XStringFormat object that aligns the text left on the base line.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.TopLeft">
            <summary>
            Gets a new XStringFormat object that aligns the text top left of the layout rectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.Center">
            <summary>
            Gets a new XStringFormat object that centers the text in the middle of the layout rectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.TopCenter">
            <summary>
            Gets a new XStringFormat object that centers the text at the top of the layout rectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.BottomCenter">
            <summary>
            Gets a new XStringFormat object that centers the text at the bottom of the layout rectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XStringFormat.FormatFlags">
            <summary>
            Gets or sets flags with format information.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XUnit">
            <summary>
            Represents a value and its unit of measure. The structure converts implicitly from and to
            double with value in point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the XUnit class with type set to point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.#ctor(System.Double,PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Initializes a new instance of the XUnit class.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.ToString(System.IFormatProvider)">
            <summary>
            Returns the object as string using the format information.
            The unit of measure is appended to the end of the string.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.System#IFormattable#ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns the object as string using the specified format and format information.
            The unit of measure is appended to the end of the string.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.ToString">
            <summary>
            Returns the object as string. The unit of measure is appended to the end of the string.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.GetSuffix">
            <summary>
            Returns the unit of measure of the object as a string like 'pt', 'cm', or 'in'.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.FromCentimeter(System.Double)">
            <summary>
            Returns an XUnit object. Sets type to centimeters.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.FromMillimeter(System.Double)">
            <summary>
            Returns an XUnit object. Sets type to millimeters.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.FromPoint(System.Double)">
            <summary>
            Returns an XUnit object. Sets type to point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.FromInch(System.Double)">
            <summary>
            Returns an XUnit object. Sets type to inch.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Implicit(System.String)~PdfSharp.Drawing.XUnit">
            <summary>
            Converts a string to an XUnit object.
            If the string contains a suffix like 'cm' or 'in' the object will be converted
            to the appropriate type, otherwise point is assumed.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Implicit(System.Int32)~PdfSharp.Drawing.XUnit">
            <summary>
            Converts an int to an XUnit object with type set to point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Implicit(System.Double)~PdfSharp.Drawing.XUnit">
            <summary>
            Converts a double to an XUnit object with type set to point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Implicit(PdfSharp.Drawing.XUnit)~System.Double">
            <summary>
            Returns a double value as point.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Equality(PdfSharp.Drawing.XUnit,PdfSharp.Drawing.XUnit)">
            <summary>
            Memberwise comparison. To compare by value, 
            use code like Math.Abs(a.Pt - b.Pt) &lt; 1e5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.op_Inequality(PdfSharp.Drawing.XUnit,PdfSharp.Drawing.XUnit)">
            <summary>
            Memberwise comparison. To compare by value, 
            use code like Math.Abs(a.Pt - b.Pt) &lt; 1e5.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.Equals(System.Object)">
            <summary>
            Calls base class Equals.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.Parse(System.String)">
            <summary>
            This member is intended to be used by XmlDomainObjectReader only.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XUnit.ConvertType(PdfSharp.Drawing.XGraphicsUnit)">
            <summary>
            Converts an existing object from one unit into another unit type.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Value">
            <summary>
            Gets the raw value of the object without any conversion.
            To determine the XGraphicsUnit use property <code>Type</code>.
            To get the value in point use the implicit convertion to double.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Type">
            <summary>
            Gets the unit of measure.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Point">
            <summary>
            Gets or sets the value in point.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Centimeter">
            <summary>
            Gets or sets the value in centimeter.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Inch">
            <summary>
            Gets or sets the value in inch.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XUnit.Millimeter">
            <summary>
            Gets or sets the value in millimeter.
            </summary>
        </member>
        <member name="T:PdfSharp.Drawing.XVector">
            <summary>
            Represents a two-dimensional vector specified by x- and y-coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XVector.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the XVector class with the specified coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Drawing.XVector.ToString">
            <summary>
            Converts this XVector to a human readable string.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XVector.X">
            <summary>
            Gets the x-coordinate of this XVector.
            </summary>
        </member>
        <member name="P:PdfSharp.Drawing.XVector.Y">
            <summary>
            Gets the y-coordinate of this XVector.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.FontSelector">
            <summary>
            A collection of information that uniquely idendifies a particular font.
            Used to map XFont to PdfFont.
            There is a one to one relationship between a FontSelector and a TrueType/OpenType file.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontSelector.ToString">
            <summary>
            Returns a string for diagnostic purposes only.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.FontDescriptorStock">
            <summary>
            Global table of TrueType fontdescriptor objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontDescriptorStock.FindDescriptor(PdfSharp.Fonts.TrueType.FontSelector)">
            <summary>
            Gets the FontDescriptor identified by the specified FontSelector. Returns null if no
            such objects exists.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontDescriptorStock.CreateDescriptor(PdfSharp.Drawing.XFont)">
            <summary>
            Gets the FontDescriptor identified by the specified FontSelector. If no such objects 
            exists, a new FontDescriptor is created and added to the stock.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.Read">
            <summary>
            Reads all required table from the font prgram.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadByte">
            <summary>
            Reads a System.Byte.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadShort">
            <summary>
            Reads a System.Int16.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadUShort">
            <summary>
            Reads a System.UInt16.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadLong">
            <summary>
            Reads a System.Int32.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadULong">
            <summary>
            Reads a System.UInt32.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadFixed">
            <summary>
            Reads a System.Int32.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadFWord">
            <summary>
            Reads a System.Int16.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadUFWord">
            <summary>
            Reads a System.UInt16.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadLongDate">
            <summary>
            Reads a System.Int64.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadString(System.Int32)">
            <summary>
            Reads a System.String with the specified size.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadBytes(System.Int32)">
            <summary>
            Reads a System.Byte[] with the specified size.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.FontImage.ReadTag">
            <summary>
            Reads a System.Char[4] as System.String.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.CMap4">
            <summary>
            CMap format 4: Segment mapping to delta values.
            The Windows standard format.
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.TrueType.CMapTable.symbol">
            <summary>
            Is true for symbol font encoding.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.MaximumProfileTable">
            <summary>
            This table establishes the memory requirements for this font.
            Fonts with CFF data must use Version 0.5 of this table, specifying only the numGlyphs field.
            Fonts with TrueType outlines must use Version 1.0 of this table, where all data is required.
            Both formats of OpenType require a 'maxp' table because a number of applications call the 
            Windows GetFontData() API on the 'maxp' table to determine the number of glyphs in the font.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.OS2Table">
            <summary>
            The OS/2 table consists of a set of metrics that are required in OpenType fonts. 
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.PostScriptTable">
            <summary>
            This table contains additional information needed to use TrueType or OpenTypeTM fonts
            on PostScript printers. 
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.FontDescriptor">
            <summary>
            Base class for all font descriptors.
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FontFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FontType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FontName">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FullName">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FamilyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Weight">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.ItalicAngle">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.XMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.YMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.XMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.YMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.IsFixedPitch">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.UnderlinePosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.UnderlineThickness">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Notice">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.EncodingScheme">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.CapHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.XHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Ascender">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Descender">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.StemV">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Fonts.TrueType.FontDescriptor.FontMetrics">
            <summary>
            Under Construction
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.TrueType.TrueTypeDescriptor">
            <summary>
            The TrueType font desriptor.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.TrueTypeDescriptor.CharCodeToGlyphIndex(System.Char)">
            <summary>
            Maps a unicode to the index of the corresponding glyph.
            See OpenType spec "cmap - Character To Glyph Index Mapping Table / Format 4: Segment mapping to delta values"
            for details about this a little bit strange looking algorythm.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.TrueType.TrueTypeDescriptor.GlyphIndexToPdfWidth(System.Int32)">
            <summary>
            Converts the width of a glyph identified by its index to PDF design units.
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.AdobeGlyphList20">
            <summary>
            
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.AdobeGlyphListForNewFonts">
            <summary>
            Testing only
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.A">
            <summary>
            LATIN CAPITAL LETTER A
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.AE">
            <summary>
            LATIN CAPITAL LETTER AE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.AEacute">
            <summary>
            LATIN CAPITAL LETTER AE WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Aacute">
            <summary>
            LATIN CAPITAL LETTER A WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Abreve">
            <summary>
            LATIN CAPITAL LETTER A WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Acircumflex">
            <summary>
            LATIN CAPITAL LETTER A WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Adieresis">
            <summary>
            LATIN CAPITAL LETTER A WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Agrave">
            <summary>
            LATIN CAPITAL LETTER A WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Alpha">
            <summary>
            GREEK CAPITAL LETTER ALPHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Alphatonos">
            <summary>
            GREEK CAPITAL LETTER ALPHA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Amacron">
            <summary>
            LATIN CAPITAL LETTER A WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Aogonek">
            <summary>
            LATIN CAPITAL LETTER A WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Aring">
            <summary>
            LATIN CAPITAL LETTER A WITH RING ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Aringacute">
            <summary>
            LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Atilde">
            <summary>
            LATIN CAPITAL LETTER A WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.B">
            <summary>
            LATIN CAPITAL LETTER B
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Beta">
            <summary>
            GREEK CAPITAL LETTER BETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.C">
            <summary>
            LATIN CAPITAL LETTER C
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Cacute">
            <summary>
            LATIN CAPITAL LETTER C WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ccaron">
            <summary>
            LATIN CAPITAL LETTER C WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ccedilla">
            <summary>
            LATIN CAPITAL LETTER C WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ccircumflex">
            <summary>
            LATIN CAPITAL LETTER C WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Cdotaccent">
            <summary>
            LATIN CAPITAL LETTER C WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Chi">
            <summary>
            GREEK CAPITAL LETTER CHI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.D">
            <summary>
            LATIN CAPITAL LETTER D
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Dcaron">
            <summary>
            LATIN CAPITAL LETTER D WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Dcroat">
            <summary>
            LATIN CAPITAL LETTER D WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Delta">
            <summary>
            INCREMENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.E">
            <summary>
            LATIN CAPITAL LETTER E
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Eacute">
            <summary>
            LATIN CAPITAL LETTER E WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ebreve">
            <summary>
            LATIN CAPITAL LETTER E WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ecaron">
            <summary>
            LATIN CAPITAL LETTER E WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ecircumflex">
            <summary>
            LATIN CAPITAL LETTER E WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Edieresis">
            <summary>
            LATIN CAPITAL LETTER E WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Edotaccent">
            <summary>
            LATIN CAPITAL LETTER E WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Egrave">
            <summary>
            LATIN CAPITAL LETTER E WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Emacron">
            <summary>
            LATIN CAPITAL LETTER E WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Eng">
            <summary>
            LATIN CAPITAL LETTER ENG
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Eogonek">
            <summary>
            LATIN CAPITAL LETTER E WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Epsilon">
            <summary>
            GREEK CAPITAL LETTER EPSILON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Epsilontonos">
            <summary>
            GREEK CAPITAL LETTER EPSILON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Eta">
            <summary>
            GREEK CAPITAL LETTER ETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Etatonos">
            <summary>
            GREEK CAPITAL LETTER ETA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Eth">
            <summary>
            LATIN CAPITAL LETTER ETH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Euro">
            <summary>
            EURO SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.F">
            <summary>
            LATIN CAPITAL LETTER F
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.G">
            <summary>
            LATIN CAPITAL LETTER G
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gamma">
            <summary>
            GREEK CAPITAL LETTER GAMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gbreve">
            <summary>
            LATIN CAPITAL LETTER G WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gcaron">
            <summary>
            LATIN CAPITAL LETTER G WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gcircumflex">
            <summary>
            LATIN CAPITAL LETTER G WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gcommaaccent">
            <summary>
            LATIN CAPITAL LETTER G WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Gdotaccent">
            <summary>
            LATIN CAPITAL LETTER G WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.H">
            <summary>
            LATIN CAPITAL LETTER H
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.H18533">
            <summary>
            BLACK CIRCLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.H18543">
            <summary>
            BLACK SMALL SQUARE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.H18551">
            <summary>
            WHITE SMALL SQUARE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.H22073">
            <summary>
            WHITE SQUARE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Hbar">
            <summary>
            LATIN CAPITAL LETTER H WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Hcircumflex">
            <summary>
            LATIN CAPITAL LETTER H WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.I">
            <summary>
            LATIN CAPITAL LETTER I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.IJ">
            <summary>
            LATIN CAPITAL LIGATURE IJ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Iacute">
            <summary>
            LATIN CAPITAL LETTER I WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ibreve">
            <summary>
            LATIN CAPITAL LETTER I WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Icircumflex">
            <summary>
            LATIN CAPITAL LETTER I WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Idieresis">
            <summary>
            LATIN CAPITAL LETTER I WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Idotaccent">
            <summary>
            LATIN CAPITAL LETTER I WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ifraktur">
            <summary>
            BLACK-LETTER CAPITAL I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Igrave">
            <summary>
            LATIN CAPITAL LETTER I WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Imacron">
            <summary>
            LATIN CAPITAL LETTER I WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Iogonek">
            <summary>
            LATIN CAPITAL LETTER I WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Iota">
            <summary>
            GREEK CAPITAL LETTER IOTA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Iotadieresis">
            <summary>
            GREEK CAPITAL LETTER IOTA WITH DIALYTIKA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Iotatonos">
            <summary>
            GREEK CAPITAL LETTER IOTA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Itilde">
            <summary>
            LATIN CAPITAL LETTER I WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.J">
            <summary>
            LATIN CAPITAL LETTER J
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Jcircumflex">
            <summary>
            LATIN CAPITAL LETTER J WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.K">
            <summary>
            LATIN CAPITAL LETTER K
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Kappa">
            <summary>
            GREEK CAPITAL LETTER KAPPA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Kcommaaccent">
            <summary>
            LATIN CAPITAL LETTER K WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.L">
            <summary>
            LATIN CAPITAL LETTER L
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Lacute">
            <summary>
            LATIN CAPITAL LETTER L WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Lambda">
            <summary>
            GREEK CAPITAL LETTER LAMDA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Lcaron">
            <summary>
            LATIN CAPITAL LETTER L WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Lcommaaccent">
            <summary>
            LATIN CAPITAL LETTER L WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ldot">
            <summary>
            LATIN CAPITAL LETTER L WITH MIDDLE DOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Lslash">
            <summary>
            LATIN CAPITAL LETTER L WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.M">
            <summary>
            LATIN CAPITAL LETTER M
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Mu">
            <summary>
            GREEK CAPITAL LETTER MU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.N">
            <summary>
            LATIN CAPITAL LETTER N
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Nacute">
            <summary>
            LATIN CAPITAL LETTER N WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ncaron">
            <summary>
            LATIN CAPITAL LETTER N WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ncommaaccent">
            <summary>
            LATIN CAPITAL LETTER N WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ntilde">
            <summary>
            LATIN CAPITAL LETTER N WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Nu">
            <summary>
            GREEK CAPITAL LETTER NU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.O">
            <summary>
            LATIN CAPITAL LETTER O
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.OE">
            <summary>
            LATIN CAPITAL LIGATURE OE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Oacute">
            <summary>
            LATIN CAPITAL LETTER O WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Obreve">
            <summary>
            LATIN CAPITAL LETTER O WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ocircumflex">
            <summary>
            LATIN CAPITAL LETTER O WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Odieresis">
            <summary>
            LATIN CAPITAL LETTER O WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ograve">
            <summary>
            LATIN CAPITAL LETTER O WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ohorn">
            <summary>
            LATIN CAPITAL LETTER O WITH HORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ohungarumlaut">
            <summary>
            LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Omacron">
            <summary>
            LATIN CAPITAL LETTER O WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Omega">
            <summary>
            OHM SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Omegatonos">
            <summary>
            GREEK CAPITAL LETTER OMEGA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Omicron">
            <summary>
            GREEK CAPITAL LETTER OMICRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Omicrontonos">
            <summary>
            GREEK CAPITAL LETTER OMICRON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Oslash">
            <summary>
            LATIN CAPITAL LETTER O WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Oslashacute">
            <summary>
            LATIN CAPITAL LETTER O WITH STROKE AND ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Otilde">
            <summary>
            LATIN CAPITAL LETTER O WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.P">
            <summary>
            LATIN CAPITAL LETTER P
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Phi">
            <summary>
            GREEK CAPITAL LETTER PHI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Pi">
            <summary>
            GREEK CAPITAL LETTER PI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Psi">
            <summary>
            GREEK CAPITAL LETTER PSI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Q">
            <summary>
            LATIN CAPITAL LETTER Q
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.R">
            <summary>
            LATIN CAPITAL LETTER R
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Racute">
            <summary>
            LATIN CAPITAL LETTER R WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Rcaron">
            <summary>
            LATIN CAPITAL LETTER R WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Rcommaaccent">
            <summary>
            LATIN CAPITAL LETTER R WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Rfraktur">
            <summary>
            BLACK-LETTER CAPITAL R
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Rho">
            <summary>
            GREEK CAPITAL LETTER RHO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.S">
            <summary>
            LATIN CAPITAL LETTER S
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF010000">
            <summary>
            BOX DRAWINGS LIGHT DOWN AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF020000">
            <summary>
            BOX DRAWINGS LIGHT UP AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF030000">
            <summary>
            BOX DRAWINGS LIGHT DOWN AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF040000">
            <summary>
            BOX DRAWINGS LIGHT UP AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF050000">
            <summary>
            BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF060000">
            <summary>
            BOX DRAWINGS LIGHT DOWN AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF070000">
            <summary>
            BOX DRAWINGS LIGHT UP AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF080000">
            <summary>
            BOX DRAWINGS LIGHT VERTICAL AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF090000">
            <summary>
            BOX DRAWINGS LIGHT VERTICAL AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF100000">
            <summary>
            BOX DRAWINGS LIGHT HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF110000">
            <summary>
            BOX DRAWINGS LIGHT VERTICAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF190000">
            <summary>
            BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF200000">
            <summary>
            BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF210000">
            <summary>
            BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF220000">
            <summary>
            BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF230000">
            <summary>
            BOX DRAWINGS DOUBLE VERTICAL AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF240000">
            <summary>
            BOX DRAWINGS DOUBLE VERTICAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF250000">
            <summary>
            BOX DRAWINGS DOUBLE DOWN AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF260000">
            <summary>
            BOX DRAWINGS DOUBLE UP AND LEFT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF270000">
            <summary>
            BOX DRAWINGS UP DOUBLE AND LEFT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF280000">
            <summary>
            BOX DRAWINGS UP SINGLE AND LEFT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF360000">
            <summary>
            BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF370000">
            <summary>
            BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF380000">
            <summary>
            BOX DRAWINGS DOUBLE UP AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF390000">
            <summary>
            BOX DRAWINGS DOUBLE DOWN AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF400000">
            <summary>
            BOX DRAWINGS DOUBLE UP AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF410000">
            <summary>
            BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF420000">
            <summary>
            BOX DRAWINGS DOUBLE VERTICAL AND RIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF430000">
            <summary>
            BOX DRAWINGS DOUBLE HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF440000">
            <summary>
            BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF450000">
            <summary>
            BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF460000">
            <summary>
            BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF470000">
            <summary>
            BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF480000">
            <summary>
            BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF490000">
            <summary>
            BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF500000">
            <summary>
            BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF510000">
            <summary>
            BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF520000">
            <summary>
            BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF530000">
            <summary>
            BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.SF540000">
            <summary>
            BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Sacute">
            <summary>
            LATIN CAPITAL LETTER S WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Scaron">
            <summary>
            LATIN CAPITAL LETTER S WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Scedilla">
            <summary>
            LATIN CAPITAL LETTER S WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Scircumflex">
            <summary>
            LATIN CAPITAL LETTER S WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Scommaaccent">
            <summary>
            LATIN CAPITAL LETTER S WITH COMMA BELOW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Sigma">
            <summary>
            GREEK CAPITAL LETTER SIGMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.T">
            <summary>
            LATIN CAPITAL LETTER T
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Tau">
            <summary>
            GREEK CAPITAL LETTER TAU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Tbar">
            <summary>
            LATIN CAPITAL LETTER T WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Tcaron">
            <summary>
            LATIN CAPITAL LETTER T WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Tcommaaccent">
            <summary>
            LATIN CAPITAL LETTER T WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Theta">
            <summary>
            GREEK CAPITAL LETTER THETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Thorn">
            <summary>
            LATIN CAPITAL LETTER THORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.U">
            <summary>
            LATIN CAPITAL LETTER U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Uacute">
            <summary>
            LATIN CAPITAL LETTER U WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ubreve">
            <summary>
            LATIN CAPITAL LETTER U WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ucircumflex">
            <summary>
            LATIN CAPITAL LETTER U WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Udieresis">
            <summary>
            LATIN CAPITAL LETTER U WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ugrave">
            <summary>
            LATIN CAPITAL LETTER U WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Uhorn">
            <summary>
            LATIN CAPITAL LETTER U WITH HORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Uhungarumlaut">
            <summary>
            LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Umacron">
            <summary>
            LATIN CAPITAL LETTER U WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Uogonek">
            <summary>
            LATIN CAPITAL LETTER U WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Upsilon">
            <summary>
            GREEK CAPITAL LETTER UPSILON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Upsilon1">
            <summary>
            GREEK UPSILON WITH HOOK SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Upsilondieresis">
            <summary>
            GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Upsilontonos">
            <summary>
            GREEK CAPITAL LETTER UPSILON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Uring">
            <summary>
            LATIN CAPITAL LETTER U WITH RING ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Utilde">
            <summary>
            LATIN CAPITAL LETTER U WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.V">
            <summary>
            LATIN CAPITAL LETTER V
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.W">
            <summary>
            LATIN CAPITAL LETTER W
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Wacute">
            <summary>
            LATIN CAPITAL LETTER W WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Wcircumflex">
            <summary>
            LATIN CAPITAL LETTER W WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Wdieresis">
            <summary>
            LATIN CAPITAL LETTER W WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Wgrave">
            <summary>
            LATIN CAPITAL LETTER W WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.X">
            <summary>
            LATIN CAPITAL LETTER X
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Xi">
            <summary>
            GREEK CAPITAL LETTER XI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Y">
            <summary>
            LATIN CAPITAL LETTER Y
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Yacute">
            <summary>
            LATIN CAPITAL LETTER Y WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ycircumflex">
            <summary>
            LATIN CAPITAL LETTER Y WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ydieresis">
            <summary>
            LATIN CAPITAL LETTER Y WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Ygrave">
            <summary>
            LATIN CAPITAL LETTER Y WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Z">
            <summary>
            LATIN CAPITAL LETTER Z
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Zacute">
            <summary>
            LATIN CAPITAL LETTER Z WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Zcaron">
            <summary>
            LATIN CAPITAL LETTER Z WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Zdotaccent">
            <summary>
            LATIN CAPITAL LETTER Z WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.Zeta">
            <summary>
            GREEK CAPITAL LETTER ZETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.a">
            <summary>
            LATIN SMALL LETTER A
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aacute">
            <summary>
            LATIN SMALL LETTER A WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.abreve">
            <summary>
            LATIN SMALL LETTER A WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.acircumflex">
            <summary>
            LATIN SMALL LETTER A WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.acute">
            <summary>
            ACUTE ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.acutecomb">
            <summary>
            COMBINING ACUTE ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.adieresis">
            <summary>
            LATIN SMALL LETTER A WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ae">
            <summary>
            LATIN SMALL LETTER AE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aeacute">
            <summary>
            LATIN SMALL LETTER AE WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii00208">
            <summary>
            HORIZONTAL BAR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10017">
            <summary>
            CYRILLIC CAPITAL LETTER A
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10018">
            <summary>
            CYRILLIC CAPITAL LETTER BE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10019">
            <summary>
            CYRILLIC CAPITAL LETTER VE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10020">
            <summary>
            CYRILLIC CAPITAL LETTER GHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10021">
            <summary>
            CYRILLIC CAPITAL LETTER DE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10022">
            <summary>
            CYRILLIC CAPITAL LETTER IE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10023">
            <summary>
            CYRILLIC CAPITAL LETTER IO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10024">
            <summary>
            CYRILLIC CAPITAL LETTER ZHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10025">
            <summary>
            CYRILLIC CAPITAL LETTER ZE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10026">
            <summary>
            CYRILLIC CAPITAL LETTER I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10027">
            <summary>
            CYRILLIC CAPITAL LETTER SHORT I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10028">
            <summary>
            CYRILLIC CAPITAL LETTER KA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10029">
            <summary>
            CYRILLIC CAPITAL LETTER EL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10030">
            <summary>
            CYRILLIC CAPITAL LETTER EM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10031">
            <summary>
            CYRILLIC CAPITAL LETTER EN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10032">
            <summary>
            CYRILLIC CAPITAL LETTER O
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10033">
            <summary>
            CYRILLIC CAPITAL LETTER PE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10034">
            <summary>
            CYRILLIC CAPITAL LETTER ER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10035">
            <summary>
            CYRILLIC CAPITAL LETTER ES
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10036">
            <summary>
            CYRILLIC CAPITAL LETTER TE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10037">
            <summary>
            CYRILLIC CAPITAL LETTER U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10038">
            <summary>
            CYRILLIC CAPITAL LETTER EF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10039">
            <summary>
            CYRILLIC CAPITAL LETTER HA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10040">
            <summary>
            CYRILLIC CAPITAL LETTER TSE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10041">
            <summary>
            CYRILLIC CAPITAL LETTER CHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10042">
            <summary>
            CYRILLIC CAPITAL LETTER SHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10043">
            <summary>
            CYRILLIC CAPITAL LETTER SHCHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10044">
            <summary>
            CYRILLIC CAPITAL LETTER HARD SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10045">
            <summary>
            CYRILLIC CAPITAL LETTER YERU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10046">
            <summary>
            CYRILLIC CAPITAL LETTER SOFT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10047">
            <summary>
            CYRILLIC CAPITAL LETTER E
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10048">
            <summary>
            CYRILLIC CAPITAL LETTER YU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10049">
            <summary>
            CYRILLIC CAPITAL LETTER YA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10050">
            <summary>
            CYRILLIC CAPITAL LETTER GHE WITH UPTURN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10051">
            <summary>
            CYRILLIC CAPITAL LETTER DJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10052">
            <summary>
            CYRILLIC CAPITAL LETTER GJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10053">
            <summary>
            CYRILLIC CAPITAL LETTER UKRAINIAN IE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10054">
            <summary>
            CYRILLIC CAPITAL LETTER DZE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10055">
            <summary>
            CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10056">
            <summary>
            CYRILLIC CAPITAL LETTER YI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10057">
            <summary>
            CYRILLIC CAPITAL LETTER JE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10058">
            <summary>
            CYRILLIC CAPITAL LETTER LJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10059">
            <summary>
            CYRILLIC CAPITAL LETTER NJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10060">
            <summary>
            CYRILLIC CAPITAL LETTER TSHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10061">
            <summary>
            CYRILLIC CAPITAL LETTER KJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10062">
            <summary>
            CYRILLIC CAPITAL LETTER SHORT U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10065">
            <summary>
            CYRILLIC SMALL LETTER A
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10066">
            <summary>
            CYRILLIC SMALL LETTER BE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10067">
            <summary>
            CYRILLIC SMALL LETTER VE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10068">
            <summary>
            CYRILLIC SMALL LETTER GHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10069">
            <summary>
            CYRILLIC SMALL LETTER DE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10070">
            <summary>
            CYRILLIC SMALL LETTER IE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10071">
            <summary>
            CYRILLIC SMALL LETTER IO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10072">
            <summary>
            CYRILLIC SMALL LETTER ZHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10073">
            <summary>
            CYRILLIC SMALL LETTER ZE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10074">
            <summary>
            CYRILLIC SMALL LETTER I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10075">
            <summary>
            CYRILLIC SMALL LETTER SHORT I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10076">
            <summary>
            CYRILLIC SMALL LETTER KA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10077">
            <summary>
            CYRILLIC SMALL LETTER EL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10078">
            <summary>
            CYRILLIC SMALL LETTER EM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10079">
            <summary>
            CYRILLIC SMALL LETTER EN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10080">
            <summary>
            CYRILLIC SMALL LETTER O
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10081">
            <summary>
            CYRILLIC SMALL LETTER PE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10082">
            <summary>
            CYRILLIC SMALL LETTER ER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10083">
            <summary>
            CYRILLIC SMALL LETTER ES
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10084">
            <summary>
            CYRILLIC SMALL LETTER TE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10085">
            <summary>
            CYRILLIC SMALL LETTER U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10086">
            <summary>
            CYRILLIC SMALL LETTER EF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10087">
            <summary>
            CYRILLIC SMALL LETTER HA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10088">
            <summary>
            CYRILLIC SMALL LETTER TSE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10089">
            <summary>
            CYRILLIC SMALL LETTER CHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10090">
            <summary>
            CYRILLIC SMALL LETTER SHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10091">
            <summary>
            CYRILLIC SMALL LETTER SHCHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10092">
            <summary>
            CYRILLIC SMALL LETTER HARD SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10093">
            <summary>
            CYRILLIC SMALL LETTER YERU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10094">
            <summary>
            CYRILLIC SMALL LETTER SOFT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10095">
            <summary>
            CYRILLIC SMALL LETTER E
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10096">
            <summary>
            CYRILLIC SMALL LETTER YU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10097">
            <summary>
            CYRILLIC SMALL LETTER YA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10098">
            <summary>
            CYRILLIC SMALL LETTER GHE WITH UPTURN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10099">
            <summary>
            CYRILLIC SMALL LETTER DJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10100">
            <summary>
            CYRILLIC SMALL LETTER GJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10101">
            <summary>
            CYRILLIC SMALL LETTER UKRAINIAN IE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10102">
            <summary>
            CYRILLIC SMALL LETTER DZE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10103">
            <summary>
            CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10104">
            <summary>
            CYRILLIC SMALL LETTER YI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10105">
            <summary>
            CYRILLIC SMALL LETTER JE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10106">
            <summary>
            CYRILLIC SMALL LETTER LJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10107">
            <summary>
            CYRILLIC SMALL LETTER NJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10108">
            <summary>
            CYRILLIC SMALL LETTER TSHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10109">
            <summary>
            CYRILLIC SMALL LETTER KJE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10110">
            <summary>
            CYRILLIC SMALL LETTER SHORT U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10145">
            <summary>
            CYRILLIC CAPITAL LETTER DZHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10146">
            <summary>
            CYRILLIC CAPITAL LETTER YAT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10147">
            <summary>
            CYRILLIC CAPITAL LETTER FITA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10148">
            <summary>
            CYRILLIC CAPITAL LETTER IZHITSA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10193">
            <summary>
            CYRILLIC SMALL LETTER DZHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10194">
            <summary>
            CYRILLIC SMALL LETTER YAT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10195">
            <summary>
            CYRILLIC SMALL LETTER FITA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10196">
            <summary>
            CYRILLIC SMALL LETTER IZHITSA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii10846">
            <summary>
            CYRILLIC SMALL LETTER SCHWA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii299">
            <summary>
            LEFT-TO-RIGHT MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii300">
            <summary>
            RIGHT-TO-LEFT MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii301">
            <summary>
            ZERO WIDTH JOINER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57381">
            <summary>
            ARABIC PERCENT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57388">
            <summary>
            ARABIC COMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57392">
            <summary>
            ARABIC-INDIC DIGIT ZERO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57393">
            <summary>
            ARABIC-INDIC DIGIT ONE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57394">
            <summary>
            ARABIC-INDIC DIGIT TWO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57395">
            <summary>
            ARABIC-INDIC DIGIT THREE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57396">
            <summary>
            ARABIC-INDIC DIGIT FOUR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57397">
            <summary>
            ARABIC-INDIC DIGIT FIVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57398">
            <summary>
            ARABIC-INDIC DIGIT SIX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57399">
            <summary>
            ARABIC-INDIC DIGIT SEVEN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57400">
            <summary>
            ARABIC-INDIC DIGIT EIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57401">
            <summary>
            ARABIC-INDIC DIGIT NINE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57403">
            <summary>
            ARABIC SEMICOLON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57407">
            <summary>
            ARABIC QUESTION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57409">
            <summary>
            ARABIC LETTER HAMZA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57410">
            <summary>
            ARABIC LETTER ALEF WITH MADDA ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57411">
            <summary>
            ARABIC LETTER ALEF WITH HAMZA ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57412">
            <summary>
            ARABIC LETTER WAW WITH HAMZA ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57413">
            <summary>
            ARABIC LETTER ALEF WITH HAMZA BELOW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57414">
            <summary>
            ARABIC LETTER YEH WITH HAMZA ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57415">
            <summary>
            ARABIC LETTER ALEF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57416">
            <summary>
            ARABIC LETTER BEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57417">
            <summary>
            ARABIC LETTER TEH MARBUTA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57418">
            <summary>
            ARABIC LETTER TEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57419">
            <summary>
            ARABIC LETTER THEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57420">
            <summary>
            ARABIC LETTER JEEM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57421">
            <summary>
            ARABIC LETTER HAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57422">
            <summary>
            ARABIC LETTER KHAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57423">
            <summary>
            ARABIC LETTER DAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57424">
            <summary>
            ARABIC LETTER THAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57425">
            <summary>
            ARABIC LETTER REH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57426">
            <summary>
            ARABIC LETTER ZAIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57427">
            <summary>
            ARABIC LETTER SEEN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57428">
            <summary>
            ARABIC LETTER SHEEN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57429">
            <summary>
            ARABIC LETTER SAD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57430">
            <summary>
            ARABIC LETTER DAD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57431">
            <summary>
            ARABIC LETTER TAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57432">
            <summary>
            ARABIC LETTER ZAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57433">
            <summary>
            ARABIC LETTER AIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57434">
            <summary>
            ARABIC LETTER GHAIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57440">
            <summary>
            ARABIC TATWEEL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57441">
            <summary>
            ARABIC LETTER FEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57442">
            <summary>
            ARABIC LETTER QAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57443">
            <summary>
            ARABIC LETTER KAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57444">
            <summary>
            ARABIC LETTER LAM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57445">
            <summary>
            ARABIC LETTER MEEM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57446">
            <summary>
            ARABIC LETTER NOON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57448">
            <summary>
            ARABIC LETTER WAW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57449">
            <summary>
            ARABIC LETTER ALEF MAKSURA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57450">
            <summary>
            ARABIC LETTER YEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57451">
            <summary>
            ARABIC FATHATAN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57452">
            <summary>
            ARABIC DAMMATAN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57453">
            <summary>
            ARABIC KASRATAN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57454">
            <summary>
            ARABIC FATHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57455">
            <summary>
            ARABIC DAMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57456">
            <summary>
            ARABIC KASRA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57457">
            <summary>
            ARABIC SHADDA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57458">
            <summary>
            ARABIC SUKUN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57470">
            <summary>
            ARABIC LETTER HEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57505">
            <summary>
            ARABIC LETTER VEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57506">
            <summary>
            ARABIC LETTER PEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57507">
            <summary>
            ARABIC LETTER TCHEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57508">
            <summary>
            ARABIC LETTER JEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57509">
            <summary>
            ARABIC LETTER GAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57511">
            <summary>
            ARABIC LETTER TTEH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57512">
            <summary>
            ARABIC LETTER DDAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57513">
            <summary>
            ARABIC LETTER RREH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57514">
            <summary>
            ARABIC LETTER NOON GHUNNA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57519">
            <summary>
            ARABIC LETTER YEH BARREE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57534">
            <summary>
            ARABIC LETTER AE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57636">
            <summary>
            NEW SHEQEL SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57645">
            <summary>
            HEBREW PUNCTUATION MAQAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57658">
            <summary>
            HEBREW PUNCTUATION SOF PASUQ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57664">
            <summary>
            HEBREW LETTER ALEF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57665">
            <summary>
            HEBREW LETTER BET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57666">
            <summary>
            HEBREW LETTER GIMEL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57667">
            <summary>
            HEBREW LETTER DALET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57668">
            <summary>
            HEBREW LETTER HE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57669">
            <summary>
            HEBREW LETTER VAV
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57670">
            <summary>
            HEBREW LETTER ZAYIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57671">
            <summary>
            HEBREW LETTER HET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57672">
            <summary>
            HEBREW LETTER TET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57673">
            <summary>
            HEBREW LETTER YOD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57674">
            <summary>
            HEBREW LETTER FINAL KAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57675">
            <summary>
            HEBREW LETTER KAF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57676">
            <summary>
            HEBREW LETTER LAMED
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57677">
            <summary>
            HEBREW LETTER FINAL MEM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57678">
            <summary>
            HEBREW LETTER MEM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57679">
            <summary>
            HEBREW LETTER FINAL NUN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57680">
            <summary>
            HEBREW LETTER NUN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57681">
            <summary>
            HEBREW LETTER SAMEKH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57682">
            <summary>
            HEBREW LETTER AYIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57683">
            <summary>
            HEBREW LETTER FINAL PE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57684">
            <summary>
            HEBREW LETTER PE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57685">
            <summary>
            HEBREW LETTER FINAL TSADI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57686">
            <summary>
            HEBREW LETTER TSADI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57687">
            <summary>
            HEBREW LETTER QOF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57688">
            <summary>
            HEBREW LETTER RESH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57689">
            <summary>
            HEBREW LETTER SHIN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57690">
            <summary>
            HEBREW LETTER TAV
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57716">
            <summary>
            HEBREW LIGATURE YIDDISH DOUBLE VAV
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57717">
            <summary>
            HEBREW LIGATURE YIDDISH VAV YOD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57718">
            <summary>
            HEBREW LIGATURE YIDDISH DOUBLE YOD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57793">
            <summary>
            HEBREW POINT HIRIQ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57794">
            <summary>
            HEBREW POINT TSERE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57795">
            <summary>
            HEBREW POINT SEGOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57796">
            <summary>
            HEBREW POINT QUBUTS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57797">
            <summary>
            HEBREW POINT QAMATS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57798">
            <summary>
            HEBREW POINT PATAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57799">
            <summary>
            HEBREW POINT SHEVA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57800">
            <summary>
            HEBREW POINT HATAF PATAH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57801">
            <summary>
            HEBREW POINT HATAF SEGOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57802">
            <summary>
            HEBREW POINT HATAF QAMATS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57803">
            <summary>
            HEBREW POINT SIN DOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57804">
            <summary>
            HEBREW POINT SHIN DOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57806">
            <summary>
            HEBREW POINT HOLAM
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57807">
            <summary>
            HEBREW POINT DAGESH OR MAPIQ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57839">
            <summary>
            HEBREW POINT METEG
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57841">
            <summary>
            HEBREW POINT RAFE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57842">
            <summary>
            HEBREW PUNCTUATION PASEQ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii57929">
            <summary>
            MODIFIER LETTER APOSTROPHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61248">
            <summary>
            CARE OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61289">
            <summary>
            SCRIPT SMALL L
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61352">
            <summary>
            NUMERO SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61573">
            <summary>
            POP DIRECTIONAL FORMATTING
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61574">
            <summary>
            LEFT-TO-RIGHT OVERRIDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61575">
            <summary>
            RIGHT-TO-LEFT OVERRIDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii61664">
            <summary>
            ZERO WIDTH NON-JOINER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii63167">
            <summary>
            ARABIC FIVE POINTED STAR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.afii64937">
            <summary>
            MODIFIER LETTER REVERSED COMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.agrave">
            <summary>
            LATIN SMALL LETTER A WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aleph">
            <summary>
            ALEF SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.alpha">
            <summary>
            GREEK SMALL LETTER ALPHA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.alphatonos">
            <summary>
            GREEK SMALL LETTER ALPHA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.amacron">
            <summary>
            LATIN SMALL LETTER A WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ampersand">
            <summary>
            AMPERSAND
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.angle">
            <summary>
            ANGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.angleleft">
            <summary>
            LEFT-POINTING ANGLE BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.angleright">
            <summary>
            RIGHT-POINTING ANGLE BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.anoteleia">
            <summary>
            GREEK ANO TELEIA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aogonek">
            <summary>
            LATIN SMALL LETTER A WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.approxequal">
            <summary>
            ALMOST EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aring">
            <summary>
            LATIN SMALL LETTER A WITH RING ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.aringacute">
            <summary>
            LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowboth">
            <summary>
            LEFT RIGHT ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdblboth">
            <summary>
            LEFT RIGHT DOUBLE ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdbldown">
            <summary>
            DOWNWARDS DOUBLE ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdblleft">
            <summary>
            LEFTWARDS DOUBLE ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdblright">
            <summary>
            RIGHTWARDS DOUBLE ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdblup">
            <summary>
            UPWARDS DOUBLE ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowdown">
            <summary>
            DOWNWARDS ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowleft">
            <summary>
            LEFTWARDS ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowright">
            <summary>
            RIGHTWARDS ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowup">
            <summary>
            UPWARDS ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowupdn">
            <summary>
            UP DOWN ARROW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.arrowupdnbse">
            <summary>
            UP DOWN ARROW WITH BASE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.asciicircum">
            <summary>
            CIRCUMFLEX ACCENT                                      
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.asciitilde">
            <summary>
            TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.asterisk">
            <summary>
            ASTERISK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.asteriskmath">
            <summary>
            ASTERISK OPERATOR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.at">
            <summary>
            COMMERCIAL AT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.atilde">
            <summary>
            LATIN SMALL LETTER A WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.b">
            <summary>
            LATIN SMALL LETTER B
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.backslash">
            <summary>
            REVERSE SOLIDUS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.bar">
            <summary>
            VERTICAL LINE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.beta">
            <summary>
            GREEK SMALL LETTER BETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.block">
            <summary>
            FULL BLOCK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.braceleft">
            <summary>
            LEFT CURLY BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.braceright">
            <summary>
            RIGHT CURLY BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.bracketleft">
            <summary>
            LEFT SQUARE BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.bracketright">
            <summary>
            RIGHT SQUARE BRACKET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.breve">
            <summary>
            BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.brokenbar">
            <summary>
            BROKEN BAR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.bullet">
            <summary>
            BULLET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.c">
            <summary>
            LATIN SMALL LETTER C
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.cacute">
            <summary>
            LATIN SMALL LETTER C WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.caron">
            <summary>
            CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.carriagereturn">
            <summary>
            DOWNWARDS ARROW WITH CORNER LEFTWARDS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ccaron">
            <summary>
            LATIN SMALL LETTER C WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ccedilla">
            <summary>
            LATIN SMALL LETTER C WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ccircumflex">
            <summary>
            LATIN SMALL LETTER C WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.cdotaccent">
            <summary>
            LATIN SMALL LETTER C WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.cedilla">
            <summary>
            CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.cent">
            <summary>
            CENT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.chi">
            <summary>
            GREEK SMALL LETTER CHI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.circle">
            <summary>
            WHITE CIRCLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.circlemultiply">
            <summary>
            CIRCLED TIMES
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.circleplus">
            <summary>
            CIRCLED PLUS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.circumflex">
            <summary>
            MODIFIER LETTER CIRCUMFLEX ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.club">
            <summary>
            BLACK CLUB SUIT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.colon">
            <summary>
            COLON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.colonmonetary">
            <summary>
            COLON SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.comma">
            <summary>
            COMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.congruent">
            <summary>
            APPROXIMATELY EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.copyright">
            <summary>
            COPYRIGHT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.currency">
            <summary>
            CURRENCY SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.d">
            <summary>
            LATIN SMALL LETTER D
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dagger">
            <summary>
            DAGGER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.daggerdbl">
            <summary>
            DOUBLE DAGGER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dcaron">
            <summary>
            LATIN SMALL LETTER D WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dcroat">
            <summary>
            LATIN SMALL LETTER D WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.degree">
            <summary>
            DEGREE SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.delta">
            <summary>
            GREEK SMALL LETTER DELTA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.diamond">
            <summary>
            BLACK DIAMOND SUIT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dieresis">
            <summary>
            DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dieresistonos">
            <summary>
            GREEK DIALYTIKA TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.divide">
            <summary>
            DIVISION SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dkshade">
            <summary>
            DARK SHADE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dnblock">
            <summary>
            LOWER HALF BLOCK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dollar">
            <summary>
            DOLLAR SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dong">
            <summary>
            DONG SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dotaccent">
            <summary>
            DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dotbelowcomb">
            <summary>
            COMBINING DOT BELOW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dotlessi">
            <summary>
            LATIN SMALL LETTER DOTLESS I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.dotmath">
            <summary>
            DOT OPERATOR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.e">
            <summary>
            LATIN SMALL LETTER E
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eacute">
            <summary>
            LATIN SMALL LETTER E WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ebreve">
            <summary>
            LATIN SMALL LETTER E WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ecaron">
            <summary>
            LATIN SMALL LETTER E WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ecircumflex">
            <summary>
            LATIN SMALL LETTER E WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.edieresis">
            <summary>
            LATIN SMALL LETTER E WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.edotaccent">
            <summary>
            LATIN SMALL LETTER E WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.egrave">
            <summary>
            LATIN SMALL LETTER E WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eight">
            <summary>
            DIGIT EIGHT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.element">
            <summary>
            ELEMENT OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ellipsis">
            <summary>
            HORIZONTAL ELLIPSIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.emacron">
            <summary>
            LATIN SMALL LETTER E WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.emdash">
            <summary>
            EM DASH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.emptyset">
            <summary>
            EMPTY SET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.endash">
            <summary>
            EN DASH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eng">
            <summary>
            LATIN SMALL LETTER ENG
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eogonek">
            <summary>
            LATIN SMALL LETTER E WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.epsilon">
            <summary>
            GREEK SMALL LETTER EPSILON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.epsilontonos">
            <summary>
            GREEK SMALL LETTER EPSILON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.equal">
            <summary>
            EQUALS SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.equivalence">
            <summary>
            IDENTICAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.estimated">
            <summary>
            ESTIMATED SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eta">
            <summary>
            GREEK SMALL LETTER ETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.etatonos">
            <summary>
            GREEK SMALL LETTER ETA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.eth">
            <summary>
            LATIN SMALL LETTER ETH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.exclam">
            <summary>
            EXCLAMATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.exclamdbl">
            <summary>
            DOUBLE EXCLAMATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.exclamdown">
            <summary>
            INVERTED EXCLAMATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.existential">
            <summary>
            THERE EXISTS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.f">
            <summary>
            LATIN SMALL LETTER F
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.female">
            <summary>
            FEMALE SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.figuredash">
            <summary>
            FIGURE DASH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.filledbox">
            <summary>
            BLACK SQUARE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.filledrect">
            <summary>
            BLACK RECTANGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.five">
            <summary>
            DIGIT FIVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.fiveeighths">
            <summary>
            VULGAR FRACTION FIVE EIGHTHS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.florin">
            <summary>
            LATIN SMALL LETTER F WITH HOOK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.four">
            <summary>
            DIGIT FOUR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.fraction">
            <summary>
            FRACTION SLASH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.franc">
            <summary>
            FRENCH FRANC SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.g">
            <summary>
            LATIN SMALL LETTER G
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gamma">
            <summary>
            GREEK SMALL LETTER GAMMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gbreve">
            <summary>
            LATIN SMALL LETTER G WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gcaron">
            <summary>
            LATIN SMALL LETTER G WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gcircumflex">
            <summary>
            LATIN SMALL LETTER G WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gcommaaccent">
            <summary>
            LATIN SMALL LETTER G WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gdotaccent">
            <summary>
            LATIN SMALL LETTER G WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.germandbls">
            <summary>
            LATIN SMALL LETTER SHARP S
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gradient">
            <summary>
            NABLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.grave">
            <summary>
            GRAVE ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.gravecomb">
            <summary>
            COMBINING GRAVE ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.greater">
            <summary>
            GREATER-THAN SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.greaterequal">
            <summary>
            GREATER-THAN OR EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.guillemotleft">
            <summary>
            LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.guillemotright">
            <summary>
            RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.guilsinglleft">
            <summary>
            SINGLE LEFT-POINTING ANGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.guilsinglright">
            <summary>
            SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.h">
            <summary>
            LATIN SMALL LETTER H
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.hbar">
            <summary>
            LATIN SMALL LETTER H WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.hcircumflex">
            <summary>
            LATIN SMALL LETTER H WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.heart">
            <summary>
            BLACK HEART SUIT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.hookabovecomb">
            <summary>
            COMBINING HOOK ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.house">
            <summary>
            HOUSE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.hungarumlaut">
            <summary>
            DOUBLE ACUTE ACCENT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.hyphen">
            <summary>
            HYPHEN-MINUS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.i">
            <summary>
            LATIN SMALL LETTER I
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iacute">
            <summary>
            LATIN SMALL LETTER I WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ibreve">
            <summary>
            LATIN SMALL LETTER I WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.icircumflex">
            <summary>
            LATIN SMALL LETTER I WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.idieresis">
            <summary>
            LATIN SMALL LETTER I WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.igrave">
            <summary>
            LATIN SMALL LETTER I WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ij">
            <summary>
            LATIN SMALL LIGATURE IJ
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.imacron">
            <summary>
            LATIN SMALL LETTER I WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.infinity">
            <summary>
            INFINITY
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.integral">
            <summary>
            INTEGRAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.integralbt">
            <summary>
            BOTTOM HALF INTEGRAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.integraltp">
            <summary>
            TOP HALF INTEGRAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.intersection">
            <summary>
            INTERSECTION
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.invbullet">
            <summary>
            INVERSE BULLET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.invcircle">
            <summary>
            INVERSE WHITE CIRCLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.invsmileface">
            <summary>
            BLACK SMILING FACE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iogonek">
            <summary>
            LATIN SMALL LETTER I WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iota">
            <summary>
            GREEK SMALL LETTER IOTA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iotadieresis">
            <summary>
            GREEK SMALL LETTER IOTA WITH DIALYTIKA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iotadieresistonos">
            <summary>
            GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.iotatonos">
            <summary>
            GREEK SMALL LETTER IOTA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.itilde">
            <summary>
            LATIN SMALL LETTER I WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.j">
            <summary>
            LATIN SMALL LETTER J
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.jcircumflex">
            <summary>
            LATIN SMALL LETTER J WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.k">
            <summary>
            LATIN SMALL LETTER K
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.kappa">
            <summary>
            GREEK SMALL LETTER KAPPA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.kcommaaccent">
            <summary>
            LATIN SMALL LETTER K WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.kgreenlandic">
            <summary>
            LATIN SMALL LETTER KRA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.l">
            <summary>
            LATIN SMALL LETTER L
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lacute">
            <summary>
            LATIN SMALL LETTER L WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lambda">
            <summary>
            GREEK SMALL LETTER LAMDA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lcaron">
            <summary>
            LATIN SMALL LETTER L WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lcommaaccent">
            <summary>
            LATIN SMALL LETTER L WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ldot">
            <summary>
            LATIN SMALL LETTER L WITH MIDDLE DOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.less">
            <summary>
            LESS-THAN SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lessequal">
            <summary>
            LESS-THAN OR EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lfblock">
            <summary>
            LEFT HALF BLOCK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lira">
            <summary>
            LIRA SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.logicaland">
            <summary>
            LOGICAL AND
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.logicalnot">
            <summary>
            NOT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.logicalor">
            <summary>
            LOGICAL OR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.longs">
            <summary>
            LATIN SMALL LETTER LONG S
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lozenge">
            <summary>
            LOZENGE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.lslash">
            <summary>
            LATIN SMALL LETTER L WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ltshade">
            <summary>
            LIGHT SHADE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.m">
            <summary>
            LATIN SMALL LETTER M
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.macron">
            <summary>
            MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.male">
            <summary>
            MALE SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.minus">
            <summary>
            MINUS SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.minute">
            <summary>
            PRIME
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.mu">
            <summary>
            MICRO SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.multiply">
            <summary>
            MULTIPLICATION SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.musicalnote">
            <summary>
            EIGHTH NOTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.musicalnotedbl">
            <summary>
            BEAMED EIGHTH NOTES
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.n">
            <summary>
            LATIN SMALL LETTER N
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.nacute">
            <summary>
            LATIN SMALL LETTER N WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.napostrophe">
            <summary>
            LATIN SMALL LETTER N PRECEDED BY APOSTROPHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ncaron">
            <summary>
            LATIN SMALL LETTER N WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ncommaaccent">
            <summary>
            LATIN SMALL LETTER N WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.nine">
            <summary>
            DIGIT NINE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.notelement">
            <summary>
            NOT AN ELEMENT OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.notequal">
            <summary>
            NOT EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.notsubset">
            <summary>
            NOT A SUBSET OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ntilde">
            <summary>
            LATIN SMALL LETTER N WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.nu">
            <summary>
            GREEK SMALL LETTER NU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.numbersign">
            <summary>
            NUMBER SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.o">
            <summary>
            LATIN SMALL LETTER O
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.oacute">
            <summary>
            LATIN SMALL LETTER O WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.obreve">
            <summary>
            LATIN SMALL LETTER O WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ocircumflex">
            <summary>
            LATIN SMALL LETTER O WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.odieresis">
            <summary>
            LATIN SMALL LETTER O WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.oe">
            <summary>
            LATIN SMALL LIGATURE OE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ogonek">
            <summary>
            OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ograve">
            <summary>
            LATIN SMALL LETTER O WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ohorn">
            <summary>
            LATIN SMALL LETTER O WITH HORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ohungarumlaut">
            <summary>
            LATIN SMALL LETTER O WITH DOUBLE ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omacron">
            <summary>
            LATIN SMALL LETTER O WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omega">
            <summary>
            GREEK SMALL LETTER OMEGA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omega1">
            <summary>
            GREEK PI SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omegatonos">
            <summary>
            GREEK SMALL LETTER OMEGA WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omicron">
            <summary>
            GREEK SMALL LETTER OMICRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.omicrontonos">
            <summary>
            GREEK SMALL LETTER OMICRON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.one">
            <summary>
            DIGIT ONE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.onedotenleader">
            <summary>
            ONE DOT LEADER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.oneeighth">
            <summary>
            VULGAR FRACTION ONE EIGHTH
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.onehalf">
            <summary>
            VULGAR FRACTION ONE HALF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.onequarter">
            <summary>
            VULGAR FRACTION ONE QUARTER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.onethird">
            <summary>
            VULGAR FRACTION ONE THIRD
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.openbullet">
            <summary>
            WHITE BULLET
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ordfeminine">
            <summary>
            FEMININE ORDINAL INDICATOR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ordmasculine">
            <summary>
            MASCULINE ORDINAL INDICATOR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.orthogonal">
            <summary>
            RIGHT ANGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.oslash">
            <summary>
            LATIN SMALL LETTER O WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.oslashacute">
            <summary>
            LATIN SMALL LETTER O WITH STROKE AND ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.otilde">
            <summary>
            LATIN SMALL LETTER O WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.p">
            <summary>
            LATIN SMALL LETTER P
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.paragraph">
            <summary>
            PILCROW SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.parenleft">
            <summary>
            LEFT PARENTHESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.parenright">
            <summary>
            RIGHT PARENTHESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.partialdiff">
            <summary>
            PARTIAL DIFFERENTIAL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.percent">
            <summary>
            PERCENT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.period">
            <summary>
            FULL STOP
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.periodcentered">
            <summary>
            MIDDLE DOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.perpendicular">
            <summary>
            UP TACK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.perthousand">
            <summary>
            PER MILLE SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.peseta">
            <summary>
            PESETA SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.phi">
            <summary>
            GREEK SMALL LETTER PHI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.phi1">
            <summary>
            GREEK PHI SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.pi">
            <summary>
            GREEK SMALL LETTER PI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.plus">
            <summary>
            PLUS SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.plusminus">
            <summary>
            PLUS-MINUS SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.prescription">
            <summary>
            PRESCRIPTION TAKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.product">
            <summary>
            N-ARY PRODUCT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.propersubset">
            <summary>
            SUBSET OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.propersuperset">
            <summary>
            SUPERSET OF
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.proportional">
            <summary>
            PROPORTIONAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.psi">
            <summary>
            GREEK SMALL LETTER PSI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.q">
            <summary>
            LATIN SMALL LETTER Q
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.question">
            <summary>
            QUESTION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.questiondown">
            <summary>
            INVERTED QUESTION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotedbl">
            <summary>
            QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotedblbase">
            <summary>
            DOUBLE LOW-9 QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotedblleft">
            <summary>
            LEFT DOUBLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotedblright">
            <summary>
            RIGHT DOUBLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quoteleft">
            <summary>
            LEFT SINGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotereversed">
            <summary>
            SINGLE HIGH-REVERSED-9 QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quoteright">
            <summary>
            RIGHT SINGLE QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotesinglbase">
            <summary>
            SINGLE LOW-9 QUOTATION MARK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.quotesingle">
            <summary>
            APOSTROPHE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.r">
            <summary>
            LATIN SMALL LETTER R
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.racute">
            <summary>
            LATIN SMALL LETTER R WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.radical">
            <summary>
            SQUARE ROOT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.rcaron">
            <summary>
            LATIN SMALL LETTER R WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.rcommaaccent">
            <summary>
            LATIN SMALL LETTER R WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.reflexsubset">
            <summary>
            SUBSET OF OR EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.reflexsuperset">
            <summary>
            SUPERSET OF OR EQUAL TO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.registered">
            <summary>
            REGISTERED SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.revlogicalnot">
            <summary>
            REVERSED NOT SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.rho">
            <summary>
            GREEK SMALL LETTER RHO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ring">
            <summary>
            RING ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.rtblock">
            <summary>
            RIGHT HALF BLOCK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.s">
            <summary>
            LATIN SMALL LETTER S
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.sacute">
            <summary>
            LATIN SMALL LETTER S WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.scaron">
            <summary>
            LATIN SMALL LETTER S WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.scedilla">
            <summary>
            LATIN SMALL LETTER S WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.scircumflex">
            <summary>
            LATIN SMALL LETTER S WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.scommaaccent">
            <summary>
            LATIN SMALL LETTER S WITH COMMA BELOW
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.second">
            <summary>
            DOUBLE PRIME
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.section">
            <summary>
            SECTION SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.semicolon">
            <summary>
            SEMICOLON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.seven">
            <summary>
            DIGIT SEVEN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.seveneighths">
            <summary>
            VULGAR FRACTION SEVEN EIGHTHS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.shade">
            <summary>
            MEDIUM SHADE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.sigma">
            <summary>
            GREEK SMALL LETTER SIGMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.sigma1">
            <summary>
            GREEK SMALL LETTER FINAL SIGMA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.similar">
            <summary>
            TILDE OPERATOR
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.six">
            <summary>
            DIGIT SIX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.slash">
            <summary>
            SOLIDUS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.smileface">
            <summary>
            WHITE SMILING FACE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.space">
            <summary>
            SPACE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.spade">
            <summary>
            BLACK SPADE SUIT
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.sterling">
            <summary>
            POUND SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.suchthat">
            <summary>
            CONTAINS AS MEMBER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.summation">
            <summary>
            N-ARY SUMMATION
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.sun">
            <summary>
            WHITE SUN WITH RAYS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.t">
            <summary>
            LATIN SMALL LETTER T
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tau">
            <summary>
            GREEK SMALL LETTER TAU
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tbar">
            <summary>
            LATIN SMALL LETTER T WITH STROKE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tcaron">
            <summary>
            LATIN SMALL LETTER T WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tcommaaccent">
            <summary>
            LATIN SMALL LETTER T WITH CEDILLA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.therefore">
            <summary>
            THEREFORE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.theta">
            <summary>
            GREEK SMALL LETTER THETA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.theta1">
            <summary>
            GREEK THETA SYMBOL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.thorn">
            <summary>
            LATIN SMALL LETTER THORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.three">
            <summary>
            DIGIT THREE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.threeeighths">
            <summary>
            VULGAR FRACTION THREE EIGHTHS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.threequarters">
            <summary>
            VULGAR FRACTION THREE QUARTERS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tilde">
            <summary>
            SMALL TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tildecomb">
            <summary>
            COMBINING TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.tonos">
            <summary>
            GREEK TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.trademark">
            <summary>
            TRADE MARK SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.triagdn">
            <summary>
            BLACK DOWN-POINTING TRIANGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.triaglf">
            <summary>
            BLACK LEFT-POINTING POINTER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.triagrt">
            <summary>
            BLACK RIGHT-POINTING POINTER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.triagup">
            <summary>
            BLACK UP-POINTING TRIANGLE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.two">
            <summary>
            DIGIT TWO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.twodotenleader">
            <summary>
            TWO DOT LEADER
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.twothirds">
            <summary>
            VULGAR FRACTION TWO THIRDS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.u">
            <summary>
            LATIN SMALL LETTER U
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.uacute">
            <summary>
            LATIN SMALL LETTER U WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ubreve">
            <summary>
            LATIN SMALL LETTER U WITH BREVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ucircumflex">
            <summary>
            LATIN SMALL LETTER U WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.udieresis">
            <summary>
            LATIN SMALL LETTER U WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ugrave">
            <summary>
            LATIN SMALL LETTER U WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.uhorn">
            <summary>
            LATIN SMALL LETTER U WITH HORN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.uhungarumlaut">
            <summary>
            LATIN SMALL LETTER U WITH DOUBLE ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.umacron">
            <summary>
            LATIN SMALL LETTER U WITH MACRON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.underscore">
            <summary>
            LOW LINE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.underscoredbl">
            <summary>
            DOUBLE LOW LINE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.union">
            <summary>
            UNION
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.universal">
            <summary>
            FOR ALL
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.uogonek">
            <summary>
            LATIN SMALL LETTER U WITH OGONEK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.upblock">
            <summary>
            UPPER HALF BLOCK
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.upsilon">
            <summary>
            GREEK SMALL LETTER UPSILON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.upsilondieresis">
            <summary>
            GREEK SMALL LETTER UPSILON WITH DIALYTIKA
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.upsilondieresistonos">
            <summary>
            GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.upsilontonos">
            <summary>
            GREEK SMALL LETTER UPSILON WITH TONOS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.uring">
            <summary>
            LATIN SMALL LETTER U WITH RING ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.utilde">
            <summary>
            LATIN SMALL LETTER U WITH TILDE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.v">
            <summary>
            LATIN SMALL LETTER V
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.w">
            <summary>
            LATIN SMALL LETTER W
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.wacute">
            <summary>
            LATIN SMALL LETTER W WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.wcircumflex">
            <summary>
            LATIN SMALL LETTER W WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.wdieresis">
            <summary>
            LATIN SMALL LETTER W WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.weierstrass">
            <summary>
            SCRIPT CAPITAL P
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.wgrave">
            <summary>
            LATIN SMALL LETTER W WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.x">
            <summary>
            LATIN SMALL LETTER X
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.xi">
            <summary>
            GREEK SMALL LETTER XI
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.y">
            <summary>
            LATIN SMALL LETTER Y
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.yacute">
            <summary>
            LATIN SMALL LETTER Y WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ycircumflex">
            <summary>
            LATIN SMALL LETTER Y WITH CIRCUMFLEX
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ydieresis">
            <summary>
            LATIN SMALL LETTER Y WITH DIAERESIS
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.yen">
            <summary>
            YEN SIGN
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.ygrave">
            <summary>
            LATIN SMALL LETTER Y WITH GRAVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.z">
            <summary>
            LATIN SMALL LETTER Z
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.zacute">
            <summary>
            LATIN SMALL LETTER Z WITH ACUTE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.zcaron">
            <summary>
            LATIN SMALL LETTER Z WITH CARON
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.zdotaccent">
            <summary>
            LATIN SMALL LETTER Z WITH DOT ABOVE
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.zero">
            <summary>
            DIGIT ZERO
            </summary>
        </member>
        <member name="F:PdfSharp.Fonts.AdobeGlyphListForNewFonts.zeta">
            <summary>
            GREEK SMALL LETTER ZETA
            </summary>
        </member>
        <member name="T:PdfSharp.Fonts.CMapInfo">
            <summary>
            Helper class that determines the characters used in a particular font.
            </summary>
        </member>
        <member name="M:PdfSharp.Fonts.CMapInfo.AddChars(System.String)">
            <summary>
            Adds the characters of the specifed string the the hashtable
            </summary>
        </member>
        <member name="T:PdfSharp.Forms.DeviceInfos">
            <summary>
            Contains information about a physical device like a display or a printer.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.HorizontalSize">
            <summary>
            Width, in millimeters, of the physical screen or device.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.VerticalSize">
            <summary>
            Height, in millimeters, of the physical screen or device.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.HorizontalResolution">
            <summary>
            Width, in pixels, of the screen or device.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.VerticalResolution">
            <summary>
            Height, in pixels, of the screen or device.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.LogicalDpiX">
            <summary>
            Number of pixels per logical inch along the screen or device width.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.LogicalDpiY">
            <summary>
            Number of pixels per logical inch along the screen or device height.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.PhysicalDpiX">
            <summary>
            Number of pixels per physical inch along the screen or device width.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.PhysicalDpiY">
            <summary>
            Number of pixels per physical inch along the screen or device height.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.ScaleX">
            <summary>
            The ratio of LogicalDpiX and PhysicalDpiX.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.DeviceInfos.ScaleY">
            <summary>
            The ratio of LogicalDpiY and PhysicalDpiY.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.DeviceInfos.GetInfos(System.IntPtr)">
            <summary>
            Gets a DeviceInfo for the specifed device context.
            </summary>
        </member>
        <member name="T:PdfSharp.Forms.Zoom">
            <summary>
            Defines a zoom factor used in the preview control.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.Zoom.BestFit">
            <summary>
            Sets the percent value such that the document fits horizontally into the window.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.Zoom.TextFit">
            <summary>
            Sets the percent value such that the printable area of the document fits horizontally into the window.
            Currently not yet implemented and the same as ZoomBestFit.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.Zoom.FullPage">
            <summary>
            Sets the percent value such that the whole document fits completely into the window.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.Zoom.OriginalSize">
            <summary>
            Sets the percent value such that the document is displayed in its real physical size.
            </summary>
        </member>
        <member name="T:PdfSharp.Forms.RenderMode">
            <summary>
            NYI.
            </summary>
        </member>
        <member name="T:PdfSharp.Forms.PagePreview">
            <summary>
            Represents a preview control for an XGraphics page. Can be used as an alternative to
            System.Windows.Forms.PrintPreviewControl.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.OnZoomChanged(System.EventArgs)">
            <summary>
            Raises the ZoomChanged event when the zoom factor changed.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.CalculatePreviewDimension(System.Boolean@)">
            <summary>
            Calculates all values for drawing the page preview.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.PaintBackground(System.Drawing.Graphics)">
            <summary>
            Paints the background and the empty page.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.DrawDash(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Check clipping rectangle calculations.
            </summary>
        </member>
        <member name="M:PdfSharp.Forms.PagePreview.SetScrollBarRange">
            <summary>
            Adjusts scroll bars.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.PagePreview.posOffset">
            <summary>
            Upper left corner of scroll area.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.PagePreview.pageSize">
            <summary>
            Real page size in point.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.PagePreview.virtualPage">
            <summary>
            Page in pixel relative to virtual canvas.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.PagePreview.virtualCanvas">
            <summary>
            The size in pixel of an area that completely contains the virtual page and at leat a small 
            border around it. If this area is larger than the canvas window, it is scrolled.
            </summary>
        </member>
        <member name="F:PdfSharp.Forms.PagePreview.printableArea">
            <summary>
            Printable area in point.
            </summary>
        </member>
        <member name="P:PdfSharp.Forms.PagePreview.Zoom">
            <summary>
            Gets or sets a predefined zoom factor.
            </summary>
        </member>
        <member name="P:PdfSharp.Forms.PagePreview.ZoomPercent">
            <summary>
            Gets or sets an arbitrary zoom factor. The range is from 10 to 800.
            </summary>
        </member>
        <member name="P:PdfSharp.Forms.PagePreview.PageSize">
            <summary>
            Gets or sets the page size in point.
            </summary>
        </member>
        <member name="E:PdfSharp.Forms.PagePreview.ZoomChanged">
            <summary>
            Occurs when the zoom factor changed.
            </summary>
        </member>
        <member name="T:PdfSharp.Forms.PagePreviewCanvas">
            <summary>
            Implements the control that previews the page.
            </summary>
        </member>
        <member name="T:PdfSharp.Internal.Calc">
            <summary>
            Some static helper functions for calculations.
            </summary>
        </member>
        <member name="F:PdfSharp.Internal.Calc.Deg2Rad">
            <summary>
            Degree to radiant factor.
            </summary>
        </member>
        <member name="F:PdfSharp.Internal.Calc.πHalf">
            <summary>
            Half of pi.
            </summary>
        </member>
        <member name="M:PdfSharp.Internal.Calc.PageSizeToSize(PdfSharp.PageSize)">
            <summary>
            Get page size in point from specified PageSize.
            </summary>
        </member>
        <member name="T:PdfSharp.Internal.NativeMethods">
            <summary>
            Required native Win32 calls. Don't know what to do under Mono.
            </summary>
        </member>
        <member name="T:PdfSharp.Internal.NativeMethods.LOGFONT">
            <summary>
            Reflected from System.Drawing.SafeNativeMethods+LOGFONT
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags">
            <summary>
            Specified the flags of AcroForm fields.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field. Any associated widget
            annotations will not interact with the user; that is, they will not respond to 
            mouse clicks or change their appearance in response to mouse motions. This
            flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Pushbutton">
            <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Radio">
            <summary>
            If set, the field is a set of radio buttons; if clear, the field is a checkbox.
            This flag is meaningful only if the Pushbutton flag is clear.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.NoToggleToOff">
            <summary>
            (Radio buttons only) If set, exactly one radio button must be selected at all times;
            clicking the currently selected button has no effect. If clear, clicking
            the selected button deselects it, leaving no button selected.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Multiline">
            <summary>
            If set, the field may contain multiple lines of text; if clear, the field’s text
            is restricted to a single line.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should
            not be echoed visibly to the screen. Characters typed from the keyboard
            should instead be echoed in some unreadable form, such as
            asterisks or bullet characters.
            To protect password confidentiality, viewer applications should never
            store the value of the text field in the PDF file if this flag is set.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.FileSelect">
            <summary>
            (PDF 1.4) If set, the text entered in the field represents the pathname of
            a file whose contents are to be submitted as the value of the field.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.DoNotSpellCheckTextField">
            <summary>
            (PDF 1.4) If set, the text entered in the field will not be spell-checked.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.DoNotScroll">
            <summary>
            (PDF 1.4) If set, the field will not scroll (horizontally for single-line
            fields, vertically for multiple-line fields) to accommodate more text
            than will fit within its annotation rectangle. Once the field is full, no
            further text will be accepted.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Combo">
            <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a drop list;
            if clear, it includes only a drop list. This flag is meaningful only if the
            Combo flag is set.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.Sort">
            <summary>
            If set, the field’s option items should be sorted alphabetically. This flag is
            intended for use by form authoring tools, not by PDF viewer applications;
            viewers should simply display the options in the order in which they occur 
            in the Opt array.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.MultiSelect">
            <summary>
            (PDF 1.4) If set, more than one of the field’s option items may be selected
            simultaneously; if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroFieldFlags.DoNotSpellCheckChoiseField">
            <summary>
            (PDF 1.4) If set, the text entered in the field will not be spell-checked.
            This flag is meaningful only if the Combo and Edit flags are both set.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroField">
            <summary>
            Represents the base class for all interactive field dictionaries.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfAcroField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfAcroField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.Name">
            <summary>
            Gets the name of this field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.Flags">
            <summary>
            Gets the field flags of this instance.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.Value">
            <summary>
            Gets or sets the value of the field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the field is read only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.HasKids">
            <summary>
            Indicates whether the field has child fields.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.DescendantNames">
            <summary>
            Gets all descendant's names of this field.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroField.PdfAcroFieldCollection">
            <summary>
            Holds a collection of interactive fields.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfArray">
            <summary>
            Represents a PDF array object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.#ctor(PdfSharp.Pdf.PdfArray)">
            <summary>
            Initializes a new instance from an existing dictionary. Used for object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.Clone">
            <summary>
            Creates a copy of this array. Direct elements are deep copied. Indirect references are not
            modified.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ToString">
            <summary>
            Returns a string with the content of this object in a readable form. Useful for debugging purposes only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfArray.Elements">
            <summary>
            Gets the collection containing the elements of this object.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfArray.ArrayElements">
            <summary>
            Represents the elements of an PdfArray.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.Clone">
            <summary>
            Creates a shallow copy of this object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.SetOwner(PdfSharp.Pdf.PdfArray)">
            <summary>
            Moves this instance to another dictionary during object type transformation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetBoolean(System.Int32)">
            <summary>
            Converts the specified value to boolean.
            If the value not exists, the function returns false.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetInteger(System.Int32)">
            <summary>
            Converts the specified value to integer.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetReal(System.Int32)">
            <summary>
            Converts the specified value to double.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetString(System.Int32)">
            <summary>
            Converts the specified value to string.
            If the value not exists, the function returns the empty string.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetName(System.Int32)">
            <summary>
            Converts the specified value to a name.
            If the value not exists, the function returns the empty string.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetIndirectObject(System.Int32)">
            <summary>
            Returns the indirect object if the value at the specified index is a PdfReference.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetObject(System.Int32)">
            <summary>
            Gets the PdfObject with the specified index, or null, if no such object exists. If the index refers to
            a reference, the referenced PdfObject is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetDictionary(System.Int32)">
            <summary>
            Gets the PdfArray with the specified index, or null, if no such object exists. If the index refers to
            a reference, the referenced PdfArray is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetArray(System.Int32)">
            <summary>
            Gets the PdfArray with the specified index, or null, if no such object exists. If the index refers to
            a reference, the referenced PdfArray is returned.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetReference(System.Int32)">
            <summary>
            Gets the PdfReference with the specified index, or null, if no such object exists.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.GetArrayList">
            <summary>
            INTERNAL USE ONLY.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfArray.ArrayElements.Add(PdfSharp.Pdf.PdfItem)">
            <summary>
            Appends the specified object to the array.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfArray.ArrayElements.Items">
            <summary>
            Gets all items of this array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfAcroField.PdfAcroFieldCollection.CreateAcroField(PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Create a derived type like PdfTextFiled or PdfCheckBox if possible.
            If the actual cannot be guessed by PDFsharp the function returns an instance
            of PdfGenericField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.PdfAcroFieldCollection.Names">
            <summary>
            Gets the names of all fields in the collection.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroField.PdfAcroFieldCollection.Item(System.Int32)">
            <summary>
            Gets a field from the collection. For your convenience an instance of a derived class like
            PdfTextFiled or PdfCheckBoxis returned if PDFsharp can guess the actual type of the dictionary.
            If the actual type cannot be guessed by PDFsharp the function returns an instance
            of PdfGenericField.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.FT">
            <summary>
            (Required for terminal fields; inheritable) The type of field that this dictionary
            describes:
              Btn           Button
              Tx            Text
              Ch            Choice
              Sig (PDF 1.3) Signature
            Note: This entry may be present in a nonterminal field (one whose descendants
            are themselves fields) in order to provide an inheritable FT value. However, a
            nonterminal field does not logically have a type of its own; it is merely a container
            for inheritable attributes that are intended for descendant terminal fields of
            any type.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.Parent">
            <summary>
            (Required if this field is the child of another in the field hierarchy; absent otherwise)
            The field that is the immediate parent of this one (the field, if any, whose Kids array
            includes this field). A field can have at most one parent; that is, it can be included
            in the Kids array of at most one other field.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.Kids">
            <summary>
            (Optional) An array of indirect references to the immediate children of this field.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.T">
            <summary>
            (Optional) The partial field name.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.TU">
            <summary>
            (Optional; PDF 1.3) An alternate field name, to be used in place of the actual
            field name wherever the field must be identified in the user interface (such as
            in error or status messages referring to the field). This text is also useful
            when extracting the document’s contents in support of accessibility to disabled
            users or for other purposes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.TM">
            <summary>
            (Optional; PDF 1.3) The mapping name to be used when exporting interactive form field 
            data from the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.Ff">
            <summary>
            (Optional; inheritable) A set of flags specifying various characteristics of the field.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.V">
            <summary>
            (Optional; inheritable) The field’s value, whose format varies depending on
            the field type; see the descriptions of individual field types for further information.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.DV">
            <summary>
            (Optional; inheritable) The default value to which the field reverts when a
            reset-form action is executed. The format of this value is the same as that of V.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.AA">
            <summary>
            (Optional; PDF 1.2) An additional-actions dictionary defining the field’s behavior
            in response to various trigger events. This entry has exactly the same meaning as
            the AA entry in an annotation dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.DR">
            <summary>
            (Required; inheritable) A resource dictionary containing default resources
            (such as fonts, patterns, or color spaces) to be used by the appearance stream.
            At a minimum, this dictionary must contain a Font entry specifying the resource
            name and font dictionary of the default font for displaying the field’s text.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.DA">
            <summary>
            (Required; inheritable) The default appearance string, containing a sequence of
            valid page-content graphics or text state operators defining such properties as
            the field’s text size and color.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroField.Keys.Q">
            <summary>
            (Optional; inheritable) A code specifying the form of quadding (justification)
            to be used in displaying the text:
              0 Left-justified
              1 Centered
              2 Right-justified
            Default value: 0 (left-justified).
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroForm">
            <summary>
            Represents a interactive form (or AcroForm), a collection of fields for 
            gathering information interactively from the user.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfAcroForm.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of AcroForm.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroForm.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.Fields">
            <summary>
            (Required) An array of references to the document’s root fields (those with
            no ancestors in the field hierarchy).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.NeedAppearances">
            <summary>
            (Optional) A flag specifying whether to construct appearance streams and
            appearance dictionaries for all widget annotations in the document.
            Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.SigFlags">
            <summary>
            (Optional; PDF 1.3) A set of flags specifying various document-level characteristics
            related to signature fields.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.CO">
            <summary>
            (Required if any fields in the document have additional-actions dictionaries
            containing a C entry; PDF 1.3) An array of indirect references to field dictionaries
            with calculation actions, defining the calculation order in which their values will 
            be recalculated when the value of any field changes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.DR">
            <summary>
            (Optional) A document-wide default value for the DR attribute of variable text fields.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.DA">
            <summary>
            (Optional) A document-wide default value for the DA attribute of variable text fields.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.Q">
            <summary>
            (Optional) A document-wide default value for the Q attribute of variable text fields.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfAcroForm.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfButtonField">
            <summary>
            Represents the base class for all button fields.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfButtonField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfButtonField.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfButtonField.GetNonOffValue">
            <summary>
            Gets the name which represents the opposite of /Off.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfButtonField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfCheckBoxField">
            <summary>
            Represents the check box field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfCheckBoxField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.Checked">
            <summary>
            Indicates whether the field is checked.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.Keys.Opt">
            <summary>
            (Optional; inheritable; PDF 1.4) A text string to be used in place of the V entry for the
            value of the field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfCheckBoxField.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfChoiseField">
            <summary>
            Represents the base class for all choise field dictionaries.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfChoiseField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfChoiseField.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfChoiseField.IndexInOptArray(System.String)">
            <summary>
            Gets the index of the specified string in the /Opt array or -1, if no such string exists.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfChoiseField.ValueInOptArray(System.Int32)">
            <summary>
            Gets the value from the index in the /Opt array.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfChoiseField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfChoiseField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfChoiseField.Keys.Opt">
            <summary>
            (Required; inheritable) An array of options to be presented to the user. Each element of
            the array is either a text string representing one of the available options or a two-element
            array consisting of a text string together with a default appearance string for constructing
            the item’s appearance dynamically at viewing time.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfChoiseField.Keys.TI">
            <summary>
            (Optional; inheritable) For scrollable list boxes, the top index (the index in the Opt array
            of the first option visible in the list).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfChoiseField.Keys.I">
            <summary>
            (Sometimes required, otherwise optional; inheritable; PDF 1.4) For choice fields that allow
            multiple selection (MultiSelect flag set), an array of integers, sorted in ascending order,
            representing the zero-based indices in the Opt array of the currently selected option
            items. This entry is required when two or more elements in the Opt array have different
            names but the same export value, or when the value of the choice field is an array; in
            other cases, it is permitted but not required. If the items identified by this entry differ
            from those in the V entry of the field dictionary (see below), the V entry takes precedence.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfChoiseField.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfComboBoxField">
            <summary>
            Represents the combo box field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfComboBoxField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfComboBoxField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfComboBoxField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfComboBoxField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfGenericField">
            <summary>
            Represents a generic field. Used for AcroForm dictionaries unknown to PDFsharp.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfGenericField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfGenericField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfGenericField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfGenericField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfListBoxField">
            <summary>
            Represents the list box field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfListBoxField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfListBoxField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfListBoxField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfListBoxField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfPushButtonField">
            <summary>
            Represents the push button field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfPushButtonField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfPushButtonField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfPushButtonField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfPushButtonField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfRadioButtonField">
            <summary>
            Represents the radion button field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfRadioButtonField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.SelectedIndex">
            <summary>
            Gets or sets the index of the selected radio button in a radio button group.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.Keys.Opt">
            <summary>
            (Optional; inheritable; PDF 1.4) An array of text strings to be used in
            place of the V entries for the values of the widget annotations representing
            the individual radio buttons. Each element in the array represents
            the export value of the corresponding widget annotation in the
            Kids array of the radio button field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfRadioButtonField.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfSignatureField">
            <summary>
            Represents the signature field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfSignatureField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfSignatureField.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfSignatureField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Sig for a signature dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Filter">
            <summary>
            (Required; inheritable) The name of the signature handler to be used for
            authenticating the field’s contents, such as Adobe.PPKLite, Entrust.PPKEF,
            CICI.SignIt, or VeriSign.PPKVS.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.SubFilter">
            <summary>
            (Optional) The name of a specific submethod of the specified handler.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.ByteRange">
            <summary>
            (Required) An array of pairs of integers (starting byte offset, length in bytes)
            describing the exact byte range for the digest calculation. Multiple discontiguous
            byte ranges may be used to describe a digest that does not include the
            signature token itself.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Contents">
            <summary>
            (Required) The encrypted signature token.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Name">
            <summary>
            (Optional) The name of the person or authority signing the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.M">
            <summary>
            (Optional) The time of signing. Depending on the signature handler, this
            may be a normal unverified computer time or a time generated in a verifiable
            way from a secure time server.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Location">
            <summary>
            (Optional) The CPU host name or physical location of the signing.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Reason">
            <summary>
            (Optional) The reason for the signing, such as (I agree…).
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfSignatureField.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfTextField">
            <summary>
            Represents the text field.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfTextField.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfTextField.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.AcroForms.PdfTextField.RenderAppearance">
            <summary>
            Creates the normal appearance form X object for the annotation that represents
            this acro form text field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfTextField.Text">
            <summary>
            Gets or sets the text value of the text field.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfTextField.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfTextField.Keys">
            <summary>
            Predefined keys of this dictionary. 
            The description comes from PDF 1.4 Reference.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.AcroForms.PdfTextField.Keys.MaxLen">
            <summary>
            (Optional; inheritable) The maximum length of the field’s text, in characters.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.AcroForms.PdfTextField.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.AcroForms.PdfNamedActionNames">
            <summary>
            Specifies the predefined PDF actions.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Actions.PdfAction">
            <summary>
            Represents the base class for all PDF actions.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Actions.PdfAction.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Actions.PdfAction.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes;
            if present, must be Action for an action dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Actions.PdfAction.Keys.S">
            <summary>
            (Required) The type of action that this dictionary describes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Actions.PdfAction.Keys.Next">
            <summary>
            (Optional; PDF 1.2) The next action or sequence of actions to be performed
            after the action represented by this dictionary. The value is either a
            single action dictionary or an array of action dictionaries to be performed
            in order; see below for further discussion.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfType0Font">
            <summary>
            Represents a composite font. Used for Unicode encoding.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFont">
            <summary>
            Represents a font.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFont.Keys">
            <summary>
            Predefined keys common to all font dictionaries.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFont.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Font for a font dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFont.Keys.Subtype">
            <summary>
            (Required) The type of font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFont.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFont.Keys.FontDescriptor">
            <summary>
            (Required except for the standard 14 fonts; must be an indirect reference)
            A font descriptor describing the font’s metrics other than its glyph widths.
            Note: For the standard 14 fonts, the entries FirstChar, LastChar, Widths, and 
            FontDescriptor must either all be present or all be absent. Ordinarily, they are
            absent; specifying them enables a standard font to be overridden.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfType0Font.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfType0Font.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Font for a font dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.Subtype">
            <summary>
            (Required) The type of font; must be Type0 for a Type 0 font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the font. In principle, this is an arbitrary
            name, since there is no font program associated directly with a Type 0 font
            dictionary. The conventions described here ensure maximum compatibility
            with existing Acrobat products.
            If the descendant is a Type 0 CIDFont, this name should be the concatenation
            of the CIDFont’s BaseFont name, a hyphen, and the CMap name given in the
            Encoding entry (or the CMapName entry in the CMap). If the descendant is a
            Type 2 CIDFont, this name should be the same as the CIDFont’s BaseFont name.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.Encoding">
            <summary>
            (Required) The name of a predefined CMap, or a stream containing a CMap
            that maps character codes to font numbers and CIDs. If the descendant is a
            Type 2 CIDFont whose associated TrueType font program is not embedded
            in the PDF file, the Encoding entry must be a predefined CMap name.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.DescendantFonts">
            <summary>
            (Required) A one-element array specifying the CIDFont dictionary that is the
            descendant of this Type 0 font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.ToUnicode">
            <summary>
            ((Optional) A stream containing a CMap file that maps character codes to
            Unicode values.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfType0Font.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfCIDFont">
            <summary>
            Represents a CIDFont dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCIDFont.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Font for a CIDFont dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.Subtype">
            <summary>
            (Required) The type of CIDFont; CIDFontType0 or CIDFontType2.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the CIDFont. For Type 0 CIDFonts, this
            is usually the value of the CIDFontName entry in the CIDFont program. For
            Type 2 CIDFonts, it is derived the same way as for a simple TrueType font;
            In either case, the name can have a subset prefix if appropriate.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.CIDSystemInfo">
            <summary>
            (Required) A dictionary containing entries that define the character collection
            of the CIDFont.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.FontDescriptor">
            <summary>
            (Required; must be an indirect reference) A font descriptor describing the
            CIDFont’s default metrics other than its glyph widths.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.DW">
            <summary>
            (Optional) The default width for glyphs in the CIDFont.
            Default value: 1000.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.W">
            <summary>
            (Optional) A description of the widths for the glyphs in the CIDFont. The
            array’s elements have a variable format that can specify individual widths
            for consecutive CIDs or one width for a range of CIDs.
            Default value: none (the DW value is used for all glyphs).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.DW2">
            <summary>
            (Optional; applies only to CIDFonts used for vertical writing) An array of two
            numbers specifying the default metrics for vertical writing.
            Default value: [880 −1000].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.W2">
            <summary>
            (Optional; applies only to CIDFonts used for vertical writing) A description
            of the metrics for vertical writing for the glyphs in the CIDFont.
            Default value: none (the DW2 value is used for all glyphs).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.CIDToGIDMap">
            <summary>
            (Optional; Type 2 CIDFonts only) A specification of the mapping from CIDs
            to glyph indices. If the value is a stream, the bytes in the stream contain the
            mapping from CIDs to glyph indices: the glyph index for a particular CID
            value c is a 2-byte value stored in bytes 2 × c and 2 × c + 1, where the first
            byte is the high-order byte. If the value of CIDToGIDMap is a name, it must
            be Identity, indicating that the mapping between CIDs and glyph indices is
            the identity mapping.
            Default value: Identity.
            This entry may appear only in a Type 2 CIDFont whose associated True-Type font 
            program is embedded in the PDF file.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCIDFont.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfTrueTypeFont">
            <summary>
            Represents a TrueType font.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.#ctor(PdfSharp.Pdf.PdfDocument,PdfSharp.Drawing.XFont)">
            <summary>
            Initializes a new instance of PdfTrueTypeFont from an XFont.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Font for a font dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Subtype">
            <summary>
            (Required) The type of font; must be TrueType for a TrueType font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Name">
            <summary>
            (Required in PDF 1.0; optional otherwise) The name by which this font is 
            referenced in the Font subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the font. For Type 1 fonts, this is usually
            the value of the FontName entry in the font program; for more information.
            The Post-Script name of the font can be used to find the font’s definition in 
            the consumer application or its environment. It is also the name that is used when
            printing to a PostScript output device.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.FirstChar">
            <summary>
            (Required except for the standard 14 fonts) The first character code defined 
            in the font’s Widths array.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.LastChar">
            <summary>
            (Required except for the standard 14 fonts) The last character code defined
            in the font’s Widths array.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Widths">
            <summary>
            (Required except for the standard 14 fonts; indirect reference preferred)
            An array of (LastChar - FirstChar + 1) widths, each element being the glyph width
            for the character code that equals FirstChar plus the array index. For character
            codes outside the range FirstChar to LastChar, the value of MissingWidth from the 
            FontDescriptor entry for this font is used. The glyph widths are measured in units 
            in which 1000 units corresponds to 1 unit in text space. These widths must be 
            consistent with the actual widths given in the font program. 
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.FontDescriptor">
            <summary>
            (Required except for the standard 14 fonts; must be an indirect reference)
            A font descriptor describing the font’s metrics other than its glyph widths.
            Note: For the standard 14 fonts, the entries FirstChar, LastChar, Widths, and 
            FontDescriptor must either all be present or all be absent. Ordinarily, they are
            absent; specifying them enables a standard font to be overridden.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Encoding">
            <summary>
            (Optional) A specification of the font’s character encoding if different from its
            built-in encoding. The value of Encoding is either the name of a predefined
            encoding (MacRomanEncoding, MacExpertEncoding, or WinAnsiEncoding, as described in 
            Appendix D) or an encoding dictionary that specifies differences from the font’s
            built-in encoding or from a specified predefined encoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.ToUnicode">
            <summary>
            (Optional; PDF 1.2) A stream containing a CMap file that maps character
            codes to Unicode values.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrueTypeFont.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfContents">
            <summary>
            Represents an array of PDF content streams of a page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfContents.AppendContent">
            <summary>
            Appends a new content stream and returns it.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfContents.PrependContent">
            <summary>
            Prepends a new content stream and returns it.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfContents.CreateSingleContent">
            <summary>
            Creates a single content stream with the bytes from the array of the content streams.
            This operation does not modify any of the content streams in this array.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfImportedObjectTable">
            <summary>
            Represents the imported objects of an external document. Used to cache objects that are
            already imported when a PdfFormXObject is added to a page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.#ctor(PdfSharp.Pdf.PdfDocument,PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class with the document the objects are imported from.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.Contains(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Indicates whether the specified object is already imported.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.Add(PdfSharp.Pdf.PdfObjectID,PdfSharp.Pdf.Advanced.PdfReference)">
            <summary>
            Adds a cloned object to this table.
            </summary>
            <param name="externalID">The object identifier in the forein object.</param>
            <param name="iref">The cross reference to the clone of the forein object, which belongs to
            this document. In general the clone has a different object identifier.</param>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.externalIDs">
            <summary>
            Maps external object identifiers to cross reference entries of the importing document
            {PdfObjectID -> PdfReference}.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.Owner">
            <summary>
            Gets the document this table belongs to.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.ExternalDocument">
            <summary>
            Gets the external document, or null, if the external document is garbage collected.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfImportedObjectTable.Item(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Gets the cloned object that corresponds to the specified external identifier.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfCatalog">
            <summary>
            Represents the catalog dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfCatalog.PrepareForSave">
            <summary>
            Dispatches PrepareForSave to the objects that need it.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.Version">
            <summary>
            Get or sets the version of the PDF specification to which the document conforms.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.PageLayout">
            <summary>
            Implementation of PdfDocument.PageLayout.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.PageMode">
            <summary>
            Implementation of PdfDocument.PageMode.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.ViewerPreferences">
            <summary>
            Implementation of PdfDocument.ViewerPreferences.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.Outlines">
            <summary>
            Implementation of PdfDocument.Outlines.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfCatalog.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; 
            must be Catalog for the catalog dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Version">
            <summary>
            (Optional; PDF 1.4) The version of the PDF specification to which the document
            conforms (for example, 1.4) if later than the version specified in the file’s header.
            If the header specifies a later version, or if this entry is absent, the document 
            conforms to the version specified in the header. This entry enables a PDF producer 
            application to update the version using an incremental update.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Pages">
            <summary>
            (Required; must be an indirect reference) The page tree node that is the root of 
            the document’s page tree.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.PageLabels">
            <summary>
            (Optional; PDF 1.3) A number tree defining the page labeling for the document. 
            The keys in this tree are page indices; the corresponding values are page label dictionaries.
            Each page index denotes the first page in a labeling range to which the specified page 
            label dictionary applies. The tree must include a value for pageindex 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Names">
            <summary>
            (Optional; PDF 1.2) The document’s name dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Dests">
            <summary>
            (Optional; PDF 1.1; must be an indirect reference) A dictionary of names and 
            corresponding destinations.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.ViewerPreferences">
            <summary>
            (Optional; PDF 1.2) A viewer preferences dictionary specifying the way the document 
            is to be displayed on the screen. If this entry is absent, applications should use
            their own current user preference settings.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.PageLayout">
            <summary>
            (Optional) A name object specifying the page layout to be used when the document is 
            opened:
            SinglePage - Display one page at a time.
            OneColumn - Display the pages in one column.
            TwoColumnLeft - Display the pages in two columns, with oddnumbered pages on the left.
            TwoColumnRight - Display the pages in two columns, with oddnumbered pages on the right.
            TwoPageLeft - (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left
            TwoPageRight - (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.PageMode">
            <summary>
            (Optional) A name object specifying how the document should be displayed when opened:
            UseNone - Neither document outline nor thumbnail images visible.
            UseOutlines - Document outline visible.
            UseThumbs - Thumbnail images visible.
            FullScreen - Full-screen mode, with no menu bar, windowcontrols, or any other window visible.
            UseOC - (PDF 1.5) Optional content group panel visible.
            UseAttachments (PDF 1.6) Attachments panel visible.
            Default value: UseNone.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Outlines">
            <summary>
            (Optional; must be an indirect reference) The outline dictionary that is the root 
            of the document’s outline hierarchy.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Threads">
            <summary>
            (Optional; PDF 1.1; must be an indirect reference) An array of thread dictionaries 
            representing the document’s article threads.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.OpenAction">
            <summary>
            (Optional; PDF 1.1) A value specifying a destination to be displayed or an action to be 
            performed when the document is opened. The value is either an array defining a destination 
            or an action dictionary representing an action. If this entry is absent, the document
            should be opened to the top of the first page at the default magnification factor.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.AA">
            <summary>
            (Optional; PDF 1.4) An additional-actions dictionary defining the actions to be taken 
            in response to various trigger events affecting the document as a whole.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.URI">
            <summary>
            (Optional; PDF 1.1) A URI dictionary containing document-level information for URI 
            (uniform resource identifier) actions.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.AcroForm">
            <summary>
            (Optional; PDF 1.2) The document’s interactive form (AcroForm) dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4; must be an indirect reference) A metadata stream 
            containing metadata  for the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.StructTreeRoot">
            <summary>
            (Optional; PDF 1.3) The document’s structure tree root dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.MarkInfo">
            <summary>
            (Optional; PDF 1.4) A mark information dictionary containing information
            about the document’s usage of Tagged PDF conventions.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Lang">
            <summary>
            (Optional; PDF 1.4) A language identifier specifying the natural language for all 
            text in the document except where overridden by language specificationsfor structure 
            elements or marked content. If this entry is absent, the language is considered unknown.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.SpiderInfo">
            <summary>
            (Optional; PDF 1.3) A Web Capture information dictionary containing state information
            used by the Acrobat Web Capture (AcroSpider) plugin extension.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.OutputIntents">
            <summary>
            (Optional; PDF 1.4) An array of output intent dictionaries describing the color 
            characteristics of output devices on which the document might be rendered.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.PieceInfo">
            <summary>
            (Optional; PDF 1.4) A page-piece dictionary associated with the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.OCProperties">
            <summary>
            (Optional; PDF 1.5; required if a document contains optional content) The document’s 
            optional content properties dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Perms">
            <summary>
            (Optional; PDF 1.5) A permissions dictionary that specifies user access permissions 
            for the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Legal">
            <summary>
            (Optional; PDF 1.5) A dictionary containing attestations regarding the content of a 
            PDF document, as it relates to the legality of digital signatures.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfCatalog.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfContent">
            <summary>
            Represents the content of a page. PDFsharp supports only one content stream per page.
            If an imported page has an array of content streams, the streams are concatenated to
            one single stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfContent.Decode">
            <summary>
            Unfilters the stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfContent.PreserveGraphicsState">
            <summary>
            Surround content with q/Q operations if necessary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfContent.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfContent.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfContent.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfExtGState">
            <summary>
            Represents an extended graphics state object.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfExtGState.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfExtGState.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes;
            must be ExtGState for a graphics state parameter dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.LW">
            <summary>
            (Optional; PDF 1.3) The line width (see “Line Width” on page 185).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.LC">
            <summary>
            (Optional; PDF 1.3) The line cap style.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.LJ">
            <summary>
            (Optional; PDF 1.3) The line join style.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.ML">
            <summary>
            (Optional; PDF 1.3) The miter limit.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.D">
            <summary>
            (Optional; PDF 1.3) The line dash pattern, expressed as an array of the form
            [dashArray dashPhase], where dashArray is itself an array and dashPhase is an integer.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.RI">
            <summary>
            (Optional; PDF 1.3) The name of the rendering intent.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.OP">
            <summary>
            (Optional) A flag specifying whether to apply overprint. In PDF 1.2 and earlier,
            there is a single overprint parameter that applies to all painting operations.
            Beginning with PDF 1.3, there are two separate overprint parameters: one for stroking 
            and one for all other painting operations. Specifying an OP entry sets both parameters
            unless there is also an op entry in the same graphics state parameter dictionary, in
            which case the OP entry sets only the overprint parameter for stroking.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.op">
            <summary>
            (Optional; PDF 1.3) A flag specifying whether to apply overprintfor painting operations
            other than stroking. If this entry is absent, the OP entry, if any, sets this parameter.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.OPM">
            <summary>
            (Optional; PDF 1.3) The overprint mode.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.Font">
            <summary>
            (Optional; PDF 1.3) An array of the form [font size], where font is an indirect
             reference to a font dictionary and size is a number expressed in text space units.
             These two objects correspond to the operands of the Tf operator; however,
             the first operand is an indirect object reference instead of a resource name.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.BG">
            <summary>
            (Optional) The black-generation function, which maps the interval [0.0 1.0]
            to the interval [0.0 1.0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.BG2">
            <summary>
            (Optional; PDF 1.3) Same as BG except that the value may also be the name Default,
            denoting the black-generation function that was in effect at the start of the page.
            If both BG and BG2 are present in the same graphics state parameter dictionary, 
            BG2 takes precedence.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.UCR">
            <summary>
            (Optional) The undercolor-removal function, which maps the interval
            [0.0 1.0] to the interval [-1.0 1.0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.UCR2">
            <summary>
            (Optional; PDF 1.3) Same as UCR except that the value may also be the name Default,
            denoting the undercolor-removal function that was in effect at the start of the page.
            If both UCR and UCR2 are present in the same graphics state parameter dictionary, 
            UCR2 takes precedence.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.CA">
            <summary>
            (Optional; PDF 1.4) The current stroking alpha constant, specifying the constant 
            shape or constant opacity value to be used for stroking operations in the transparent
            imaging model.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.ca">
            <summary>
            (Optional; PDF 1.4) Same as CA, but for nonstroking operations.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.AIS">
            <summary>
            (Optional; PDF 1.4) The alpha source flag (“alpha is shape”), specifying whether 
            the current soft mask and alpha constant are to be interpreted as shape values (true)
            or opacity values (false).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.TK">
            <summary>
            (Optional; PDF 1.4) The text knockout flag, which determines the behavior of 
            overlapping glyphs within a text object in the transparent imaging model.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfExtGState.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfExtGStateTable">
            <summary>
            Contains all used ExtGState objects of a document.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfResourceTable">
            <summary>
            Base class for FontTable, ImageTable, FormXObjectTable etc.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfExtGStateTable.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfExtGStateTable.GetExtGState(System.Double)">
            <summary>
            Gets a PdfExtGState with the keys 'CA' and 'ca' set to the specified alpha value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfExtGStateTable.GetExtGStateStroke(System.Double)">
            <summary>
            Gets a PdfExtGState with the key 'CA' set to the specified alpha value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfExtGStateTable.GetExtGStateNonStroke(System.Double)">
            <summary>
            Gets a PdfExtGState with the key 'ca' set to the specified alpha value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfExtGStateTable.GetExtGState(PdfSharp.Drawing.XColor,PdfSharp.Drawing.XColor)">
            <summary>
            Gets a PdfExtGState with the key 'ca' set to the specified alpha value.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfExtGStateTable.alphaValues">
            <summary>
            Maps from alpha values (range "0" to "1000") to PdfExtGState objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags">
            <summary>
            The PDF font descriptor flags.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch
            fonts, which have different widths).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and
            bottom of glyph stems. (Sans serif fonts do not have serifs.)
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. This
            flag and the Nonsymbolic flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.AllCap">
            <summary>
            Font contains no lowercase letters; typically used for display purposes,
            such as for titles or headlines.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.SmallCap">
            <summary>
            Font contains both uppercase and lowercase letters. The uppercase letters are
            similar to those in the regular version of the same typeface family. The glyphs
            for the lowercase letters have the same shapes as the corresponding uppercase
            letters, but they are sized and their proportions adjusted so that they have the
            same size and stroke weight as lowercase glyphs in the same typeface family.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptorFlags.ForceBold">
            <summary>
            Determines whether bold glyphs are painted with extra pixels even at very small
            text sizes.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFontDescriptor">
            <summary>
            A PDF font descriptor specifies metrics and other attributes of a simple font, 
            as distinct from the metrics of individual glyphs.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; must be
            FontDescriptor for a font descriptor.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontName">
            <summary>
            (Required) The PostScript name of the font. This name should be the same as the 
            value of BaseFont in the font or CIDFont dictionary that refers to this font descriptor.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontFamily">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            A string specifying the preferred font family name. For example, for the font 
            Times Bold Italic, the FontFamily is Times.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontStretch">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            The font stretch value. It must be one of the following names (ordered from 
            narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed, 
            Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
            Note: The specific interpretation of these values varies from font to font. 
            For example, Condensed in one font may appear most similar to Normal in another.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontWeight">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            The weight (thickness) component of the fully-qualified font name or font specifier.
            The possible values are 100, 200, 300, 400, 500, 600, 700, 800, or 900, where each
            number indicates a weight that is at least as dark as its predecessor. A value of 
            400 indicates a normal weight; 700 indicates bold.
            Note: The specific interpretation of these values varies from font to font. 
            For example, 300 in one font may appear most similar to 500 in another.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Flags">
            <summary>
            (Required) A collection of flags defining various characteristics of the font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontBBox">
            <summary>
            (Required, except for Type 3 fonts) A rectangle (see Section 3.8.4, “Rectangles”),
            expressed in the glyph coordinate system, specifying the font bounding box. This 
            is the smallest rectangle enclosing the shape that would result if all of the 
            glyphs of the font were placed with their origins coincident and then filled.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.ItalicAngle">
            <summary>
            (Required) The angle, expressed in degrees counterclockwise from the vertical, of
            the dominant vertical strokes of the font. (For example, the 9-o’clock position is 90 
            degrees, and the 3-o’clock position is –90 degrees.) The value is negative for fonts 
            that slope to the right, as almost all italic fonts do.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Ascent">
            <summary>
            (Required, except for Type 3 fonts) The maximum height above the baseline reached 
            by glyphs in this font, excluding the height of glyphs for accented characters.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Descent">
            <summary>
            (Required, except for Type 3 fonts) The maximum depth below the baseline reached 
            by glyphs in this font. The value is a negative number.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Leading">
            <summary>
            (Optional) The spacing between baselines of consecutive lines of text.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.CapHeight">
            <summary>
            (Required for fonts that have Latin characters, except for Type 3 fonts) The vertical
            coordinate of the top of flat capital letters, measured from the baseline.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.XHeight">
            <summary>
            (Optional) The font’s x height: the vertical coordinate of the top of flat nonascending
            lowercase letters (like the letter x), measured from the baseline, in fonts that have 
            Latin characters. Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.StemV">
            <summary>
            (Required, except for Type 3 fonts) The thickness, measured horizontally, of the dominant 
            vertical stems of glyphs in the font.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.StemH">
            <summary>
            (Optional) The thickness, measured vertically, of the dominant horizontal stems 
            of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.AvgWidth">
            <summary>
            (Optional) The average width of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.MaxWidth">
            <summary>
            (Optional) The maximum width of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.MissingWidth">
            <summary>
            (Optional) The width to use for character codes whose widths are not specified in a 
            font dictionary’s Widths array. This has a predictable effect only if all such codes 
            map to glyphs whose actual widths are the same as the value of the MissingWidth entry.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontFile">
            <summary>
            (Optional) A stream containing a Type 1 font program.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontFile2">
            <summary>
            (Optional; PDF 1.1) A stream containing a TrueType font program.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.FontFile3">
            <summary>
            (Optional; PDF 1.2) A stream containing a font program whose format is specified 
            by the Subtype entry in the stream dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.CharSet">
            <summary>
            (Optional; meaningful only in Type 1 fonts; PDF 1.1) A string listing the character
            names defined in a font subset. The names in this string must be in PDF syntax—that is,
            each name preceded by a slash (/). The names can appear in any order. The name .notdef
            should be omitted; it is assumed to exist in the font subset. If this entry is absent,
            the only indication of a font subset is the subset tag in the FontName entry.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfFontDescriptor.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.FontType.TrueType">
            <summary>
            TrueType with WinAnsi encoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.FontType.Type0">
            <summary>
            TrueType with Identity-H encoding (unicode).
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFontTable">
            <summary>
            Contains all used fonts of a document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFontTable.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFontTable.GetFont(PdfSharp.Drawing.XFont)">
            <summary>
            Gets a PdfFont from an XFont. If no PdfFont already exists, a new one is created.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFontTable.fonts">
            <summary>
            Map from PdfFontSelector to PdfFont.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFontTable.FontSelector">
            <summary>
            A collection of information that uniquely idendifies a particular PDF font.
            ... more docu...
            Two PDF fonts are equal if and only if their font selector objects are equal.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFontTable.FontSelector.#ctor(PdfSharp.Drawing.XFont)">
            <summary>
            Initializes a new instance of PdfFontSelector from an XFont.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFontTable.FontSelector.ToString">
            <summary>
            Returns a string for diagnostic purposes only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfFontTable.FontSelector.Name">
            <summary>
            Gets the (generated) resource name of the font. In our own PDF files equal fonts share the
            same resource name in all contents streams.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFormXObject">
            <summary>
            Represents an external form object (an imported page i.g).
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfXObject">
            <summary>
            Base class for all PDF external objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfXObject.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfFormXObject.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be XObject for a form XObject.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.Subtype">
            <summary>
            (Required) The type of XObject that this dictionary describes; must be Form
            for a form XObject.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.FormType">
            <summary>
            (Optional) A code identifying the type of form XObject that this dictionary
            describes. The only valid value defined at the time of publication is 1.
            Default value: 1.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.BBox">
            <summary>
            (Required) An array of four numbers in the form coordinate system, giving the 
            coordinates of the left, bottom, right, and top edges, respectively, of the 
            form XObject’s bounding box. These boundaries are used to clip the form XObject
            and to determine its size for caching.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.Matrix">
            <summary>
            (Optional) An array of six numbers specifying the form matrix, which maps
            form space into user space.
            Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.Resources">
            <summary>
            (Optional but strongly recommended; PDF 1.2) A dictionary specifying any
            resources (such as fonts and images) required by the form XObject.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfFormXObject.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFormXObjectTable">
            <summary>
            Contains all external PDF files from which PdfFormXObjects are imported into the current document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.GetForm(PdfSharp.Drawing.XForm)">
            <summary>
            Gets a PdfFormXObject from an XPdfForm. Because the returned objects must be unique, always
            a new instance of PdfFormXObject is created if none exists for the specifed form. 
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.GetImportedObjectTable(PdfSharp.Pdf.PdfPage)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.forms">
            <summary>
            Map from FormSelector to ImportedObjectTable.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.Selector">
            <summary>
            A collection of information that uniquely idendifies a particular ImportedObjectTable.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.Selector.#ctor(PdfSharp.Drawing.XForm)">
            <summary>
            Initializes a new instance of FormSelector from an XPdfForm.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfFormXObjectTable.Selector.#ctor(PdfSharp.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of FormSelector from a PdfPage.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfImage">
            <summary>
            Represents an image.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImage.#ctor(PdfSharp.Pdf.PdfDocument,PdfSharp.Drawing.XImage)">
            <summary>
            Initializes a new instance of PdfImage from an XImage.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImage.ToString">
            <summary>
            Returns 'Image'.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImage.InitializeJpeg">
            <summary>
            Creates the keys for a JPEG image.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImage.InitializeNonJpeg">
            <summary>
            Creates the keys for a FLATE image.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImage.ReadTrueColorMemoryBitmap(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reads images that are returned from GDI+ without color palette.
            </summary>
            <param name="components">4 (32bpp RGB), 3 (24bpp RGB, 32bpp ARGB)</param>
            <param name="bits">8</param>
            <param name="hasAlpha">true (ARGB), false (RGB)</param>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfImage.Image">
            <summary>
            Gets the underlying XImage object.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfImage.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes;
            if present, must be XObject for an image XObject.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Subtype">
            <summary>
            (Required) The type of XObject that this dictionary describes;
            must be Image for an image XObject.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Width">
            <summary>
            (Required) The width of the image, in samples.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Height">
            <summary>
            (Required) The height of the image, in samples.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.ColorSpace">
            <summary>
            (Required for images, except those that use the JPXDecode filter; not allowed for image masks)
            The color space in which image samples are specified; it can be any type of color space except
            Pattern. If the image uses the JPXDecode filter, this entry is optional:
            • If ColorSpace is present, any color space specifications in the JPEG2000 data are ignored.
            • If ColorSpace is absent, the color space specifications in the JPEG2000 data are used.
              The Decode array is also ignored unless ImageMask is true.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.BitsPerComponent">
            <summary>
            (Required except for image masks and images that use the JPXDecode filter)
            The number of bits used to represent each color component. Only a single value may be specified;
            the number of bits is the same for all color components. Valid values are 1, 2, 4, 8, and 
            (in PDF 1.5) 16. If ImageMask is true, this entry is optional, and if specified, its value 
            must be 1.
            If the image stream uses a filter, the value of BitsPerComponent must be consistent with the 
            size of the data samples that the filter delivers. In particular, a CCITTFaxDecode or JBIG2Decode 
            filter always delivers 1-bit samples, a RunLengthDecode or DCTDecode filter delivers 8-bit samples,
            and an LZWDecode or FlateDecode filter delivers samples of a specified size if a predictor function
            is used.
            If the image stream uses the JPXDecode filter, this entry is optional and ignored if present.
            The bit depth is determined in the process of decoding the JPEG2000 image.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Intent">
            <summary>
            (Optional; PDF 1.1) The name of a color rendering intent to be used in rendering the image.
            Default value: the current rendering intent in the graphics state.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.ImageMask">
            <summary>
            (Optional) A flag indicating whether the image is to be treated as an image mask.
            If this flag is true, the value of BitsPerComponent must be 1 and Mask and ColorSpace should
            not be specified; unmasked areas are painted using the current nonstroking color.
            Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Mask">
            <summary>
            (Optional except for image masks; not allowed for image masks; PDF 1.3)
            An image XObject defining an image mask to be applied to this image, or an array specifying 
            a range of colors to be applied to it as a color key mask. If ImageMask is true, this entry
            must not be present.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Decode">
            <summary>
            (Optional) An array of numbers describing how to map image samples into the range of values
            appropriate for the image’s color space. If ImageMask is true, the array must be either
            [0 1] or [1 0]; otherwise, its length must be twice the number of color components required 
            by ColorSpace. If the image uses the JPXDecode filter and ImageMask is false, Decode is ignored.
            Default value: see “Decode Arrays”.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Interpolate">
            <summary>
            (Optional) A flag indicating whether image interpolation is to be performed. 
            Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Alternates">
            <summary>
            (Optional; PDF 1.3) An array of alternate image dictionaries for this image. The order of 
            elements within the array has no significance. This entry may not be present in an image 
            XObject that is itself an alternate image.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.SMask">
            <summary>
            (Optional; PDF 1.4) A subsidiary image XObject defining a soft-mask image to be used as a 
            source of mask shape or mask opacity values in the transparent imaging model. The alpha 
            source parameter in the graphics state determines whether the mask values are interpreted as
            shape or opacity. If present, this entry overrides the current soft mask in the graphics state,
            as well as the image’s Mask entry, if any. (However, the other transparencyrelated graphics 
            state parameters—blend mode and alpha constant—remain in effect.) If SMask is absent, the 
            image has no associated soft mask (although the current soft mask in the graphics state may
            still apply).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.SMaskInData">
            <summary>
            (Optional for images that use the JPXDecode filter, meaningless otherwise; PDF 1.5)
            A code specifying how soft-mask information encoded with image samples should be used:
            0 If present, encoded soft-mask image information should be ignored.
            1 The image’s data stream includes encoded soft-mask values. An application can create
              a soft-mask image from the information to be used as a source of mask shape or mask 
              opacity in the transparency imaging model.
            2 The image’s data stream includes color channels that have been preblended with a 
              background; the image data also includes an opacity channel. An application can create
              a soft-mask image with a Matte entry from the opacity channel information to be used as
              a source of mask shape or mask opacity in the transparency model. If this entry has a 
              nonzero value, SMask should not be specified.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Name">
            <summary>
            (Required in PDF 1.0; optional otherwise) The name by which this image XObject is 
            referenced in the XObject subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.StructParent">
            <summary>
            (Required if the image is a structural content item; PDF 1.3) The integer key of the 
            image’s entry in the structural parent tree.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.ID">
            <summary>
            (Optional; PDF 1.3; indirect reference preferred) The digital identifier of the image’s
            parent Web Capture content set.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.OPI">
            <summary>
            (Optional; PDF 1.2) An OPI version dictionary for the image. If ImageMask is true, 
            this entry is ignored.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4) A metadata stream containing metadata for the image.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImage.Keys.OC">
            <summary>
            (Optional; PDF 1.5) An optional content group or optional content membership dictionary,
            specifying the optional content properties for this image XObject. Before the image is
            processed, its visibility is determined based on this entry. If it is determined to be 
            invisible, the entire image is skipped, as if there were no Do operator to invoke it.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.MonochromeMask">
            <summary>
            Helper class for creating bitmap masks (8 pels per byte).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.MonochromeMask.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a bitmap mask.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.MonochromeMask.StartLine(System.Int32)">
            <summary>
            Starts a new line.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.MonochromeMask.AddPel(System.Boolean)">
            <summary>
            Adds a pel to the current line.
            </summary>
            <param name="isTransparent"></param>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.MonochromeMask.AddPel(System.Int32)">
            <summary>
            Adds a pel from an alpha mask value.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.MonochromeMask.MaskData">
            <summary>
            Returns the bitmap mask that will be written to PDF.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfImageTable">
            <summary>
            Contains all used images of a document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImageTable.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImageTable.GetImage(PdfSharp.Drawing.XImage)">
            <summary>
            Gets a PdfImage from an XImage. If no PdfImage already exists, a new one is created.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfImageTable.images">
            <summary>
            Map from ImageSelector to PdfImage.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfImageTable.ImageSelector">
            <summary>
            A collection of information that uniquely idendifies a particular PdfImage.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfImageTable.ImageSelector.#ctor(PdfSharp.Drawing.XImage)">
            <summary>
            Initializes a new instance of ImageSelector from an XImage.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfInternals">
            <summary>
            Provides access to the internal document data structures. This class prevents the public
            interfaces from pollution with internal functions.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GetObject(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Returns the object with the specified Identifier, or null, if no such object exists.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GetReference(PdfSharp.Pdf.PdfObject)">
            <summary>
            Returns the PdfReference of the specified object, or null, if the object is not in the
            document's object table.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GetObjectID(PdfSharp.Pdf.PdfObject)">
            <summary>
            Gets the object identifier of the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GetObjectNumber(PdfSharp.Pdf.PdfObject)">
            <summary>
            Gets the object number of the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GenerationNumber(PdfSharp.Pdf.PdfObject)">
            <summary>
            Gets the generation number of the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.AddObject(PdfSharp.Pdf.PdfObject)">
            <summary>
            Adds an object to the PDF document. This operation and only this operation makes the object 
            an indirect object owned by this document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.RemoveObject(PdfSharp.Pdf.PdfObject)">
            <summary>
            Removes an object from the PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.GetClosure(PdfSharp.Pdf.PdfObject)">
            <summary>
            Returns an array containing the specified object as first element follows by its transitive
            closure. The closure of an object are all objects that can be reached by indirect references. 
            The transitive closure is the result of applying the calculation of the closure to a closure
            as long as no new objects came along. This is e.g. useful for getting all objects belonging 
            to the resources of a page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfInternals.WriteObject(System.IO.Stream,PdfSharp.Pdf.PdfItem)">
            <summary>
            Writes a PdfItem into the specified stream.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.FirstDocumentID">
            <summary>
            Gets or sets the first document identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.FirstDocumentGuid">
            <summary>
            Gets the first document identifier as GUID.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.SecondDocumentID">
            <summary>
            Gets or sets the second document identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.SecondDocumentGuid">
            <summary>
            Gets the first document identifier as GUID.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.Catalog">
            <summary>
            Gets the catalog dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfInternals.AllObjects">
            <summary>
            Gets all indirect objects ordered by their object identifier.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfPageInheritableObjects">
            <summary>
            Represents a PDF page object.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfPageInheritableObjects.MediaBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfResourceMap">
            <summary>
            Base class for all dictionaries that map resource names to objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResourceMap.CollectResourceNames(System.Collections.Hashtable)">
            <summary>
            Adds all imported resource names to the specified hashtable.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfResources">
            <summary>
            Represents a PDF resource object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddFont(PdfSharp.Pdf.Advanced.PdfFont)">
            <summary>
            Adds the specified font to this resource dictionary and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddImage(PdfSharp.Pdf.Advanced.PdfImage)">
            <summary>
            Adds the specified image to this resource dictionary
            and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddForm(PdfSharp.Pdf.Advanced.PdfFormXObject)">
            <summary>
            Adds the specified form object to this resource dictionary
            and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddExtGState(PdfSharp.Pdf.Advanced.PdfExtGState)">
            <summary>
            Adds the specified graphics state to this resource dictionary
            and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddPattern(PdfSharp.Pdf.Advanced.PdfShadingPattern)">
            <summary>
            Adds the specified pattern to this resource dictionary
            and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.AddShading(PdfSharp.Pdf.Advanced.PdfShading)">
            <summary>
            Adds the specified shading to this resource dictionary
            and returns its local resource name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfResources.ExistsResourceNames(System.String)">
            <summary>
            Check whether a resource name is already used in the context of this resource dictionary.
            PDF4NET uses GUIDs as resource names, but I think this weapon is to heavy.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.importedResourceNames">
            <summary>
            All the names of imported resources.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.resources">
            <summary>
            Maps all PDFsharp resources to their local resource names.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.Fonts">
            <summary>
            Gets the fonts map.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.XObjects">
            <summary>
            Gets the external objects map.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextFontName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextImageName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextFormName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextExtGStateName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextPatternName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.NextShadingName">
            <summary>
            Gets a new local name for this resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfResources.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.ExtGState">
            <summary>
            (Optional) A dictionary that maps resource names to graphics state 
            parameter dictionaries.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.ColorSpace">
            <summary>
            (Optional) A dictionary that maps each resource name to either the name of a
            device-dependent color space or an array describing a color space.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.Pattern">
            <summary>
            (Optional) A dictionary that maps each resource name to either the name of a
            device-dependent color space or an array describing a color space.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.Shading">
            <summary>
            (Optional; PDF 1.3) A dictionary that maps resource names to shading dictionaries.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.XObject">
            <summary>
            (Optional) A dictionary that maps resource names to external objects.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.Font">
            <summary>
            (Optional) A dictionary that maps resource names to font dictionaries.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.ProcSet">
            <summary>
            (Optional) An array of predefined procedure set names.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfResources.Keys.Properties">
            <summary>
            (Optional; PDF 1.2) A dictionary that maps resource names to property list
            dictionaries for marked content.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfResources.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfShading">
            <summary>
            Represents a shading dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfShading.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfShading.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.ShadingType">
            <summary>
            (Required) The shading type:
            1 Function-based shading
            2 Axial shading
            3 Radial shading
            4 Free-form Gouraud-shaded triangle mesh
            5 Lattice-form Gouraud-shaded triangle mesh
            6 Coons patch mesh
            7 Tensor-product patch mesh
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.ColorSpace">
            <summary>
            (Required) The color space in which color values are expressed. This may be any device, 
            CIE-based, or special color space except a Pattern space.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.Background">
            <summary>
            (Optional) An array of color components appropriate to the color space, specifying
            a single background color value. If present, this color is used, before any painting 
            operation involving the shading, to fill those portions of the area to be painted 
            that lie outside the bounds of the shading object. In the opaque imaging model, 
            the effect is as if the painting operation were performed twice: first with the 
            background color and then with the shading.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.BBox">
            <summary>
            (Optional) An array of four numbers giving the left, bottom, right, and top coordinates, 
            respectively, of the shading’s bounding box. The coordinates are interpreted in the 
            shading’s target coordinate space. If present, this bounding box is applied as a temporary 
            clipping boundary when the shading is painted, in addition to the current clipping path
            and any other clipping boundaries in effect at that time.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.AntiAlias">
            <summary>
            (Optional) A flag indicating whether to filter the shading function to prevent aliasing 
            artifacts. The shading operators sample shading functions at a rate determined by the 
            resolution of the output device. Aliasing can occur if the function is not smooth—that
            is, if it has a high spatial frequency relative to the sampling rate. Anti-aliasing can
            be computationally expensive and is usually unnecessary, since most shading functions
            are smooth enough or are sampled at a high enough frequency to avoid aliasing effects.
            Anti-aliasing may not be implemented on some output devices, in which case this flag
            is ignored.
            Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.Coords">
            <summary>
            (Required) An array of four numbers [x0 y0 x1 y1] specifying the starting and
            ending coordinates of the axis, expressed in the shading’s target coordinate space.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.Domain">
            <summary>
            (Optional) An array of two numbers [t0 t1] specifying the limiting values of a
            parametric variable t. The variable is considered to vary linearly between these
            two values as the color gradient varies between the starting and ending points of
            the axis. The variable t becomes the input argument to the color function(s).
            Default value: [0.0 1.0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.Function">
            <summary>
            (Required) A 1-in, n-out function or an array of n 1-in, 1-out functions (where n
            is the number of color components in the shading dictionary’s color space). The
            function(s) are called with values of the parametric variable t in the domain defined
            by the Domain entry. Each function’s domain must be a superset of that of the shading
            dictionary. If the value returned by the function for a given color component is out
            of range, it is adjusted to the nearest valid value.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShading.Keys.Extend">
            <summary>
            (Optional) An array of two boolean values specifying whether to extend the shading
            beyond the starting and ending points of the axis, respectively.
            Default value: [false false].
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfShading.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfShadingPattern">
            <summary>
            Represents a shading dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfShadingPattern.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Pattern for a pattern dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.PatternType">
            <summary>
            (Required) A code identifying the type of pattern that this dictionary describes;
            must be 2 for a shading pattern.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.Shading">
            <summary>
            (Required) A shading object (see below) defining the shading pattern’s gradient fill.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.Matrix">
            <summary>
            (Optional) An array of six numbers specifying the pattern matrix.
            Default value: the identity matrix [1 0 0 1 0 0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.ExtGState">
            <summary>
            (Optional) A graphics state parameter dictionary containing graphics state parameters
            to be put into effect temporarily while the shading pattern is painted. Any parameters
            that are not so specified are inherited from the graphics state that was in effect
            at the beginning of the content stream in which the pattern is defined as a resource.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfShadingPattern.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfTrailer">
            <summary>
            Represents a PDF trailer dictionary. Even trailers are dictionaries their never have a cross
            reference entry in PdfReferenceTable.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrailer.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfTrailer.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrailer.GetDocumentID(System.Int32)">
            <summary>
            Gets the first or secound document identifier.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrailer.SetDocumentID(System.Int32,System.String)">
            <summary>
            Sets the first or secound document identifier.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrailer.CreateNewDocumentIDs">
            <summary>
            Creates and sets two identical new document IDs.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfTrailer.Finish">
            <summary>
            Replace temporary irefs by their correct counterparts from the iref table.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrailer.Root">
            <summary>
            (Required; must be an indirect reference)
            The catalog dictionary for the PDF document contained in the file.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrailer.SecurityHandler">
            <summary>
            Gets the standard security handler.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrailer.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfTrailer.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Size">
            <summary>
            (Required; must not be an indirect reference) The total number of entries in the file’s 
            cross-reference table, as defined by the combination of the original section and all
            update sections. Equivalently, this value is 1 greater than the highest object number
            used in the file.
            Note: Any object in a cross-reference section whose number is greater than this value is
            ignored and considered missing.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Prev">
            <summary>
            (Present only if the file has more than one cross-reference section; must not be an indirect
            reference) The byte offset from the beginning of the file to the beginning of the previous 
            cross-reference section.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Root">
            <summary>
            (Required; must be an indirect reference) The catalog dictionary for the PDF document
            contained in the file.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Encrypt">
            <summary>
            (Required if document is encrypted; PDF 1.1) The document’s encryption dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Info">
            <summary>
            (Optional; must be an indirect reference) The document’s information dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.ID">
            <summary>
            (Optional, but strongly recommended; PDF 1.1) An array of two strings constituting
            a file identifier for the file. Although this entry is optional, 
            its absence might prevent the file from functioning in some workflows
            that depend on files being uniquely identified.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.XRefStm">
            <summary>
            (Optional) The byte offset from the beginning of the file of a cross-reference stream.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfTrailer.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfReference">
            <summary>
            Represents an indirect reference to a PdfObject.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.#ctor(PdfSharp.Pdf.PdfObject)">
            <summary>
            Initializes a new PdfReference instance for the specified indirect object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.#ctor(PdfSharp.Pdf.PdfObjectID,System.Int32)">
            <summary>
            Initializes a new PdfReference instance from the specified object identifier and file position.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.WriteXRefEnty(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the object in PDF iref table format.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes an indirect reference.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.SetObject(PdfSharp.Pdf.PdfObject)">
            <summary>
            Hack for dead objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Advanced.PdfReference.ToString">
            <summary>
            Gets a string representing the object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.ObjectID">
            <summary>
            Gets or sets the object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.ObjectNumber">
            <summary>
            Gets the object number of the object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.GenerationNumber">
            <summary>
            Gets the generation number of the object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.Position">
            <summary>
            Gets or sets the file position of the related PdfObject.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.Value">
            <summary>
            Gets or sets the referenced PdfObject.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Advanced.PdfReference.Document">
            <summary>
            Gets or sets the document this object belongs to.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Advanced.PdfReference.PdfReferenceComparer">
            <summary>
            Implements a comparer that compares PdfReference objects by their PdfObjectID.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfAnnotationFlags">
            <summary>
            Specifies the annotation flags.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.Invisible">
            <summary>
            If set, do not display the annotation if it does not belong to one of the standard
            annotation types and no annotation handler is available. If clear, display such an
            unknown annotation using an appearance stream specified by its appearancedictionary,
            if any.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.Hidden">
            <summary>
            (PDF 1.2) If set, do not display or print the annotation or allow it to interact
            with the user, regardless of its annotation type or whether an annotation
            handler is available. In cases where screen space is limited, the ability to hide
            and show annotations selectively can be used in combination with appearance
            streams to display auxiliary pop-up information similar in function to online
            help systems.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.Print">
            <summary>
            (PDF 1.2) If set, print the annotation when the page is printed. If clear, never
            print the annotation, regardless of whether it is displayed on the screen. This
            can be useful, for example, for annotations representing interactive pushbuttons,
            which would serve no meaningful purpose on the printed page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.NoZoom">
            <summary>
            (PDF 1.3) If set, do not scale the annotation’s appearance to match the magnification
            of the page. The location of the annotation on the page (defined by the
            upper-left corner of its annotation rectangle) remains fixed, regardless of the
            page magnification. See below for further discussion.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.NoRotate">
            <summary>
            (PDF 1.3) If set, do not rotate the annotation’s appearance to match the rotation
            of the page. The upper-left corner of the annotation rectangle remains in a fixed
            location on the page, regardless of the page rotation. See below for further discussion.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.NoView">
            <summary>
            (PDF 1.3) If set, do not display the annotation on the screen or allow it to
            interact with the user. The annotation may be printed (depending on the setting
            of the Print flag) but should be considered hidden for purposes of on-screen
            display and user interaction.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.ReadOnly">
            <summary>
            (PDF 1.3) If set, do not allow the annotation to interact with the user. The
            annotation may be displayed or printed (depending on the settings of the
            NoView and Print flags) but should not respond to mouse clicks or change its
            appearance in response to mouse motions.
            Note: This flag is ignored for widget annotations; its function is subsumed by
            the ReadOnly flag of the associated form field.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.Locked">
            <summary>
            (PDF 1.4) If set, do not allow the annotation to be deleted or its properties
            (including position and size) to be modified by the user. However, this flag does
            not restrict changes to the annotation’s contents, such as the value of a form
            field.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotationFlags.ToggleNoView">
            <summary>
            (PDF 1.5) If set, invert the interpretation of the NoView flag for certain events.
            A typical use is to have an annotation that appears only when a mouse cursor is
            held over it.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotationIcon">
            <summary>
            Specifies the predefined icon names of rubber stamp annotations.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfTextAnnotationIcon">
            <summary>
            Specifies the predefined icon names of text annotations.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfAnnotation">
            <summary>
            Represents the base class of all annotations.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Annotations.PdfAnnotation.Delete">
            <summary>
            Removes an annotation from the document
            <seealso cref="M:PdfSharp.Pdf.Annotations.PdfAnnotations.Remove(PdfSharp.Pdf.Annotations.PdfAnnotation)"/>
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Flags">
            <summary>
            Gets or sets the annotation flags of this instance.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Parent">
            <summary>
            Gets or sets the PdfAnnotations object that this annoation belongs to.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Rectangle">
            <summary>
            Gets or sets the annotation rectangle, defining the location of the annotation
            on the page in default user space units.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Title">
            <summary>
            Gets or sets the text label to be displayed in the title bar of the annotation’s
            pop-up window when open and active. By convention, this entry identifies
            the user who added the annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Subject">
            <summary>
            Gets or sets text representing a short description of the subject being
            addressed by the annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Contents">
            <summary>
            Gets or sets the text to be displayed for the annotation or, if this type of
            annotation does not display text, an alternate description of the annotation’s
            contents in human-readable form.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Color">
            <summary>
            Gets or sets the color representing the components of the annotation. If the color
            has an alpha value other than 1, it is ignored. Use property Opacity to get or set the
            opacity of an annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotation.Opacity">
            <summary>
            Gets or sets the constant opacity value to be used in painting the annotation.
            This value applies to all visible elements of the annotation in its closed state
            (including its background and border) but not to the popup window that appears when
            the annotation is opened.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Annot for an annotation dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Subtype">
            <summary>
            (Required) The type of annotation that this dictionary describes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Rect">
            <summary>
            (Required) The annotation rectangle, defining the location of the annotation
            on the page in default user space units.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Contents">
            <summary>
            (Optional) Text to be displayed for the annotation or, if this type of annotation
            does not display text, an alternate description of the annotation’s contents
            in human-readable form. In either case, this text is useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.NM">
            <summary>
            (Optional; PDF 1.4) The annotation name, a text string uniquely identifying it
            among all the annotations on its page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.M">
            <summary>
            (Optional; PDF 1.1) The date and time when the annotation was most recently
            modified. The preferred format is a date string, but viewer applications should be 
            prepared to accept and display a string in any format.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.F">
            <summary>
            (Optional; PDF 1.1) A set of flags specifying various characteristics of the annotation.
            Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.BS">
            <summary>
            (Optional; PDF 1.2) A border style dictionary specifying the characteristics of
            the annotation’s border.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.AP">
            <summary>
            (Optional; PDF 1.2) An appearance dictionary specifying how the annotation
            is presented visually on the page. Individual annotation handlers may ignore
            this entry and provide their own appearances.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.AS">
            <summary>
            (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2)
            The annotation’s appearance state, which selects the applicable appearance stream from 
            an appearance subdictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Border">
            <summary>
            (Optional) An array specifying the characteristics of the annotation’s border.
            The border is specified as a rounded rectangle.
            In PDF 1.0, the array consists of three numbers defining the horizontal corner 
            radius, vertical corner radius, and border width, all in default user space units.
            If the corner radii are 0, the border has square (not rounded) corners; if the border 
            width is 0, no border is drawn.
            In PDF 1.1, the array may have a fourth element, an optional dash array defining a 
            pattern of dashes and gaps to be used in drawing the border. The dash array is 
            specified in the same format as in the line dash pattern parameter of the graphics state.
            For example, a Border value of [0 0 1 [3 2]] specifies a border 1 unit wide, with
            square corners, drawn with 3-unit dashes alternating with 2-unit gaps. Note that no
            dash phase is specified; the phase is assumed to be 0.
            Note: In PDF 1.2 or later, this entry may be ignored in favor of the BS entry.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.C">
            <summary>
            (Optional; PDF 1.1) An array of three numbers in the range 0.0 to 1.0, representing
            the components of a color in the DeviceRGB color space. This color is used for the
            following purposes:
            • The background of the annotation’s icon when closed
            • The title bar of the annotation’s pop-up window
            • The border of a link annotation
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.A">
            <summary>
            (Optional; PDF 1.1) An action to be performed when the annotation is activated.
            Note: This entry is not permitted in link annotations if a Dest entry is present.
            Also note that the A entry in movie annotations has a different meaning.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.T">
            <summary>
            (Optional; PDF 1.1) The text label to be displayed in the title bar of the annotation’s
            pop-up window when open and active. By convention, this entry identifies
            the user who added the annotation.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Popup">
            <summary>
            (Optional; PDF 1.3) An indirect reference to a pop-up annotation for entering or
            editing the text associated with this annotation.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.CA">
            <summary>
            (Optional; PDF 1.4) The constant opacity value to be used in painting the annotation.
            This value applies to all visible elements of the annotation in its closed state
            (including its background and border) but not to the popup window that appears when
            the annotation is opened.
            The specified value is not used if the annotation has an appearance stream; in that
            case, the appearance stream must specify any transparency. (However, if the viewer
            regenerates the annotation’s appearance stream, it may incorporate the CA value
            into the stream’s content.)
            The implicit blend mode is Normal.
            Default value: 1.0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfAnnotation.Keys.Subj">
            <summary>
            (Optional; PDF 1.5) Text representing a short description of the subject being
            addressed by the annotation.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfAnnotations">
            <summary>
            Represents the annotations array of a page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Annotations.PdfAnnotations.Remove(PdfSharp.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes an annotation from the document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Annotations.PdfAnnotations.Clear">
            <summary>
            Removes all the annotations from the current page.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotations.Count">
            <summary>
            Gets the number of annoations in this collection.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotations.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:PdfSharp.Pdf.Annotations.PdfAnnotation"/> at the specified index.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfAnnotations.Page">
            <summary>
            Gets the page the annotations belongs to.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfGenericAnnotation">
            <summary>
            Represents a generic annotation. Used for annotation dictionaries unknown to PDFsharp.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfGenericAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfGenericAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfLinkAnnotation">
            <summary>
            Represents a link annotation.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.CreateDocumentLink(PdfSharp.Pdf.PdfRectangle,System.Int32)">
            <summary>
            Creates a link within the current document.
            </summary>
            <param name="rect">The link area in default page coordinates.</param>
            <param name="destinatinPage">The one-based destination page number.</param>
            <returns></returns>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Keys.Dest">
            <summary>
            (Optional; not permitted if an A entry is present) A destination to be displayed
            when the annotation is activated.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Keys.H">
            <summary>
            (Optional; PDF 1.2) The annotation’s highlighting mode, the visual effect to be
            used when the mouse button is pressed or held down inside its active area:
            N (None) No highlighting.
            I (Invert) Invert the contents of the annotation rectangle.
            O (Outline) Invert the annotation’s border.
            P (Push) Display the annotation as if it were being pushed below the surface of the page.
            Default value: I.
            Note: In PDF 1.1, highlighting is always done by inverting colors inside the annotation rectangle.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Keys.PA">
            <summary>
            (Optional; PDF 1.3) A URI action formerly associated with this annotation. When Web 
            Capture changes an annotation from a URI to a go-to action, it uses this entry to save 
            the data from the original URI action so that it can be changed back in case the target page for 
            the go-to action is subsequently deleted.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfLinkAnnotation.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotation">
            <summary>
            Represents a rubber stamp annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotation.Icon">
            <summary>
            Gets or sets an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfRubberStampAnnotation.Keys.Name">
            <summary>
            (Optional) The name of an icon to be used in displaying the annotation. Viewer
            applications should provide predefined icon appearances for at least the following
            standard names:
              Approved
              AsIs
              Confidential
              Departmental
              Draft
              Experimental
              Expired
              Final
              ForComment
              ForPublicRelease
              NotApproved
              NotForPublicRelease
              Sold
              TopSecret
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfTextAnnotation">
            <summary>
            Represents a text annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Open">
            <summary>
            Gets or sets a flag indicating whether the annotation should initially be displayed open.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Icon">
            <summary>
            Gets or sets an icon to be used in displaying the annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Keys.Open">
            <summary>
            (Optional) A flag specifying whether the annotation should initially be displayed open.
            Default value: false (closed).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfTextAnnotation.Keys.Name">
            <summary>
            (Optional) The name of an icon to be used in displaying the annotation. Viewer
            applications should provide predefined icon appearances for at least the following
            standard names:
              Comment 
              Help 
              Insert
              Key 
              NewParagraph 
              Note
              Paragraph
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfWidgetAnnotation">
            <summary>
            Represents a text annotation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Annotations.PdfWidgetAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Annotations.PdfWidgetAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfWidgetAnnotation.Keys.H">
            <summary>
            (Optional) The annotation’s highlighting mode, the visual effect to be used when
            the mouse button is pressed or held down inside its active area:
              N (None) No highlighting.
              I (Invert) Invert the contents of the annotation rectangle.
              O (Outline) Invert the annotation’s border.
              P (Push) Display the annotation’s down appearance, if any. If no down appearance is defined,
                offset the contents of the annotation rectangle to appear as if it were being pushed below
                the surface of the page.
              T (Toggle) Same as P (which is preferred).
            A highlighting mode other than P overrides any down appearance defined for the annotation. 
            Default value: I.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Annotations.PdfWidgetAnnotation.Keys.MK">
            <summary>
            (Optional) An appearance characteristics dictionary to be used in constructing a dynamic 
            appearance stream specifying the annotation’s visual presentation on the page.
            The name MK for this entry is of historical significance only and has no direct meaning.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.ASCII85Decode">
            <summary>
            Implements the ASCII85Decode filter.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.Filter">
            <summary>
            Base class for all stream filters
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filter.Encode(System.Byte[])">
            <summary>
            When implemented in a derived class encodes the specified data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filter.Encode(System.String)">
            <summary>
            Encodes a raw string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filter.Decode(System.Byte[],PdfSharp.Pdf.Filters.FilterParms)">
            <summary>
            When implemented in a derived class decodes the specified data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filter.DecodeToString(System.Byte[],PdfSharp.Pdf.Filters.FilterParms)">
            <summary>
            Decodes to a raw string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filter.RemoveWhiteSpace(System.Byte[])">
            <summary>
            Removes all white spaces from the data. The function assumes that the bytes are characters.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.ASCIIHexDecode">
            <summary>
            Implements the ASCIIHexDecode filter.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.Filtering">
            <summary>
            Applies standard filters to streams.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filtering.GetFilter(System.String)">
            <summary>
            Gets the filter specified by the case sensitive name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filtering.Encode(System.Byte[],System.String)">
            <summary>
            Encodes the data with the specified filter.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filtering.Encode(System.String,System.String)">
            <summary>
            Encodes a raw string with the specified filter.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filtering.Decode(System.Byte[],System.String,PdfSharp.Pdf.Filters.FilterParms)">
            <summary>
            Decodes the data with the specified filter.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.Filtering.DecodeToString(System.Byte[],System.String,PdfSharp.Pdf.Filters.FilterParms)">
            <summary>
            Decodes to a raw string with the specified filter.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Filters.Filtering.ASCIIHexDecode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Filters.Filtering.ASCII85Decode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Filters.Filtering.LzwDecode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Filters.Filtering.FlateDecode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.FlateDecode">
            <summary>
            Implements the FlateDecode filter by wrapping SharpZipLib.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Filters.LzwDecode">
            <summary>
            Implements the LzwDecode filter.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.LzwDecode.InitializeDictionary">
            <summary>
            Initialize the dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Filters.LzwDecode.AddEntry(System.Byte[],System.Byte)">
            <summary>
            Add a new entry to the Dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Filters.LzwDecode.NextCode">
            <summary>
            Returns the next set of bits.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.AnsiEncoding">
            <summary>
            An encoder for PDF AnsiEncoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Internal.AnsiEncoding.AnsiToUnicode">
            <summary>
            Converts WinAnsi to Unicode characters.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.RawUnicodeEncoding">
            <summary>
            An encoder for Unicode strings.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.GlobalObjectTable">
            <summary>
            Provides a thread-local cache for large objects.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Internal.GlobalObjectTable.documentHandles">
            <summary>
            Array of handles to all documents.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.DocEncoding">
            <summary>
            An encoder for PDF DocEncoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Internal.DocEncoding.AnsiToDoc">
            <summary>
            Converts WinAnsi to DocEncode characters. Incomplete, just maps € and some other characters.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.PdfEncoders">
            <summary>
            Groups a set of static encoding helper functions.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToStringLiteral(System.String,PdfSharp.Pdf.PdfStringEncoding,PdfSharp.Pdf.Security.PdfStandardSecurityHandler)">
            <summary>
            Converts a raw string into a raw string literal, possibly encrypted.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToStringLiteral(System.Byte[],System.Boolean,PdfSharp.Pdf.Security.PdfStandardSecurityHandler)">
            <summary>
            Converts a raw string into a raw string literal, possibly encrypted.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToHexStringLiteral(System.String,PdfSharp.Pdf.PdfStringEncoding,PdfSharp.Pdf.Security.PdfStandardSecurityHandler)">
            <summary>
            Converts a raw string into a raw hexadecimal string literal, possibly encrypted.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToHexStringLiteral(System.Byte[],System.Boolean,PdfSharp.Pdf.Security.PdfStandardSecurityHandler)">
            <summary>
            Converts a raw string into a raw hexadecimal string literal, possibly encrypted.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.FormatStringLiteral(System.Byte[],System.Boolean,System.Boolean,System.Boolean,PdfSharp.Pdf.Security.PdfStandardSecurityHandler)">
            <summary>
            Converts the specified byte array into a byte array representing a string literal.
            </summary>
            <param name="bytes">The bytes of the string.</param>
            <param name="unicode">Indicates whether one or two bytes are one character.</param>
            <param name="prefix">Indicates whether to use Unicode prefix.</param>
            <param name="hex">Indicates whether to create a hexadecimal string literal.</param>
            <param name="securityHandler">Encrypts the bytes if specified.</param>
            <returns>The PDF bytes.</returns>
        </member>
        <member name="F:PdfSharp.Pdf.Internal.PdfEncoders.docencode_______">
            <summary>
            Converts WinAnsi to DocEncode characters. Incomplete, just maps € and some other characters.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.Format(System.String,System.Object[])">
            <summary>
            ...because I always forget CultureInfo.InvariantCulture and wonder why Arcobat
            cannot understand my German decimal separator...
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToString(System.Double)">
            <summary>
            Converts a float into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToString(PdfSharp.Drawing.XColor)">
            <summary>
            Converts an XColor into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Internal.PdfEncoders.ToString(PdfSharp.Drawing.XMatrix)">
            <summary>
            Converts an XMatrix into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Internal.PdfEncoders.RawEncoding">
            <summary>
            Gets the raw encoding.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Internal.PdfEncoders.RawUnicodeEncoding">
            <summary>
            Gets the raw Unicode encoding.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Internal.PdfEncoders.WinAnsiEncoding">
            <summary>
            Gets the Windows 1252 (ANSI) encoding.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Internal.PdfEncoders.DocEncoding">
            <summary>
            Gets the PDF DocEncoding encoding.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Internal.PdfEncoders.UnicodeEncoding">
            <summary>
            Gets the UNICODE little-endian encoding.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.RawEncoding">
            <summary>
            An encoder for raw strings. The raw encoding is simply the identity relation between
            charachters and bytes. PDFsharp internally works with raw encoded strings instead of
            byte arrays because strings are much more handy than byte arrays.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Internal.ThreadLocalStorage">
            <summary>
            Provides a thread-local cache for large objects.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Internal.ThreadLocalStorage.importedDocuments">
            <summary>
            Maps path to document handle.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.Chars">
            <summary>
            Character table by name.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfDocumentOpenMode">
            <summary>
            Determines how a PDF document is opened. 
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfDocumentOpenMode.Modify">
            <summary>
            The PDF stream is completely read into memory and can be modified. Pages can be deleted or
            inserted, but it is not possible to extract pages. This mode is useful for modifying an
            existing PDF document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfDocumentOpenMode.Import">
            <summary>
            The PDF stream is opened for importing pages from it. A document opened in this mode cannot
            be modified.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfDocumentOpenMode.ReadOnly">
            <summary>
            The PDF stream is completely read into memory, but cannot be modified. This mode preserves the
            original internal structure of the document and is useful for analysing existing PDF files.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfDocumentOpenMode.InformationOnly">
            <summary>
            The PDF stream is partially read for information purposes only. The only valid operation is to
            call the Info property at the imported document. This option is very fast and needs less memory
            and is e.g. useful for browsing information about a collection of PDF documents in a user interface.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfWriterLayout">
            <summary>
            Determines how the PDF output stream is formatted. Even all formats create valid PDF files,
            only Compact or Standard should be used for production purposes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterLayout.Compact">
            <summary>
            The PDF stream contains no unnecessary characters. This is default in release build.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterLayout.Standard">
            <summary>
            The PDF stream contains some superfluous line feeds, but is more readable.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterLayout.Indented">
            <summary>
            The PDF stream is indented to reflect the nesting levels of the objects. This is usedful
            for analysing PDF files, but increases the size of the file significantly.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterLayout.Verbose">
            <summary>
            The PDF stream is indented to reflect the nesting levels of the objects and contains additional
            information about the PDFsharp objects. Furthermore content streams are not deflated. This 
            is usedful for debugging purposes only and increases the size of the file significantly.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfWriterOptions">
            <summary>
            INTERNAL USE ONLY.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterOptions.Regular">
            <summary>
            If only this flag is specified the result is a regular valid PDF stream.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterOptions.OmitStream">
            <summary>
            Omit writing stream data. For debugging purposes only. 
            With this option the result is not valid PDF.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfWriterOptions.OmitInflation">
            <summary>
            Omit inflate filter. For debugging purposes only.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.Symbol">
            <summary>
            Terminal symbols recognized by lexer.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.Lexer">
            <summary>
            Lexical analyser for PDF files. Technically a PDF file is a stream of bytes. Some chunks
            of bytes represent strings in serveral encodings. The actual encoding depends on the
            context where the string is used. Therefore the bytes are 'raw encoded' into characters,
            i.e. a character or token read by the lexer has always character values in the range from
            0 to 255.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the Lexer class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.Initialize">
            <summary>
            Initializes fields after position has changed.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ScanNextToken">
            <summary>
            Reads the next token and returns its type. If the token starts with a digit, the parameter
            testReference specifies how to treat it. If it is flase, the lexer scans for a single integer.
            If it is true, the lexer checks if the digit is the prefix of a reference. If it is a reference,
            the token is set to the object ID followed by the generation number separated by a blank
            (the 'R' is omited from the token).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ReadStream(System.Int32)">
            <summary>
            Reads the raw content of a stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ReadRawString(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ScanComment">
            <summary>
            Scans a comment line.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ScanName">
            <summary>
            Scans a name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ScanNextChar">
            <summary>
            Move current position one character further in PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.ClearToken">
            <summary>
            Resets the current token to the empty string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.AppendAndScanNextChar">
            <summary>
            Appends current character to the token and reads next one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.MoveToNonWhiteSpace">
            <summary>
            If the current character is not a white space, the function immediately returns it.
            Otherwise the PDF cursor is moved forward to the first non-white space or EOF.
            White spaces are NUL, HT, LF, FF, CR, and SP.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.IsWhiteSpace(System.Char)">
            <summary>
            Indicates whether the specified character is a PDF white-space character.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Lexer.IsDelimiter(System.Char)">
            <summary>
            Indicates whether the specified character is a PDF delimiter character.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.Position">
            <summary>
            Gets or sets the position within the PDF stream.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.Symbol">
            <summary>
            Gets the current symbol.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.Token">
            <summary>
            Gets the current token.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.TokenToBoolean">
            <summary>
            Interprets current token as boolean literal.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.TokenToInteger">
            <summary>
            Interprets current token as integer literal.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.TokenToUInteger">
            <summary>
            Interprets current token as unsigned integer literal.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.Lexer.TokenToReal">
            <summary>
            Interpret current token as real or interger literal.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.Parser">
            <summary>
            Provides the functions to parse PDF documents.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.MoveToObject(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Sets PDF input stream position the the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadObject(PdfSharp.Pdf.PdfObject,PdfSharp.Pdf.PdfObjectID,System.Boolean)">
            <summary>
            Reads PDF object from input stream.
            </summary>
            <param name="pdfObject">Either the instance of a derived type or null. If it is null
            an appropriate object is created.</param>
            <param name="objectID">The address of the object.</param>
            <param name="includeReferences">If true, specifies that all indirect objects
            are included recursively.</param>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ParseObject(PdfSharp.Pdf.IO.Symbol)">
            <summary>
            Parses whatever comes until the specified stop symbol is reached.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadObjectID(PdfSharp.Pdf.PdfObject)">
            <summary>
            Reads the object ID and the generation and sets it into the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadSymbol(PdfSharp.Pdf.IO.Symbol)">
            <summary>
            Reads the next symbol that must be the specified one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadToken(System.String)">
            <summary>
            Reads the next token that must be the specified one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadName">
            <summary>
            Reads a name from the PDF data stream. The preceding slash is part of the result string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadInteger(System.Boolean)">
            <summary>
            Reads an integer value directly from the PDF data stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadObject(PdfSharp.Pdf.PdfDocument,PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Reads an object from the PDF input stream using the default parser.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadTrailer">
            <summary>
            Reads the iref table and the trailer dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ReadXRefTableAndTrailer(PdfSharp.Pdf.PdfReferenceTable)">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.Parser.ParseDateTime(System.String,System.DateTime)">
            <summary>
            Parses a PDF date string.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfPasswordProviderArgs">
            <summary>
            Encapsulates the arguments of the PdfPasswordProvider delegate.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfPasswordProviderArgs.Password">
            <summary>
            Sets the password to open the document with.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.PdfPasswordProviderArgs.Abort">
            <summary>
            When set to true the PdfReader.Open function returns null indicating that no PdfDocument was created.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfPasswordProvider">
            <summary>
            A delegated used by the PdfReader.Open function to retrieve a password if the document is protected.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfReader">
            <summary>
            Represents the functionality for reading PDF documents.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.TestPdfFile(System.String)">
            <summary>
            Determines whether the file specified by its path is a PDF file by inspecting the first eight
            bytes of the data. If the file header has the form «%PDF-x.y» the function returns the version
            number as integer (e.g. 14 for PDF 1.4). If the file header is invalid or inaccessible
            for any reason, 0 is returned. The function never throws an exception. 
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.TestPdfFile(System.IO.Stream)">
            <summary>
            Determines whether the specified stream is a PDF file by inspecting the first eight
            bytes of the data. If the data begins with «%PDF-x.y» the function returns the version
            number as integer (e.g. 14 for PDF 1.4). If the data is invalid or inaccessible
            for any reason, 0 is returned. The function never throws an exception. 
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.TestPdfFile(System.Byte[])">
            <summary>
            Determines whether the specified data is a PDF file by inspecting the first eight
            bytes of the data. If the data begins with «%PDF-x.y» the function returns the version
            number as integer (e.g. 14 for PDF 1.4). If the data is invalid or inaccessible
            for any reason, 0 is returned. The function never throws an exception. 
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.GetPdfFileVersion(System.Byte[])">
            <summary>
            Implements scanning the PDF file version.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode,PdfSharp.Pdf.IO.PdfPasswordProvider)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String,System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String,System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode,PdfSharp.Pdf.IO.PdfPasswordProvider)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.String,System.String)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.IO.Stream,PdfSharp.Pdf.IO.PdfDocumentOpenMode)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.IO.Stream,PdfSharp.Pdf.IO.PdfDocumentOpenMode,PdfSharp.Pdf.IO.PdfPasswordProvider)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.IO.Stream,System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.IO.Stream,System.String,PdfSharp.Pdf.IO.PdfDocumentOpenMode,PdfSharp.Pdf.IO.PdfPasswordProvider)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfReader.Open(System.IO.Stream)">
            <summary>
            Opens an existing PDF document.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfReaderException">
            <summary>
            Exception thrown by PdfReader.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.PdfWriter">
            <summary>
            Represents a writer for generation of PDF streams. 
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(System.Boolean)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfBoolean)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(System.Int32)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfInteger)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfUInteger)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(System.Double)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfReal)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfString)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.Write(PdfSharp.Pdf.PdfName)">
            <summary>
            Writes the specified value to the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.WriteBeginObject(PdfSharp.Pdf.PdfObject)">
            <summary>
            Begins a direct or indirect dictionary or array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.WriteEndObject">
            <summary>
            Ends a direct or indirect dictionary or array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.WriteStream(PdfSharp.Pdf.PdfDictionary,System.Boolean)">
            <summary>
            Writes the stream of the specified dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.IncreaseIndent">
            <summary>
            Increases indent level.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.PdfWriter.DecreaseIndent">
            <summary>
            Decreases indent level.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.PdfWriter.Indent">
            <summary>
            Gets or sets the indentation for a new indentation level.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.PdfWriter.IndentBlanks">
            <summary>
            Gets an indent string of current indent.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.PdfWriter.Stream">
            <summary>
            Gets the underlying stream.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.IO.ShiftStack">
            <summary>
            Represents the stack for the shift-reduce parser. It seems that it is only neede for
            reduction of indirect references.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.ShiftStack.GetItem(System.Int32)">
            <summary>
            Gets an item relative to the current stack pointer. The index must be a negative value (-1, -2, etc.).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.ShiftStack.GetInteger(System.Int32)">
            <summary>
            Gets an item relative to the current stack pointer. The index must be a negative value (-1, -2, etc.).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.ShiftStack.Shift(PdfSharp.Pdf.PdfItem)">
            <summary>
            Pushs the specified item onto the stack.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.ShiftStack.Reduce(System.Int32)">
            <summary>
            Replaces the last 'count' items with the specified item.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.IO.ShiftStack.Reduce(PdfSharp.Pdf.PdfItem,System.Int32)">
            <summary>
            Replaces the last 'count' items with the specified item.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.ShiftStack.sp">
            <summary>
            The stack pointer index. Points to the next free item.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.IO.ShiftStack.items">
            <summary>
            An array representing the stack.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.ShiftStack.SP">
            <summary>
            Gets the stack pointer index.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.IO.ShiftStack.Item(System.Int32)">
            <summary>
            Gets the value at the specifed index. Valid index is in range 0 up to sp-1.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Printing.PdfFilePrinter">
            <summary>
            A wrapper around Adobe Reader or Adobe Acrobat that helps to print PDF files.
            The property AdobeReaderPath must be set before the class can be used for printing.
            The class was testet with Adobe Reader 7.0.7.
            If this stuff does not work, _please_ don't write me mails!
            If you enhance this class, please let me know.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Pdf.Printing.PdfFilePrinter"/> class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Pdf.Printing.PdfFilePrinter"/> class.
            </summary>
            <param name="pdfFileName">Name of the PDF file.</param>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Pdf.Printing.PdfFilePrinter"/> class.
            </summary>
            <param name="pdfFileName">Name of the PDF file.</param>
            <param name="printerName">Name of the printer.</param>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.Print">
            <summary>
            Prints the PDF file.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.Print(System.Int32)">
            <summary>
            Prints the PDF file.
            </summary>
            <param name="milliseconds">The number of milliseconds to wait for completing the print job.</param>
        </member>
        <member name="M:PdfSharp.Pdf.Printing.PdfFilePrinter.DoSomeVeryDirtyHacksToMakeItWork">
            <summary>
            For reasons only Adobe knows the Reader seams to open and shows the document instead of printing it
            when it was not already running.
            If you use PDFsharp and have any suggestions to circumvent this function, please let us know.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Printing.PdfFilePrinter.PdfFileName">
            <summary>
            Gets or sets the name of the PDF file to print.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Printing.PdfFilePrinter.PrinterName">
            <summary>
            Gets or sets the name of the printer. A typical name looks like '\\myserver\HP LaserJet PCL5'.
            </summary>
            <value>The name of the printer.</value>
        </member>
        <member name="P:PdfSharp.Pdf.Printing.PdfFilePrinter.AdobeReaderPath">
            <summary>
            Gets or sets the Adobe Reader or Adobe Acrobat path.
            A typical name looks like 'C:\Program Files\Adobe\Adobe Reader 7.0\AcroRd32.exe'.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Printing.PdfFilePrinter.DefaultPrinterName">
            <summary>
            Gets or sets the name of the default printer. A typical name looks like '\\myserver\HP LaserJet PCL5'.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfDocumentSecurityLevel">
            <summary>
            Specifies the security level of the PDF document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfDocumentSecurityLevel.None">
            <summary>
            Document is not protected.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfDocumentSecurityLevel.Encrypted40Bit">
            <summary>
            Document is protected with 40-bit security. This option is for compatibility with 
            Acrobat 3 and 4 only. Use Encrypted128Bit whenever possible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfDocumentSecurityLevel.Encrypted128Bit">
            <summary>
            Document is protected with 128-bit security.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfUserAccessPermission">
            <summary>
            Specifies which operations are permitted when the document is opened with user access.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfUserAccessPermission.PermitAll">
            <summary>
            Permits everything. This is the default value.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfSecurityHandler">
            <summary>
            Represents the base of all security handlers.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.Filter">
            <summary>
            (Required) The name of the preferred security handler for this document. Typically,
            it is the name of the security handler that was used to encrypt the document. If 
            SubFilter is not present, only this security handler should be used when opening 
            the document. If it is present, consumer applications can use any security handler
            that implements the format specified by SubFilter.
            Standard is the name of the built-in password-based security handler. Names for other
            security handlers can be registered by using the procedure described in Appendix E.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.SubFilter">
            <summary>
            (Optional; PDF 1.3) A name that completely specifies the format and interpretation of
            the contents of the encryption dictionary. It is needed to allow security handlers other
            than the one specified by Filter to decrypt the document. If this entry is absent, other
            security handlers should not be allowed to decrypt the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.V">
            <summary>
            (Optional but strongly recommended) A code specifying the algorithm to be used in encrypting
            and decrypting the document:
            0 An algorithm that is undocumented and no longer supported, and whose use is strongly discouraged.
            1 Algorithm 3.1, with an encryption key length of 40 bits.
            2 (PDF 1.4) Algorithm 3.1, but permitting encryption key lengths greater than 40 bits.
            3 (PDF 1.4) An unpublished algorithm that permits encryption key lengths ranging from 40 to 128 bits.
            4 (PDF 1.5) The security handler defines the use of encryption and decryption in the document, using
                        the rules specified by the CF, StmF, and StrF entries.
            The default value if this entry is omitted is 0, but a value of 1 or greater is strongly recommended.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.Length">
            <summary>
            (Optional; PDF 1.4; only if V is 2 or 3) The length of the encryption key, in bits.
            The value must be a multiple of 8, in the range 40 to 128. Default value: 40.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.CF">
            <summary>
            (Optional; meaningful only when the value of V is 4; PDF 1.5)
            A dictionary whose keys are crypt filter names and whose values are the corresponding
            crypt filter dictionaries. Every crypt filter used in the document must have an entry
            in this dictionary, except for the standard crypt filter names.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.StmF">
            <summary>
            (Optional; meaningful only when the value of V is 4; PDF 1.5)
            The name of the crypt filter that is used by default when decrypting streams.
            The name must be a key in the CF dictionary or a standard crypt filter name. All streams
            in the document, except for cross-reference streams or streams that have a Crypt entry in
            their Filter array, are decrypted by the security handler, using this crypt filter.
            Default value: Identity.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.StrF">
            <summary>
            (Optional; meaningful only when the value of V is 4; PDF 1.)
            The name of the crypt filter that is used when decrypting all strings in the document.
            The name must be a key in the CF dictionary or a standard crypt filter name.
            Default value: Identity.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfSecurityHandler.Keys.EFF">
            <summary>
            (Optional; meaningful only when the value of V is 4; PDF 1.6)
            The name of the crypt filter that should be used by default when encrypting embedded
            file streams; it must correspond to a key in the CF dictionary or a standard crypt
            filter name. This entry is provided by the security handler. Applications should respect
            this value when encrypting embedded files, except for embedded file streams that have
            their own crypt filter specifier. If this entry is not present, and the embedded file
            stream does not contain a crypt filter specifier, the stream should be encrypted using
            the default stream crypt filter specified by StmF.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfSecuritySettings">
            <summary>
            Encapsultes access to the security settings of a PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfSecuritySettings.CanSave(System.String@)">
            <summary>
            Determines whether the document can be saved.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfSecuritySettings.HasOwnerPermissions">
            <summary>
            Indicates whether the granted access to the document is 'owner permission'. Retruns true if the document 
            is unprotected or was opened with the owner password. Returns false if the document was opened with the
            user password.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfSecuritySettings.DocumentSecurityLevel">
            <summary>
            Gets or sets the document security level. If you set the security level to anything but PdfDocumentSecurityLevel.None
            you must also set a user and/or an owner password. Otherwise saving the document will fail.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfSecuritySettings.UserPassword">
            <summary>
            Sets the user password of the document. Setting a password automatically sets the
            PdfDocumentSecurityLevel to PdfDocumentSecurityLevel.Encrypted128Bit if its current
            value is PdfDocumentSecurityLevel.None.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfSecuritySettings.OwnerPassword">
            <summary>
            Sets the owner password of the document. Setting a password automatically sets the
            PdfDocumentSecurityLevel to PdfDocumentSecurityLevel.Encrypted128Bit if its current
            value is PdfDocumentSecurityLevel.None.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfSecuritySettings.SecurityHandler">
            <summary>
            PdfStandardSecurityHandler is the only implemented handler.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfStandardSecurityHandler">
            <summary>
            Represents the standard PDF security handler.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptDocument">
            <summary>
            Encrypts the whole document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptObject(PdfSharp.Pdf.PdfObject)">
            <summary>
            Encrypts an indirect object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptDictionary(PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Encrypts a dictionary.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptArray(PdfSharp.Pdf.PdfArray)">
            <summary>
            Encrypts an array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptString(PdfSharp.Pdf.PdfString)">
            <summary>
            Encrypts a string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptBytes(System.Byte[])">
            <summary>
            Encrypts an array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.ValidatePassword(System.String)">
            <summary>
            Checks the password.
            </summary>
            <param name="inputPassword">Password or null if no password is provided.</param>
            <returns>
            0: inputPassword is neither user nor owner password.
            1: inputPassword is user password.
            2: inputPassword is owner password.
            </returns>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.PadPassword(System.String)">
            <summary>
            Pads a password to a 32 byte array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.InitWidhUserPassword(System.Byte[],System.String,System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Generates the user key based on the padded user password.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.InitWidhOwnerPassword(System.Byte[],System.String,System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Generates the user key based on the padded owner password.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.ComputeOwnerKey(System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Computes the padded user password from the padded owner password.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.InitEncryptionKey(System.Byte[],System.Byte[],System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Computes the encryption key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.SetupUserKey(System.Byte[])">
            <summary>
            Computes the user key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.PrepareKey">
            <summary>
            Prepare the encryption key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.PrepareRC4Key(System.Byte[])">
            <summary>
            Prepare the encryption key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.PrepareRC4Key(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Prepare the encryption key.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptRC4(System.Byte[])">
            <summary>
            Encrypts the data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptRC4(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypts the data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptRC4(System.Byte[],System.Byte[])">
            <summary>
            Encrypts the data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EncryptRC4(System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Encrypts the data.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.EqualsKey(System.Byte[],System.Int32)">
            <summary>
            Checks whether the calculated key correct.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.SetHashKey(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Set the hash key for the specified object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.PrepareEncryption">
            <summary>
            Prepares the security handler for encrypting the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.encryptionKey">
            <summary>
            The global encryption key.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.md5">
            <summary>
            The message digest algorithm MD5.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.state">
            <summary>
            Bytes used for RC4 encryption.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.ownerKey">
            <summary>
            The encryption key for the owner.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.userKey">
            <summary>
            The encryption key for the user.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.key">
            <summary>
            The encryption key for a particular object/generation.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.keySize">
            <summary>
            The encryption key length for a particular object/generation.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.UserPassword">
            <summary>
            Sets the user password of the document. Setting a password automatically sets the
            PdfDocumentSecurityLevel to PdfDocumentSecurityLevel.Encrypted128Bit if its current
            value is PdfDocumentSecurityLevel.None.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.OwnerPassword">
            <summary>
            Sets the owner password of the document. Setting a password automatically sets the
            PdfDocumentSecurityLevel to PdfDocumentSecurityLevel.Encrypted128Bit if its current
            value is PdfDocumentSecurityLevel.None.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Permission">
            <summary>
            Gets or sets the user access permission represented as an integer in the P key.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.R">
            <summary>
            (Required) A number specifying which revision of the standard security handler
            should be used to interpret this dictionary:
            • 2 if the document is encrypted with a V value less than 2 and does not have any of
              the access permissions set (by means of the P entry, below) that are designated 
              "Revision 3 or greater".
            • 3 if the document is encrypted with a V value of 2 or 3, or has any "Revision 3 or 
              greater" access permissions set.
            • 4 if the document is encrypted with a V value of 4
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.O">
            <summary>
            (Required) A 32-byte string, based on both the owner and user passwords, that is
            used in computing the encryption key and in determining whether a valid owner
            password was entered.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.U">
            <summary>
            (Required) A 32-byte string, based on the user password, that is used in determining
            whether to prompt the user for a password and, if so, whether a valid user or owner 
            password was entered.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.P">
            <summary>
            (Required) A set of flags specifying which operations are permitted when the document
            is opened with user access.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.EncryptMetadata">
            <summary>
            (Optional; meaningful only when the value of V is 4; PDF 1.5) Indicates whether
            the document-level metadata stream is to be encrypted. Applications should respect this value.
            Default value: true.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.Security.PdfStandardSecurityHandler.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfCustomValueCompressionMode">
            <summary>
            This class is undocumented and may change or drop in future releases.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfCustomValue">
            <summary>
            This class is intended for empira interanl use only and may change or drop in future releases.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfCustomValue.#ctor">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfCustomValue.#ctor(System.Byte[])">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfCustomValue.CompressionMode">
            <summary>
            This property is intended for empira interanl use only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfCustomValue.Value">
            <summary>
            This property is intended for empira interanl use only.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfCustomValues">
            <summary>
            This class is intended for empira interanl use only and may change or drop in future releases.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfCustomValues.Contains(System.String)">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfCustomValues.ClearAllCustomValues(PdfSharp.Pdf.PdfDocument)">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfCustomValues.CompressionMode">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfCustomValues.Item(System.String)">
            <summary>
            This function is intended for empira interanl use only.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfUIntegerObject">
            <summary>
            Represents an indirect integer value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfNumberObject">
            <summary>
            Base class for indirect number values (not yet used, maybe superfluous).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfUIntegerObject.ToString">
            <summary>
            Returns the integer as string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfUIntegerObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the integer literal.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfUInteger">
            <summary>
            Represents a direct unsigned integer value.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfNumber">
            <summary>
            Base class for direct number values (not yet used, maybe superfluous).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfUInteger.ToString">
            <summary>
            Returns the unsigned integer as string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfUInteger.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the integer as string.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.KeyType">
            <summary>
            Specifes the type of a key's value in a dictionary.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.KeyInfoAttribute">
            <summary>
            Summary description for KeyInfo.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfFontEmbedding">
            <summary>
            Specifies the embedding options of an XFont when converted in PDF.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEmbedding.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEmbedding.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEmbedding.Always">
            <summary>
            
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEmbedding.Automatic">
            <summary>
            
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfFontEncoding">
            <summary>
            Specifies the encoding schema used for an XFont when converted in PDF.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEncoding.WinAnsi">
            <summary>
            Windows ANSI encoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfFontEncoding.Unicode">
            <summary>
            Unicode encoding.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPageLayout">
            <summary>
            Specifies the page layout to be used by a viewer when the document is opened.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.SinglePage">
            <summary>
            Display one page at a time.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with oddnumbered pages on the left.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with oddnumbered pages on the right.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.TwoPageLeft">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageLayout.TwoPageRight">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPageMode">
            <summary>
            Specifies how the document should be displayed by a viewer when opened.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, windowcontrols, or any other window visible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.UseOC">
            <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPageMode.UseAttachments">
            <summary>
            (PDF 1.6) Attachments panel visible.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.KeyDescriptor">
            <summary>
            Hold information about the value of a key in a dictionary. This information is used to create
            interpred this value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.KeyDescriptor.#ctor(PdfSharp.Pdf.KeyInfoAttribute)">
            <summary>
            Initializes a new instance of KeyDescriptor from the specified attribute during a KeysMeta
            initializes itself using reflection.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.KeyDescriptor.GetValueType">
            <summary>
            Returns the type of the object to be created as value for the described key.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.KeyDescriptor.Version">
            <summary>
            Gets or sets the PDF version starting with the availability of the described key.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.DictionaryMeta">
            <summary>
            Contains meta information about all keys of a PDF dictionary.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfBoolean">
            <summary>
            Represents a direct boolean value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfBoolean.ToString">
            <summary>
            Returns 'false' or 'true'.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfBoolean.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes 'true' or 'false'.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfBooleanObject">
            <summary>
            Represents an indirect boolean value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfBooleanObject.ToString">
            <summary>
            Returns «false» or «true».
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfBooleanObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the keyword «false» or «true».
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDate">
            <summary>
            Represents a direct date value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDate.ToString">
            <summary>
            Returns the value in the PDF date format.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDate.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the value in the PDF date format.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDocument">
            <summary>
            Represents a PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.#ctor">
            <summary>
            Creates a new PDF document in memory.
            To open an existing PDF file, use the PdfReader class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.#ctor(System.String)">
            <summary>
            Creates a new PDF document with the specified file name.
            To open an existing PDF file, use the PdfReader class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.#ctor(System.IO.Stream)">
            <summary>
            Creates a new PDF document using the specified stream.
            To open an existing PDF file, use the PdfReader class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.Dispose">
            <summary>
            Disposes all references to this document stored in other documents. This function should be called
            for documents you finished importing pages from. Calling Dispose is technically not necessary but
            useful for earlier reclaiming memory of documents you do not need anymore.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocument.Name">
            <summary>
            Gets or sets a value used to distinguish PdfDocument objects.
            The name is not used by PDFsharp.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.NewName">
            <summary>
            Get a new default name for a new document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.Save(System.String)">
            <summary>
            Saves the document to the specified path. If a file already exists, it will be overwritten.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the document to the specified stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream and closes the stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.DoSave(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Implements saving a PDF file.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.PrepareForSave">
            <summary>
            Dispatches PrepareForSave to the objects that need it.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.CanSave(System.String@)">
            <summary>
            Determines whether the document can be saved.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.AddPage">
            <summary>
            Creates a new page and adds it to this document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.AddPage(PdfSharp.Pdf.PdfPage)">
            <summary>
            Adds the specified page to this document. If the page is from an external document,
            it is imported to this document. In this case the returned page is not the same
            object as the specified one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.InsertPage(System.Int32)">
            <summary>
            Creates a new page and inserts it in this document at the specified position.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.InsertPage(System.Int32,PdfSharp.Pdf.PdfPage)">
            <summary>
            Inserts the specified page in this document. If the page is from an external document,
            it is imported to this document. In this case the returned page is not the same
            object as the specified one.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfDocument.OnExternalDocumentFinalized(PdfSharp.Pdf.PdfDocument.DocumentHandle)">
            <summary>
            Occurs when the specified document is not used anymore for importing content.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.EarlyWrite">
            <summary>
            NYI Indicates whether large objects are written immediately to the output stream to relieve
            memory consumption.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Version">
            <summary>
            Gets or sets the PDF version number.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.PageCount">
            <summary>
            Gets the number of pages in the document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.FileSize">
            <summary>
            Gets the file size of the document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.FullPath">
            <summary>
            Gets the full qualified file name if the document was read form a file, or an empty string otherwise.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Guid">
            <summary>
            Gets a Guid that uniquely identifies this instance of PdfDocument.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.IsImported">
            <summary>
            Returns a value indicating whether the document was new created or opend from an exsisting document.
            Returns true if the document was opened with the PdfReader.Open function, false otherwise.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.IsReadOnly">
            <summary>
            Returns a value indicating whether the document is read only or can be modified.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Info">
            <summary>
            Gets information about the document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Pages">
            <summary>
            Get the pages dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.PageLayout">
            <summary>
            Gets or sets a value specifying the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.PageMode">
            <summary>
            Gets or sets a value specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.ViewerPreferences">
            <summary>
            Gets the viewer preverences of this document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Outlines">
            <summary>
            Gets the root of the outline (or bookmark) tree.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.AcroForm">
            <summary>
            Get the AcroFrom dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.SecuritySettings">
            <summary>
            Gets the security settings of this document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.FontTable">
            <summary>
            Gets the document font table that holds all fonts used in the current document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.ImageTable">
            <summary>
            Gets the document image table that holds all images used in the current document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.FormTable">
            <summary>
            Gets the document form table that holds all form external objects used in the current document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.ExtGStateTable">
            <summary>
            Gets the document ExtGState table that holds all form state objects used in the current document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Catalog">
            <summary>
            Gets the PdfCatalog of the current document.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Internals">
            <summary>
            Gets the PdfInternals object of this document, that grants access to some internal structures
            which are not part of the public interface of PdfDocument.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.SecurityHandler">
            <summary>
            Gets the security handler.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocument.Tls">
            <summary>
            Gets the ThreadLocalStorage object. It is used for caching objects that should created
            only once.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDocumentInformation">
            <summary>
            Represents the PDF document information dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.Creator">
            <summary>
            Gets or sets the creator application.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.Producer">
            <summary>
            Gets the producer application.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDocumentInformation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Title">
            <summary>
            (Optional; PDF 1.1) The document’s title.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Author">
            <summary>
            (Optional) The name of the person who created the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Subject">
            <summary>
            (Optional; PDF 1.1) The subject of the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Keywords">
            <summary>
            (Optional; PDF 1.1) Keywords associated with the document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Creator">
            <summary>
            (Optional) If the document was converted to PDF from another format,
            the name of the application (for example, empira MigraDoc®) that created the
            original document from which it was converted.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Producer">
            <summary>
            (Optional) If the document was converted to PDF from another format,
            the name of the application (for example, this library) that converted it to PDF.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.CreationDate">
            <summary>
            (Optional) The date and time the document was created, in human-readable form.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.ModDate">
            <summary>
            (Required if PieceInfo is present in the document catalog; otherwise optional; PDF 1.1)
            The date and time the document was most recently modified, in human-readable form.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfDocumentInformation.Keys.Trapped">
            <summary>
            (Optional; PDF 1.3) A name object indicating whether the document has been modified 
            to include trapping information.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentInformation.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfDocumentOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfDocumentOptions.NoCompression">
            <summary>
            Gets or sets a value indication that all objects are not compressed.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfInteger">
            <summary>
            Represents a direct integer value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfInteger.ToString">
            <summary>
            Returns the integer as string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfInteger.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the integer as string.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfIntegerObject">
            <summary>
            Represents an indirect integer value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfIntegerObject.ToString">
            <summary>
            Returns the integer as string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfIntegerObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the integer literal.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfName">
            <summary>
            Represents a PDF name value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfName.ToString">
            <summary>
            Returns the name. The string always begins with a slash.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfName.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the name including the leading slash.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfName.PdfXNameComparer">
            <summary>
            Implements a comparer that compares PdfName objects.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfNameObject">
            <summary>
            Represents an indirect name value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object. Acrobat sometime uses indirect
            names to save space, because an indirect reference to a name may be shorter than a long name.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfNameObject.ToString">
            <summary>
            Returns the name. The string always begins with a slash.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfNameObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the name including the leading slash.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfNull">
            <summary>
            Represents a indirect reference that is not in the cross reference table.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfNull.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:PdfSharp.Pdf.PdfNullObject">
            <summary>
            Represents an indirect null value. This type is not used by PDFsharp, but at least
            one tool from Adobe creates PDF files with a null object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfNullObject.ToString">
            <summary>
            Returns the string "null".
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfNullObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the keyword «null».
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfObjectID">
            <summary>
            Represents a PDF object identifier.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfObjectID.Empty">
            <summary>
            Represents the empty object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObjectID.ObjectNumber">
            <summary>
            Gets or sets the object number.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObjectID.GenerationNumber">
            <summary>
            Gets or sets the generation number.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfObjectID.IsEmpty">
            <summary>
            Indicates whether this object is an empty object identifier.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfOutline">
            <summary>
            Represents an outline item in the outlines tree. An outline is also knows as a bookmark.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfOutline.#ctor(System.String,PdfSharp.Pdf.PdfPage,System.Boolean,PdfSharp.Pdf.PdfOutlineStyle,PdfSharp.Drawing.XColor)">
            <summary>
            
            </summary>
            <param name="title">The outline text.</param>
            <param name="destinationPage">The destination page.</param>
            <param name="opened">Specifies whether the node is displayed expanded (opened) or collapsed.</param>
            <param name="style">The font style used to draw the outline text.</param>
            <param name="textColor">The color used to draw the outline text.</param>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.openCount">
            <summary>
            The total number of open descendants at all lower levels.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfOutline.PrepareForSave">
            <summary>
            Creates key/values pairs according to the object structure.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfOutline.Opened">
            <summary>
            Gets or sets whether the the outline item is opened (or expanded).
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfOutline.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfOutline.PdfOutlineCollection">
            <summary>
            
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.PdfOutlineCollection.parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfOutline.PdfOutlineCollection.HasOutline">
            <summary>
            Indicates whether the outline has at least one entry.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfOutline.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Outlines for an outline dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Title">
            <summary>
            (Required) The text to be displayed on the screen for this item.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Parent">
            <summary>
            (Required; must be an indirect reference) The parent of this item in the outline hierarchy.
            The parent of a top-level item is the outline dictionary itself.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Prev">
            <summary>
            (Required for all but the first item at each level; must be an indirect reference)
            The previous item at this outline level.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Next">
            <summary>
            (Required for all but the last item at each level; must be an indirect reference)
            The next item at this outline level.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.First">
            <summary>
            (Required if the item has any descendants; must be an indirect reference)
             The first of this item’s immediate children in the outline hierarchy.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Last">
            <summary>
            (Required if the item has any descendants; must be an indirect reference)
            The last of this item’s immediate children in the outline hierarchy.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Count">
            <summary>
            (Required if the item has any descendants) If the item is open, the total number of its 
            open descendants at all lower levels of the outline hierarchy. If the item is closed, a 
            negative integer whose absolute value specifies how many descendants would appear if the 
            item were reopened.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.Dest">
            <summary>
            (Optional; not permitted if an A entry is present) The destination to be displayed when this 
            item is activated.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.A">
            <summary>
            (Optional; not permitted if an A entry is present) The destination to be displayed when 
            this item is activated.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.SE">
            <summary>
            (Optional; PDF 1.3; must be an indirect reference) The structure element to which the item 
            refers.
            Note: The ability to associate an outline item with a structure element (such as the beginning 
            of a chapter) is a PDF 1.3 feature. For backward compatibility with earlier PDF versions, such
            an item should also specify a destination (Dest) corresponding to an area of a page where the
            contents of the designated structure element are displayed.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.C">
            <summary>
            (Optional; PDF 1.4) An array of three numbers in the range 0.0 to 1.0, representing the 
            components in the DeviceRGB color space of the color to be used for the outline entry’s text.
            Default value: [0.0 0.0 0.0].
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfOutline.Keys.F">
            <summary>
            (Optional; PDF 1.4) A set of flags specifying style characteristics for displaying the outline
            item’s text. Default value: 0.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfOutline.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPage">
            <summary>
            Represents a page in a PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.#ctor">
            <summary>
            Initializes a new page. The page must be added to a document before it can be used.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.Close">
            <summary>
            Closes the page. A closes page cannot be modified anymore and it is not possible to
            get an XGraphics object for a closed page. Closing a page is not required, but saves
            resources if the document has many pages. 
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.RenderContent">
            <summary>
            The content stream currently used by an XGraphics object for rendering.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.GetFontName(PdfSharp.Drawing.XFont,PdfSharp.Pdf.Advanced.PdfFont@)">
            <summary>
            Gets the resource name of the specified font within this page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.GetImageName(PdfSharp.Drawing.XImage)">
            <summary>
            Gets the resource name of the specified image within this page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.GetFormName(PdfSharp.Drawing.XForm)">
            <summary>
            Gets the resource name of the specified form within this page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.InheritValues(PdfSharp.Pdf.PdfDictionary,PdfSharp.Pdf.PdfPage.InheritedValues)">
            <summary>
            Inherit values from parent node.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPage.InheritValues(PdfSharp.Pdf.PdfDictionary,PdfSharp.Pdf.PdfPage.InheritedValues@)">
            <summary>
            Add all inheritables values from the specified page to the specified values structure.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Document">
            <summary>
            Gets or sets the PdfDocument this page belongs to.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Orientation">
            <summary>
            Gets or sets the orientation of the page. The default value PageOrientation.Portrait.
            If an imported page has a /Rotate value that satisfys the formula 90 + n * 180 the 
            orientation is set to PageOrientation.Landscape.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Size">
            <summary>
            Gets or sets one of the predefined standard sizes like.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.MediaBox">
            <summary>
            Gets or sets the media box directly. XGrahics is not prepared to work with a media box
            with an origin other than (0,0).
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Height">
            <summary>
            Gets or sets the height of the page. If orientation is Landscape, this function applies to
            the width.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Width">
            <summary>
            Gets or sets the width of the page. If orientation is Landscape, this function applies to
            the height.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Rotate">
            <summary>
            Gets or sets the /Rotate entry of the PDF page. The value is the number of degrees by which the page 
            should be rotated clockwise when displayed or printed. The value must be a multiple of 90.
            PDFsharp does not set this value, but for imported pages this value can be set and must be taken
            into account when adding graphic to such a page.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Contents">
            <summary>
            Gets the array of content streams of the page.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPage.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPage.InheritablePageKeys">
            <summary>
            Predefined keys common to PdfPage and PdfPages.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.InheritablePageKeys.Resources">
            <summary>
            (Required; inheritable) A dictionary containing any resources required by the page. 
            If the page requires no resources, the value of this entry should be an empty dictionary.
            Omitting the entry entirely indicates that the resources are to be inherited from an 
            ancestor node in the page tree.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.InheritablePageKeys.MediaBox">
            <summary>
            (Required; inheritable) A rectangle, expressed in default user space units, defining the 
            boundaries of the physical medium on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.InheritablePageKeys.CropBox">
            <summary>
            (Optional; inheritable) A rectangle, expressed in default user space units, defining the 
            visible region of default user space. When the page is displayed or printed, its contents 
            are to be clipped (cropped) to this rectangle and then imposed on the output medium in some
            implementationdefined manner. Default value: the value of MediaBox.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.InheritablePageKeys.Rotate">
            <summary>
            (Optional; inheritable) The number of degrees by which the page should be rotated clockwise 
            when displayed or printed. The value must be a multiple of 90. Default value: 0.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Page for a page object.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Parent">
            <summary>
            (Required; must be an indirect reference)
            The page tree node that is the immediate parent of this page object.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.LastModified">
            <summary>
            (Required if PieceInfo is present; optional otherwise; PDF 1.3) The date and time
            when the page’s contents were most recently modified. If a page-piece dictionary
            (PieceInfo) is present, the modification date is used to ascertain which of the 
            application data dictionaries that it contains correspond to the current content
            of the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.BleedBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the 
            region to which the contents of the page should be clipped when output in a production
            environment. Default value: the value of CropBox.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.TrimBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the
            intended dimensions of the finished page after trimming. Default value: the value of 
            CropBox.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.ArtBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the
            extent of the page’s meaningful content (including potential white space) as intended
            by the page’s creator. Default value: the value of CropBox.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.BoxColorInfo">
            <summary>
            (Optional; PDF 1.4) A box color information dictionary specifying the colors and other 
            visual characteristics to be used in displaying guidelines on the screen for the various
            page boundaries. If this entry is absent, the application should use its own current 
            default settings.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Contents">
            <summary>
            (Optional) A content stream describing the contents of this page. If this entry is absent, 
            the page is empty. The value may be either a single stream or an array of streams. If the 
            value is an array, the effect is as if all of the streams in the array were concatenated,
            in order, to form a single stream. This allows PDF producers to create image objects and
            other resources as they occur, even though they interrupt the content stream. The division
            between streams may occur only at the boundaries between lexical tokens but is unrelated
            to the page’s logical content or organization. Applications that consume or produce PDF 
            files are not required to preserve the existing structure of the Contents array.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Group">
            <summary>
            (Optional; PDF 1.4) A group attributes dictionary specifying the attributes of the page’s 
            page group for use in the transparent imaging model.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Thumb">
            <summary>
            (Optional) A stream object defining the page’s thumbnail image.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.B">
            <summary>
            (Optional; PDF 1.1; recommended if the page contains article beads) An array of indirect
            references to article beads appearing on the page. The beads are listed in the array in 
            natural reading order.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Dur">
            <summary>
            (Optional; PDF 1.1) The page’s display duration (also called its advance timing): the 
            maximum length of time, in seconds, that the page is displayed during presentations before
            the viewer application automatically advances to the next page. By default, the viewer does 
            not advance automatically.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Trans">
            <summary>
            (Optional; PDF 1.1) A transition dictionary describing the transition effect to be used 
            when displaying the page during presentations.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Annots">
            <summary>
            (Optional) An array of annotation dictionaries representing annotations associated with 
            the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.AA">
            <summary>
            (Optional; PDF 1.2) An additional-actions dictionary defining actions to be performed 
            when the page is opened or closed.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4) A metadata stream containing metadata for the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.PieceInfo">
            <summary>
            (Optional; PDF 1.3) A page-piece dictionary associated with the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.StructParents">
            <summary>
            (Required if the page contains structural content items; PDF 1.3)
            The integer key of the page’s entry in the structural parent tree.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.ID">
            <summary>
            (Optional; PDF 1.3; indirect reference preferred) The digital identifier of
            the page’s parent Web Capture content set.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.PZ">
            <summary>
            (Optional; PDF 1.3) The page’s preferred zoom (magnification) factor: the factor 
            by which it should be scaled to achieve the natural display magnification.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.SeparationInfo">
            <summary>
            (Optional; PDF 1.3) A separation dictionary containing information needed
            to generate color separations for the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.Tabs">
            <summary>
            (Optional; PDF 1.5) A name specifying the tab order to be used for annotations
            on the page. The possible values are R (row order), C (column order),
            and S (structure order).
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.TemplateInstantiated">
            <summary>
            (Required if this page was created from a named page object; PDF 1.5)
            The name of the originating page object.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.PresSteps">
            <summary>
            (Optional; PDF 1.5) A navigation node dictionary representing the first node
            on the page.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.UserUnit">
            <summary>
            (Optional; PDF 1.6) A positive number giving the size of default user space units,
            in multiples of 1/72 inch. The range of supported values is implementation-dependent.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPage.Keys.VP">
            <summary>
            (Optional; PDF 1.6) An array of viewport dictionaries specifying rectangular regions 
            of the page.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPage.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPage.InheritedValues">
            <summary>
            Values inherited from a parent in the parent chain of a page tree.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPages">
            <summary>
            Represents the pages of the document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.Add">
            <summary>
            Creates a new PdfPage, adds it to this document, and retruns it.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.Add(PdfSharp.Pdf.PdfPage)">
            <summary>
            Adds the specified PdfPage to this document and retruns a may be new PdfPage object.
            The value returned is a new object if the added page comes from a foreign document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.Insert(System.Int32)">
            <summary>
            Creates a new PdfPage, inserts it at the specified position to this document, and retruns it.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.Insert(System.Int32,PdfSharp.Pdf.PdfPage)">
            <summary>
            Inserts the specified PdfPage at the specified position to this document and retruns a may be new PdfPage object.
            The value returned is a new object if the inserted page comes from a foreign document.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.MovePage(System.Int32,System.Int32)">
            <summary>
            Moves a page within the page sequence.
            </summary>
            <param name="oldIndex">The page index before this operation.</param>
            <param name="newIndex">The page index after this operation.</param>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.ImportExternalPage(PdfSharp.Pdf.PdfPage)">
            <summary>
            Imports an external page. The elements of the imported page are cloned and added to this document.
            Important: In contrast to PdfFormXObject adding an external page always make a deep copy
            of their transitive closure. Any reuse of already imported objects is not intended because
            any modification of an imported page must not change another page.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.CloneElement(PdfSharp.Pdf.PdfPage,PdfSharp.Pdf.PdfPage,System.String,System.Boolean)">
            <summary>
            Helper function for ImportExternalPage.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.FlattenPageTree">
            <summary>
            Replaces the page tree by a flat array of indirect references to the the pages objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.GetKids(PdfSharp.Pdf.Advanced.PdfReference,PdfSharp.Pdf.PdfPage.InheritedValues,PdfSharp.Pdf.PdfDictionary)">
            <summary>
            Recursively converts the page tree into a flat array.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfPages.PrepareForSave">
            <summary>
            TODO: Create the page tree.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPages.Count">
            <summary>
            Gets the number of pages.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPages.Item(System.Int32)">
            <summary>
            Gets the page with the specified index.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPages.PagesArray">
            <summary>
            Gets a PdfArray containing all pages of this document. The array must not be modified.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPages.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfPages.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPages.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; 
            must be Pages for a page tree node.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPages.Keys.Parent">
            <summary>
            (Required except in root node; must be an indirect reference)
            The page tree node that is the immediate parent of this one.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPages.Keys.Kids">
            <summary>
            (Required) An array of indirect references to the immediate children of this node.
            The children may be page objects or other page tree nodes.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfPages.Keys.Count">
            <summary>
            (Required) The number of leaf nodes (page objects) that are descendants of this node 
            within the page tree.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfPages.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfLiteral">
            <summary>
            Represents text that is written 'as it is' into the PDF stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfLiteral.#ctor(System.String)">
            <summary>
            Initializes a new instance with the specified string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfLiteral.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance with the culture invariant formatted specified arguments.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfReal">
            <summary>
            Represents a direct real value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReal.ToString">
            <summary>
            Returns the real number as string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReal.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the real value with up to three digits.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfRealObject">
            <summary>
            Represents an indirect real value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRealObject.ToString">
            <summary>
            Returns the real as a culture invariant string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRealObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the real literal.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfRectangle">
            <summary>
            Represents a PDF rectangle value, that is internally an array with 4 real values.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor">
            <summary>
            Initializes a new instance of the PdfRectangle class.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the PdfRectangle class with two points specifying
            two diagonally opposite corners. Notice that in contrast to GDI+ convention the 
            3rd and the 4th parameter specify a point and not a width. This is so much confusing
            that this function is for internal use only.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the PdfRectangle class with two points specifying
            two diagonally opposite corners.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XPoint)">
            <summary>
            Initializes a new instance of the PdfRectangle class with two points specifying
            two diagonally opposite corners.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified location and size.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(PdfSharp.Drawing.XPoint,PdfSharp.Drawing.XSize)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified location and size.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(PdfSharp.Drawing.XRect)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified XRect.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.#ctor(PdfSharp.Pdf.PdfItem)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified PdfArray.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a PdfRectangle and has equal coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.op_Equality(PdfSharp.Pdf.PdfRectangle,PdfSharp.Pdf.PdfRectangle)">
            <summary>
            Tests whether two structures have equal coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.op_Inequality(PdfSharp.Pdf.PdfRectangle,PdfSharp.Pdf.PdfRectangle)">
            <summary>
            Tests whether two structures differs in one or more coordinates.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(System.Drawing.PointF)">
            <summary>
            Determines if the specified point is contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(PdfSharp.Drawing.XPoint)">
            <summary>
            Determines if the specified point is contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(System.Double,System.Double)">
            <summary>
            Determines if the specified point is contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(System.Drawing.RectangleF)">
            <summary>
            Determines if the rectangular region represented by rect is entirely contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(PdfSharp.Drawing.XRect)">
            <summary>
            Determines if the rectangular region represented by rect is entirely contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.Contains(PdfSharp.Pdf.PdfRectangle)">
            <summary>
            Determines if the rectangular region represented by rect is entirely contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.ToXRect">
            <summary>
            Returns the rectangle as an XRect object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.ToString">
            <summary>
            Returns the rectangle as a string in the form «[x1 y1 x2 y2]».
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfRectangle.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the rectangle.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfRectangle.Empty">
            <summary>
            Represents an empty PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.IsEmpty">
            <summary>
            Tests whether all coordinate are zero.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.X1">
            <summary>
            Gets or sets the x-coordinate of the first corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Y1">
            <summary>
            Gets or sets the y-coordinate of the first corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.X2">
            <summary>
            Gets or sets the x-coordinate of the second corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Y2">
            <summary>
            Gets or sets the y-coordinate of the second corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Width">
            <summary>
            Gets X2 - X1.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Height">
            <summary>
            Gets Y2 - Y1.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Location">
            <summary>
            Gets or sets the coordinates of the first point of this PdfRectangle.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfRectangle.Size">
            <summary>
            Gets or sets the size of this PdfRectangle.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfStringEncoding">
            <summary>
            Determines the encoding of a PdfString or PdfStringObject.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfStringFlags">
            <summary>
            Internal wrapper for PdfStringEncoding.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfString">
            <summary>
            Represents a direct text string value.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfString.ToString">
            <summary>
            Returns the string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfString.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the string DocEncoded.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfString.EncryptionValue">
            <summary>
            Gets or sets the string value for encryption purposes.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfStringObject">
            <summary>
            Represents an indirect text string value. This type is not used by PDFsharp. If it is imported from
            an external PDF file, the value is converted into a direct object.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfStringObject.ToString">
            <summary>
            Returns the string.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfStringObject.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the string literal with encoding DOCEncoded.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfStringObject.EncryptionValue">
            <summary>
            Gets or sets the string value for encryption purposes.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfTextStringEncoding">
            <summary>
            Specifies how text strings are encoded. A text string is any text used outside of a page content 
            stream, e.g. document information, outline text, annotation text etc.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfTextStringEncoding.PDFDocEncoding">
            <summary>
            Specifies that hypertext uses PDF DocEncoding.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfTextStringEncoding.Unicode">
            <summary>
            Specifies that hypertext uses unicode encoding.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfViewerPreferences.#ctor(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Represents the PDF document viewer preferences dictionary.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfViewerPreferences.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfViewerPreferences.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.HideToolbar">
            <summary>
            (Optional) A flag specifying whether to hide the viewer application’s tool
             bars when the document is active. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.HideMenubar">
            <summary>
            (Optional) A flag specifying whether to hide the viewer application’s
            menu bar when the document is active. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.HideWindowUI">
            <summary>
            (Optional) A flag specifying whether to hide user interface elements in
             the document’s window (such as scroll bars and navigation controls),
             leaving only the document’s contents displayed. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.FitWindow">
            <summary>
            (Optional) A flag specifying whether to resize the document’s window to
            fit the size of the first displayed page. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.CenterWindow">
            <summary>
            (Optional) A flag specifying whether to position the document’s window
            in the center of the screen. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.DisplayDocTitle">
            <summary>
            (Optional; PDF 1.4) A flag specifying whether the window’s title bar
            should display the document title taken from the Title entry of the document
            information dictionary. If false, the title bar should instead display the name
            of the PDF file containing the document. Default value: false.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.NonFullScreenPageMode">
            <summary>
            (Optional) The document’s page mode, specifying how to display the document on 
            exiting full-screen mode:
              UseNone     Neither document outline nor thumbnail images visible
              UseOutlines Document outline visible
              UseThumbs   Thumbnail images visible
              UseOC       Optional content group panel visible
            This entry is meaningful only if the value of the PageMode entry in the catalog 
            dictionary is FullScreen; it is ignored otherwise. Default value: UseNone.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.Direction">
            <summary>
            (Optional; PDF 1.3) The predominant reading order for text:
              L2R  Left to right
              R2L  Right to left (including vertical writing systems, such as Chinese, Japanese, and Korean)
            This entry has no direct effect on the document’s contents or page numbering
            but can be used to determine the relative positioning of pages when displayed 
            side by side or printed n-up. Default value: L2R.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.ViewArea">
            <summary>
            (Optional; PDF 1.4) The name of the page boundary representing the area of a page
            to be displayed when viewing the document on the screen. The value is the key 
            designating the relevant page boundary in the page object. If the specified page
            boundary is not defined in the page object, its default value is used.
            Default value: CropBox.
            Note: This entry is intended primarily for use by prepress applications that
            interpret or manipulate the page boundaries as described in Section 10.10.1, “Page Boundaries.”
            Most PDF consumer applications disregard it.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.ViewClip">
            <summary>
            (Optional; PDF 1.4) The name of the page boundary to which the contents of a page 
            are to be clipped when viewing the document on the screen. The value is the key 
            designating the relevant page boundary in the page object. If the specified page 
            boundary is not defined in the page object, its default value is used.
            Default value: CropBox.
            Note: This entry is intended primarily for use by prepress applications that
            interpret or manipulate the page boundaries as described in Section 10.10.1, “Page Boundaries.”
            Most PDF consumer applications disregard it.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.PrintArea">
            <summary>
            (Optional; PDF 1.4) The name of the page boundary representing the area of a page
            to be rendered when printing the document. The value is the key designating the 
            relevant page boundary in the page object. If the specified page boundary is not 
            defined in the page object, its default value is used.
            Default value: CropBox.
            Note: This entry is intended primarily for use by prepress applications that
            interpret or manipulate the page boundaries as described in Section 10.10.1, “Page Boundaries.”
            Most PDF consumer applications disregard it.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.PrintClip">
            <summary>
            (Optional; PDF 1.4) The name of the page boundary to which the contents of a page
            are to be clipped when printing the document. The value is the key designating the 
            relevant page boundary in the page object. If the specified page boundary is not
            defined in the page object, its default value is used.
            Default value: CropBox.
            Note: This entry is intended primarily for use by prepress applications that interpret
            or manipulate the page boundaries. Most PDF consumer applications disregard it.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfViewerPreferences.Keys.PrintScaling">
            <summary>
            (Optional; PDF 1.6) The page scaling option to be selected when a print dialog is
            displayed for this document. Valid values are None, which indicates that the print
            dialog should reflect no page scaling, and AppDefault, which indicates that 
            applications should use the current print scaling. If this entry has an unrecognized
            value, applications should use the current print scaling.
            Default value: AppDefault.
            Note: If the print dialog is suppressed and its parameters are provided directly
            by the application, the value of this entry should still be used.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfViewerPreferences.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:PdfSharp.Pdf.PdfReferenceTable">
            <summary>
            Represents the cross reference table of a PDF document. It contains all indirect objects of
            a document.
            </summary>
        </member>
        <member name="F:PdfSharp.Pdf.PdfReferenceTable.objectTable">
            <summary>
            Represents the relation between PdfObjectID and PdfReference for a PdfDocument.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.Add(PdfSharp.Pdf.Advanced.PdfReference)">
            <summary>
            Adds a cross reference entry to the table. Used when parsing the trailer.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.Add(PdfSharp.Pdf.PdfObject)">
            <summary>
            Adds a PdfObject to the table.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.Contains(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Indicates whether the specified object identifier is in the table.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.GetNewObjectNumber">
            <summary>
            Returns the next free object number.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.WriteObject(PdfSharp.Pdf.IO.PdfWriter)">
            <summary>
            Writes the iref section in pdf stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.Compact">
            <summary>
            Removes all objects that cannot be reached from the trailer. Returns the number of removed objects.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.Renumber">
            <summary>
            Renumbers the objects starting at 1.
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.CheckConsistence">
            <summary>
            Checks the locical consistence for debugging purposes (useful after reconstruction work).
            </summary>
        </member>
        <member name="M:PdfSharp.Pdf.PdfReferenceTable.TransitiveClosure(PdfSharp.Pdf.PdfObject)">
            <summary>
            Calculates the transitive closure of the specifed PdfObject, i.e. all indirect objects
            recursively reachable from the specified object.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfReferenceTable.Item(PdfSharp.Pdf.PdfObjectID)">
            <summary>
            Gets a cross reference entry from an object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfReferenceTable.AllObjectIDs">
            <summary>
            Gets an array of all object identifier. For debugging purposes only.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfReferenceTable.AllReferences">
            <summary>
            Gets an array of all cross references ordered increasing by their object identifier.
            </summary>
        </member>
        <member name="P:PdfSharp.Pdf.PdfReferenceTable.DeadObject">
            <summary>
            Gets the cross reference to an objects used for undefined indirect references.
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Checksums.Adler32">
            <summary>
            Computes Adler32 checksum for a stream of data. An Adler32
            checksum is not as reliable as a CRC32 checksum, but a lot faster to
            compute.
            
            The specification for Adler32 may be found in RFC 1950.
            ZLIB Compressed Data Format Specification version 3.3)
            
            
            From that document:
            
                 "ADLER32 (Adler-32 checksum)
                  This contains a checksum value of the uncompressed data
                  (excluding any dictionary data) computed according to Adler-32
                  algorithm. This algorithm is a 32-bit extension and improvement
                  of the Fletcher algorithm, used in the ITU-T X.224 / ISO 8073
                  standard.
            
                  Adler-32 is composed of two sums accumulated per byte: s1 is
                  the sum of all bytes, s2 is the sum of all s1 values. Both sums
                  are done modulo 65521. s1 is initialized to 1, s2 to zero.  The
                  Adler-32 checksum is stored as s2*65536 + s1 in most-
                  significant-byte first (network) order."
            
             "8.2. The Adler-32 algorithm
            
               The Adler-32 algorithm is much faster than the CRC32 algorithm yet
               still provides an extremely low probability of undetected errors.
            
               The modulo on unsigned long accumulators can be delayed for 5552
               bytes, so the modulo operation time is negligible.  If the bytes
               are a, b, c, the second sum is 3a + 2b + c + 3, and so is position
               and order sensitive, unlike the first sum, which is just a
               checksum.  That 65521 is prime is important to avoid a possible
               large class of two-byte errors that leave the check unchanged.
               (The Fletcher checksum uses 255, which is not prime and which also
               makes the Fletcher check insensitive to single byte changes 0 -
               255.)
            
               The sum s1 is initialized to 1 instead of zero to make the length
               of the sequence part of s2, so that the length does not have to be
               checked separately. (Any sequence of zeroes has a Fletcher
               checksum of zero.)"
            </summary>
            <see cref="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream"/>
            <see cref="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream"/>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Checksums.IChecksum">
            <summary>
            Interface to compute a data checksum used by checked input/output streams.
            A data checksum can be updated by one byte or with a byte array. After each
            update the value of the current checksum can be returned by calling
            <code>getValue</code>. The complete checksum object can also be reset
            so it can be used again with new data.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.IChecksum.Reset">
            <summary>
            Resets the data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.IChecksum.Update(System.Int32)">
            <summary>
            Adds one byte to the data checksum.
            </summary>
            <param name = "bval">
            the data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.IChecksum.Update(System.Byte[])">
            <summary>
            Updates the data checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.IChecksum.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buf">
            the buffer which contains the data
            </param>
            <param name = "off">
            the offset in the buffer where the data starts
            </param>
            <param name = "len">
            the length of the data
            </param>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Checksums.IChecksum.Value">
            <summary>
            Returns the data checksum computed so far.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Checksums.Adler32.BASE">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Adler32.#ctor">
            <summary>
            Creates a new instance of the <code>Adler32</code> class.
            The checksum starts off with a value of 1.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Adler32.Reset">
            <summary>
            Resets the Adler32 checksum to the initial value.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Adler32.Update(System.Int32)">
            <summary>
            Updates the checksum with the byte b.
            </summary>
            <param name="bval">
            the data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Adler32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Adler32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buf">
            an array of bytes
            </param>
            <param name="off">
            the start of the data used for this update
            </param>
            <param name="len">
            the number of bytes to use for this update
            </param>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Checksums.Adler32.Value">
            <summary>
            Returns the Adler32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Checksums.Crc32">
             <summary>
             Generate a table for a byte-wise 32-bit CRC calculation on the polynomial:
             x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1.
            
             Polynomials over GF(2) are represented in binary, one bit per coefficient,
             with the lowest powers in the most significant bit.  Then adding polynomials
             is just exclusive-or, and multiplying a polynomial by x is a right shift by
             one.  If we call the above polynomial p, and represent a byte as the
             polynomial q, also with the lowest power in the most significant bit (so the
             byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p,
             where a mod b means the remainder after dividing a by b.
            
             This calculation is done using the shift-register method of multiplying and
             taking the remainder.  The register is initialized to zero, and for each
             incoming bit, x^32 is added mod p to the register if the bit is a one (where
             x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by
             x (which is shifting right by one and adding x^32 mod p if the bit shifted
             out is a one).  We start with the highest power (least significant bit) of
             q and repeat for all eight bits of q.
            
             The table is simply the CRC of all possible eight bit values.  This is all
             the information needed to generate CRC's on data a byte at a time for all
             combinations of CRC register values and incoming bytes.
             </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Checksums.Crc32.crc">
            <summary>
            The crc data checksum so far.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int bval.
            </summary>
            <param name = "bval">
            the byte is taken as the lower 8 bits of bval
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Checksums.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buf">
            the buffer which contains the data
            </param>
            <param name = "off">
            the offset in the buffer where the data starts
            </param>
            <param name = "len">
            the length of the data
            </param>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Checksums.Crc32.Value">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            <summary>
            SharpZipBaseException is the base exception class for the SharpZipLibrary.
            All library exceptions are derived from this.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.SharpZipBaseException.#ctor">
            <summary>
            Initializes a new instance of the SharpZipLibraryException class.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.SharpZipBaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SharpZipLibraryException class with a specified error message.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.SharpZipBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SharpZipLibraryException class with a specified
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">Error message string</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Deflater">
             <summary>
             This is the Deflater class.  The deflater class compresses input
             with the deflate algorithm described in RFC 1951.  It has several
             compression levels and three different strategies described below.
            
             This class is <i>not</i> thread safe.  This is inherent in the API, due
             to the split of deflate and setInput.
             
             author of the original java version : Jochen Hoenicke
             </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.BEST_COMPRESSION">
            <summary>
            The best and slowest compression level.  This tries to find very
            long and distant string repetitions.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.BEST_SPEED">
            <summary>
            The worst but fastest compression level.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.DEFAULT_COMPRESSION">
            <summary>
            The default compression level.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.NO_COMPRESSION">
            <summary>
            This level won't compress at all but output uncompressed blocks.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.DEFLATED">
            <summary>
            The compression method.  This is the only method supported so far.
            There is no need to use this constant at all.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.level">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.noZlibHeaderOrFooter">
            <summary>
            If true no Zlib/RFC1950 headers or footers are generated
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.state">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.totalOut">
            <summary>
            The total bytes of output written.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.pending">
            <summary>
            The pending output.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Deflater.engine">
            <summary>
            The deflater engine.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.#ctor">
            <summary>
            Creates a new deflater with default compression level.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.#ctor(System.Int32)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="lvl">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION, or DEFAULT_COMPRESSION.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION.
            </param>
            <param name="noZlibHeaderOrFooter">
            true, if we should suppress the Zlib/RFC1950 header at the
            beginning and the adler checksum at the end of the output.  This is
            useful for the GZIP/PKZIP formats.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Reset">
            <summary>
            Resets the deflater.  The deflater acts afterwards as if it was
            just created with the same compression level and strategy as it
            had before.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Flush">
            <summary>
            Flushes the current input block.  Further calls to deflate() will
            produce enough output to inflate everything in the current input
            block.  This is not part of Sun's JDK so I have made it package
            private.  It is used by DeflaterOutputStream to implement
            flush().
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Finish">
            <summary>
            Finishes the deflater with the current input block.  It is an error
            to give more input after this method was called.  This method must
            be called to force all bytes to be flushed.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetInput(System.Byte[])">
            <summary>
            Sets the data which should be compressed next.  This should be only
            called when needsInput indicates that more input is needed.
            If you call setInput when needsInput() returns false, the
            previous input that is still pending will be thrown away.
            The given byte array should not be changed, before needsInput() returns
            true again.
            This call is equivalent to <code>setInput(input, 0, input.length)</code>.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended().
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the data which should be compressed next.  This should be
            only called when needsInput indicates that more input is needed.
            The given byte array should not be changed, before needsInput() returns
            true again.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <param name="off">
            the start of the data.
            </param>
            <param name="len">
            the length of the data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended() or if previous input is still pending.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  There is no guarantee of the exact
            position of the change, but if you call this when needsInput is
            true the change of compression level will occur somewhere near
            before the end of the so far given input.
            </summary>
            <param name="lvl">
            the new compression level.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.GetLevel">
            <summary>
            Get current compression level
            </summary>
            <returns>Returns the current compression level</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetStrategy(PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy)">
            <summary>
            Sets the compression strategy. Strategy is one of
            DEFAULT_STRATEGY, HUFFMAN_ONLY and FILTERED.  For the exact
            position where the strategy is changed, the same as for
            setLevel() applies.
            </summary>
            <param name="strategy">
            The new compression strategy.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Deflate(System.Byte[])">
            <summary>
            Deflates the current input block with to the given array.
            </summary>
            <param name="output">
            The buffer where compressed data is stored
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Deflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Deflates the current input block to the given array.
            </summary>
            <param name="output">
            Buffer to store the compressed data.
            </param>
            <param name="offset">
            Offset into the output array.
            </param>
            <param name="length">
            The maximum number of bytes that may be stored.
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            If end() was previously called.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset and/or length don't match the array length.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            This call is equivalent to <code>setDictionary(dict, 0, dict.Length)</code>.
            </summary>
            <param name="dict">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if setInput () or deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Deflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            The dictionary is a byte array containing strings that are
            likely to occur in the data which should be compressed.  The
            dictionary is not stored in the compressed output, only a
            checksum.  To decompress the output you need to supply the same
            dictionary again.
            </summary>
            <param name="dict">
            The dictionary data
            </param>
            <param name="offset">
            An offset into the dictionary.
            </param>
            <param name="length">
            The length of the dictionary data to use
            </param>
            <exception cref="T:System.InvalidOperationException">
            If setInput () or deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Deflater.Adler">
            <summary>
            Gets the current adler checksum of the data that was processed so far.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Deflater.TotalIn">
            <summary>
            Gets the number of input bytes processed so far.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Deflater.TotalOut">
            <summary>
            Gets the number of output bytes so far.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Deflater.IsFinished">
            <summary>
            Returns true if the stream was finished and no more output bytes
            are available.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Deflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method can also return true when the stream
            was finished.
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants">
            <summary>
            This class contains constants used for deflation.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.STORED_BLOCK">
            <summary>
            Written to Zip file to identify a stored block
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.STATIC_TREES">
            <summary>
            Identifies static tree in Zip file
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DYN_TREES">
            <summary>
            Identifies dynamic tree in Zip file
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.PRESET_DICT">
            <summary>
            Header flag indicating a preset dictionary for deflation
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DEFAULT_MEM_LEVEL">
            <summary>
            Sets internal buffer sizes for Huffman encoding
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MIN_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_WBITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.WSIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.WMASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_BITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_MASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_SHIFT">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MIN_LOOKAHEAD">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_DIST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.PENDING_BUF_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_STORED">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_FAST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_SLOW">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_BLOCK_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.GOOD_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_LAZY">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.NICE_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_CHAIN">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.COMPR_FUNC">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.DeflaterConstants.DEBUGGING">
            <summary>
            Set to true to enable debugging
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy">
            <summary>
            Strategies for deflater
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy.Default">
            <summary>
            The default strategy
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy.Filtered">
            <summary>
            This strategy will only allow longer string repetitions.  It is
            useful for random data with a small character set.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy.HuffmanOnly">
            <summary>
            This strategy will not look for string repetitions at all.  It
            only encodes with Huffman trees (which means, that more common
            characters get a smaller encoding.
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine">
            <summary>
            Low level compression engine for deflate algorithm which uses a 32K sliding window
            with secondary compression from Huffman/Shannon-Fano codes.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.comprFunc">
            <summary>
            The current compression function.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.inputBuf">
            <summary>
            The input data for compression.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.totalIn">
            <summary>
            The total bytes of input read.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.inputOff">
            <summary>
            The offset into inputBuf, where input data starts.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.inputEnd">
            <summary>
            The end offset of the input data.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.adler">
            <summary>
            The adler checksum
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.#ctor(PdfSharp.SharpZipLib.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">
            Pending buffer to use
            </param>>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.ResetAdler">
            <summary>
            Reset Adler checksum
            </summary>		
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.SetLevel(System.Int32)">
            <summary>
            Set the deflate level (0-9)
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.FillWindow">
            <summary>
            Fill the window
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set compression dictionary
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.Deflate(System.Boolean,System.Boolean)">
            <summary>
            Deflate drives actual compression of data
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">
            Sets input data to be deflated.  Should only be called when <code>NeedsInput()</code>
            returns true
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.NeedsInput">
            <summary>
            Return true if input is needed <see cref="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)"> via SetInput</see>
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.Adler">
            <summary>
            Get current value of Adler checksum
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.TotalIn">
            <summary>
            Total data processed
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.DeflaterEngine.Strategy">
            <summary>
            Get/set the <see cref="T:PdfSharp.SharpZipLib.Zip.Compression.DeflateStrategy">deflate strategy</see>
            </summary>		
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman">
            <summary>
            This is the DeflaterHuffman class.
            
            This class is <i>not</i> thread safe.  This is inherent in the API, due
            to the split of deflate and setInput.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.pending">
            <summary>
            Pending buffer to use
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.BitReverse(System.Int32)">
            <summary>
            Reverse the bits of a 16 bit value.
            </summary>
            <param name="toReverse">Value to reverse bits</param>
            <returns>Value with bits reversed</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.#ctor(PdfSharp.SharpZipLib.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">Pending buffer to use</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.SendAllTrees(System.Int32)">
            <summary>
            Write all trees to pending buffer
            </summary>		
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.CompressBlock">
            <summary>
            Compress current buffer writing data to pending buffer
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.FlushStoredBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with no compression
            </summary>
            <param name="stored">Data to write</param>
            <param name="storedOffset">Index of first byte to write</param>
            <param name="storedLength">Count of bytes to write</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.FlushBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with compression
            </summary>		
            <param name="stored">Data to flush</param>
            <param name="storedOffset">Index of first byte to flush</param>
            <param name="storedLength">Count of bytes to flush</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.IsFull">
            <summary>
            Get value indicating if internal buffer is full
            </summary>
            <returns>true if buffer is full</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.TallyLit(System.Int32)">
            <summary>
            Add literal to buffer
            </summary>
            <param name="lit"></param>
            <returns>Value indicating internal buffer is full</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.TallyDist(System.Int32,System.Int32)">
            <summary>
            Add distance code and length to literal and distance trees
            </summary>
            <param name="dist">Distance code</param>
            <param name="len">Length</param>
            <returns>Value indicating if internal buffer is full</returns>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.freqs">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.length">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.minNumCodes">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.numCodes">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.#ctor(PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman,System.Int32,System.Int32,System.Int32)">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.Reset">
            <summary>
            Resets the internal state of the tree
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.WriteSymbol(System.Int32)">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.CheckEmpty">
            <summary>
            Check that at least one frequency is non-zero
            </summary>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            No frequencies are non-zero
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.SetStaticCodes(System.Int16[],System.Byte[])">
            <summary>
            Set static codes and length
            </summary>
            <param name="stCodes">new codes</param>
            <param name="stLength">length for new codes</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.BuildCodes">
            <summary>
            Build dynamic codes and lengths
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.BuildTree">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.GetEncodedLength">
            <summary>
            Get encoded length
            </summary>
            <returns>Encoded length, the sum of frequencies * lengths</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.CalcBLFreq(PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Not documented
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.WriteTree(PdfSharp.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Write tree values
            </summary>
            <param name="blTree">Tree to write</param>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.DeflaterPending">
            <summary>
            This class stores the pending output of the Deflater.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer">
            <summary>
            This class is general purpose class for writing data to a buffer.
            
            It allows you to write bits as well as bytes
            Based on DeflaterPending.java
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.buf">
            <summary>Internal work buffer
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.#ctor">
            <summary>
            construct instance using default buffer size of 4096
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.#ctor(System.Int32)">
            <summary>
            construct instance using specified buffer size
            </summary>
            <param name="bufsize">
            size to use for internal buffer
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.Reset">
            <summary>
            Clear internal state/buffers
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteByte(System.Int32)">
            <summary>
            write a byte to buffer
            </summary>
            <param name="b">
            value to write
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteShort(System.Int32)">
            <summary>
            Write a short value to buffer LSB first
            </summary>
            <param name="s">
            value to write
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteInt(System.Int32)">
            <summary>
            write an integer LSB first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a block of data to buffer
            </summary>
            <param name="block">data to write</param>
            <param name="offset">offset of first byte to write</param>
            <param name="len">number of bytes to write</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.AlignToByte">
            <summary>
            Align internal buffer on a byte boundary
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits to internal buffer
            </summary>
            <param name="b">source of bits</param>
            <param name="count">number of bits to write</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.WriteShortMSB(System.Int32)">
            <summary>
            Write a short value to internal buffer most significant byte first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.Flush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
            <param name="output">
            the output array;
            </param>
            <param name="offset">
            the offset into output array;
            </param>
            <param name="length">		
            length the maximum number of bytes to store;
            </param>
            <exception name="ArgumentOutOfRangeException">
            IndexOutOfBoundsException if offset or length are invalid.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.ToByteArray">
            <summary>
            Convert internal buffer to byte array.
            Buffer is empty on completion
            </summary>
            <returns>
            converted buffer contents contents
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.BitCount">
            <summary>
            The number of bits written to the buffer
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.PendingBuffer.IsFlushed">
            <summary>
            Indicates if buffer has been flushed
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.DeflaterPending.#ctor">
            <summary>
            Construct instance with default buffer size
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Inflater">
             <summary>
             Inflater is used to decompress data that has been compressed according
             to the "deflate" standard described in rfc1951.
             
             By default Zlib (rfc1950) headers and footers are expected in the input.
             You can use constructor <code> public Inflater(bool noHeader)</code> passing true
             if there is no Zlib header information
            
             The usage is as following.  First you have to set some input with
             <code>setInput()</code>, then inflate() it.  If inflate doesn't
             inflate any bytes there may be three reasons:
             <ul>
             <li>needsInput() returns true because the input buffer is empty.
             You have to provide more input with <code>setInput()</code>.
             NOTE: needsInput() also returns true when, the stream is finished.
             </li>
             <li>needsDictionary() returns true, you have to provide a preset
                dictionary with <code>setDictionary()</code>.</li>
             <li>finished() returns true, the inflater has finished.</li>
             </ul>
             Once the first output byte is produced, a dictionary will not be
             needed at a later stage.
            
             author of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.DECODE_HEADER">
            <summary>
            These are the possible states for an inflater
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.CPLENS">
            <summary>
            Copy lengths for literal codes 257..285
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.CPLEXT">
            <summary>
            Extra bits for literal codes 257..285
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.CPDIST">
            <summary>
            Copy offsets for distance codes 0..29
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.CPDEXT">
            <summary>
            Extra bits for distance codes
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.mode">
            <summary>
            This variable contains the current state.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.readAdler">
            <summary>
            The adler checksum of the dictionary or of the decompressed
            stream, as it is written in the header resp. footer of the
            compressed stream. 
            Only valid if mode is DECODE_DICT or DECODE_CHKSUM.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.neededBits">
            <summary>
            The number of bits needed to complete the current state.  This
            is valid, if mode is DECODE_DICT, DECODE_CHKSUM,
            DECODE_HUFFMAN_LENBITS or DECODE_HUFFMAN_DISTBITS.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.isLastBlock">
            <summary>
            True, if the last block flag was set in the last block of the
            inflated stream.  This means that the stream ends after the
            current block.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.totalOut">
            <summary>
            The total number of inflated bytes.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.totalIn">
            <summary>
            The total number of bytes set with setInput().  This is not the
            value returned by the TotalIn property, since this also includes the
            unprocessed input.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Inflater.noHeader">
            <summary>
            This variable stores the noHeader flag that was given to the constructor.
            True means, that the inflated stream doesn't contain a Zlib header or 
            footer.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.#ctor">
            <summary>
            Creates a new inflater or RFC1951 decompressor
            RFC1950/Zlib headers and footers will be expected in the input data
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.#ctor(System.Boolean)">
            <summary>
            Creates a new inflater.
            </summary>
            <param name="noHeader">
            True if no RFC1950/Zlib header and footer fields are expected in the input data
            
            This is used for GZIPed/Zipped input.
            
            For compatibility with
            Sun JDK you should provide one byte of input more than needed in
            this case.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.Reset">
            <summary>
            Resets the inflater so that a new stream can be decompressed.  All
            pending input and output will be discarded.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.DecodeHeader">
            <summary>
            Decodes a zlib/RFC1950 header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            The header is invalid.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.DecodeDict">
            <summary>
            Decodes the dictionary checksum after the deflate header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.DecodeHuffman">
            <summary>
            Decodes the huffman encoded symbols in the input stream.
            </summary>
            <returns>
            false if more input is needed, true if output window is
            full or the current block ends.
            </returns>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.DecodeChksum">
            <summary>
            Decodes the adler checksum after the deflate stream.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            If checksum doesn't match.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.Decode">
            <summary>
            Decodes the deflated stream.
            </summary>
            <returns>
            false if more input is needed, or if finished.
            </returns>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
            <param name="offset">
            The offset into buffer where the dictionary starts.
            </param>
            <param name="len">
            The length of the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No dictionary is needed.
            </exception>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            The adler checksum for the buffer is invalid
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.SetInput(System.Byte[])">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buf">
            the input.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buffer">
            The source of input data
            </param>
            <param name="offset">
            The offset into buffer where the input starts.
            </param>
            <param name="length">
            The number of bytes of input to use.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No input is needed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The off and/or len are wrong.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.Inflate(System.Byte[])">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buf">
            the output buffer.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further
            output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if buf has length 0.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Inflater.Inflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buf">
            the output buffer.
            </param>
            <param name="offset">
            the offset into buffer where the output should start.
            </param>
            <param name="len">
            the maximum length of the output.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if len is &lt;= 0.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the offset and/or len are wrong.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method also returns true when the stream is finished.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.IsNeedingDictionary">
            <summary>
            Returns true, if a preset dictionary is needed to inflate the input.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.IsFinished">
            <summary>
            Returns true, if the inflater has finished.  This means, that no
            input is needed and no output can be produced.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.Adler">
            <summary>
            Gets the adler checksum.  This is either the checksum of all
            uncompressed bytes returned by inflate(), or if needsDictionary()
            returns true (and thus no output was yet produced) this is the
            adler checksum of the expected dictionary.
            </summary>
            <returns>
            the adler checksum.
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.TotalOut">
            <summary>
            Gets the total number of output bytes returned by inflate().
            </summary>
            <returns>
            the total number of output bytes.
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.TotalIn">
            <summary>
            Gets the total number of processed compressed input bytes.
            </summary>
            <returns>
            The total number of bytes of processed input bytes.
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Inflater.RemainingInput">
            <summary>
            Gets the number of unprocessed input bytes.  Useful, if the end of the
            stream is reached and you want to further process the bytes after
            the deflate stream.
            </summary>
            <returns>
            The number of bytes of the input which have not been processed.
            </returns>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.InflaterHuffmanTree">
            <summary>
            Huffman tree used for inflation
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.InflaterHuffmanTree.defLitLenTree">
            <summary>
            Literal length tree
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.InflaterHuffmanTree.defDistTree">
            <summary>
            Distance tree
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.InflaterHuffmanTree.#ctor(System.Byte[])">
            <summary>
            Constructs a Huffman tree from the array of code lengths.
            </summary>
            <param name = "codeLengths">
            the array of code lengths
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.InflaterHuffmanTree.GetSymbol(PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator)">
            <summary>
            Reads the next symbol from input.  The symbol is encoded using the
            huffman tree.
            </summary>
            <param name="input">
            input the input source.
            </param>
            <returns>
            the next symbol, or -1 if not enough input is available.
            </returns>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream">
            <summary>
            A special stream deflating or compressing the bytes that are
            written to it.  It uses a Deflater to perform actual deflating.<br/>
            Authors of the original java version : Tom Tromey, Jochen Hoenicke 
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.buf">
            <summary>
            This buffer is used temporarily to retrieve the bytes from the
            deflater and write them to the underlying output stream.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.def">
            <summary>
            The deflater which is used to deflate the stream.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.baseOutputStream">
            <summary>
            Base stream the deflater depends on.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value. Not supported by this class!
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream to the given value. Not supported by this class!
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.ReadByte">
            <summary>
            Read a byte from stream advancing position by one
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a block of bytes from stream
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous reads are not supported a NotSupportedException is always thrown
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous writes arent supported, a NotSupportedException is always thrown
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Deflate">
            <summary>
            Deflates everything in the input buffers.  This will call
            <code>def.deflate()</code> until all bytes from the input buffers
            are processed.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new DeflaterOutputStream with a default Deflater and default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,PdfSharp.SharpZipLib.Zip.Compression.Deflater)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="defl">
            the underlying deflater.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,PdfSharp.SharpZipLib.Zip.Compression.Deflater,System.Int32)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            buffer size.
            </summary>
            <param name="baseOutputStream">
            The output stream where deflated output is written.
            </param>
            <param name="deflater">
            The underlying deflater to use
            </param>
            <param name="bufsize">
            The buffer size to use when deflating
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            bufsize is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            baseOutputStream does not support writing
            </exception>
            <exception cref="T:System.ArgumentNullException">
            deflater instance is null
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Flush">
            <summary>
            Flushes the stream by calling flush() on the deflater and then
            on the underlying stream.  This ensures that all bytes are
            flushed.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Finish">
            <summary>
            Finishes the stream by calling finish() on the deflater. 
            </summary>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            Not all input is deflated
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Close">
            <summary>
            Calls finish() and closes the underlying
            stream when <see cref="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner"></see> is true.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a single byte to the compressed output stream.
            </summary>
            <param name="bval">
            The byte value.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes from an array to the compressed stream.
            </summary>
            <param name="buf">
            The byte array
            </param>
            <param name="off">
            The offset into the byte array where to start.
            </param>
            <param name="len">
            The number of bytes to write.
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.EncryptByte">
            <summary>
            Encrypt a single byte 
            </summary>
            <returns>
            The encrypted value
            </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.EncryptBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypt a block of data
            </summary>
            <param name="buffer">
            Data to encrypt.  NOTE the original contents of the buffer are lost
            </param>
            <param name="offset">
            Offset of first byte in buffer to encrypt
            </param>
            <param name="length">
            Number of bytes in buffer to encrypt
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.InitializePassword(System.String)">
            <summary>
            Initializes encryption keys based on given password
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.UpdateKeys(System.Byte)">
            <summary>
            Update encryption keys 
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of underlying stream.
            When the flag is true <see cref="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Close"></see> will close the underlying stream also.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanPatchEntries">
            <summary>
            Allows client to determine if an entry can be patched after its added
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanRead">
            <summary>
            Gets value indicating stream can be read from
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanSeek">
            <summary>
            Gets a value indicating if seeking is supported for this stream
            This property always returns false
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanWrite">
            <summary>
            Get value indicating if this stream supports writing
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Length">
            <summary>
            Get current length of stream
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Position">
            <summary>
            The current position within the stream.
            Always throws a NotSupportedExceptionNotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">Any attempt to set position</exception>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Password">
            <summary>
            Get/set the password used for encryption.  When null no encryption is performed
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream">
             <summary>
             This filter stream is used to decompress data compressed using the "deflate"
             format. The "deflate" format is described in RFC 1951.
            
             Author of the original java version : John Leuner.
             </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.inf">
            <summary>
            Decompressor for this stream
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.buf">
            <summary>
            Byte array used for buffering input.
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.len">
            <summary>
            Size of buffer <see cref="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.buf"></see>
            </summary>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.baseInputStream">
            <summary>
            Base stream the inflater reads from.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Flush">
            <summary>
            Flushes the baseInputStream
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream
            Always throws a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.SetLength(System.Int64)">
            <summary>
            Set the length of the current stream
            Always throws a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to stream and advances the current position
            This method always throws a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.WriteByte(System.Byte)">
            <summary>
            Writes one byte to the current stream and advances the current position
            Always throws a NotSupportedException
            </summary>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Entry point to begin an asynchronous write.  Always throws a NotSupportedException.
            </summary>
            <param name="buffer">The buffer to write data from</param>
            <param name="offset">Offset of first byte to write</param>
            <param name="count">The maximum number of bytes to write</param>
            <param name="callback">The method to be called when the asynchronous write operation is completed</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests</param>
            <returns>An <see cref="T:System.IAsyncResult">IAsyncResult</see> that references the asynchronous write</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream)">
            <summary>
            Create an InflaterInputStream with the default decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,PdfSharp.SharpZipLib.Zip.Compression.Inflater)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The source of input data
            </param>
            <param name = "inf">
            The decompressor used to decompress data read from baseInputStream
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,PdfSharp.SharpZipLib.Zip.Compression.Inflater,System.Int32)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and the specified buffer size.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
            <param name = "inflater">
            The decompressor to use
            </param>
            <param name = "bufferSize">
            Size of the buffer to use
            </param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Close">
            <summary>
            Closes the input stream.  When <see cref="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner"></see>
            is true the underlying stream is also closed.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.FillInputBuffer">
            <summary>
            Fill input buffer with a chunk of data.
            </summary>		
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Fill">
            <summary>
            Fills the buffer with more data to decompress.
            </summary>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            Stream ends early
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.ReadByte">
             <summary>
             Reads one byte of decompressed data.
            
             The byte is baseInputStream the lower 8 bits of the int.
             </summary>
             <returns>
             The byte read cast to an int, or -1 on end of stream.
             </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses data into the byte array
            </summary>
            <param name="b">
            The array to read and decompress data into
            </param>
            <param name="off">
            The offset indicating where the data should be placed
            </param>
            <param name="len">
            The number of bytes to decompress
            </param>
            <returns>The number of bytes read.  Zero signals the end of stream</returns>
            <exception cref="T:PdfSharp.SharpZipLib.SharpZipBaseException">
            Inflater needs a dictionary
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Skip(System.Int64)">
            <summary>
            Skip specified number of bytes of uncompressed data
            </summary>
            <param name="n">
            Number of bytes to skip
            </param>
            <returns>
            The number of bytes skipped, zero if the end of 
            stream has been reached
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Number of bytes to skip is zero or less
            </exception>
        </member>
        <member name="F:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.cryptbuffer">
            <summary>
            A buffer used for decrypting data.  Used to hold Zip crypto header.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.DecryptByte">
            <summary>
            Decrypt a single byte
            </summary>
            <returns>plain text byte value</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.DecryptBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decrypt cipher text block, updating keys
            </summary>
            <param name="buf">Data to decrypt</param>
            <param name="off">Offset of first byte to process</param>
            <param name="len">Number of bytes to process</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.InitializePassword(System.String)">
            <summary>
            Initialise the decryption keys
            </summary>
            <param name="password">The password used to initialise the keys</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.UpdateKeys(System.Byte)">
            <summary>
            Update the decryption keys
            </summary>
            <param name="ch">Character to update the keys with</param>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.StopDecrypting">
            <summary>
            Clear any cryptographic state.
            </summary>		
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of underlying stream.
            When the flag is true <see cref="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Close"/> will close the underlying stream also.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanSeek">
            <summary>
            Gets a value of false indicating seeking is not supported for this stream.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanWrite">
            <summary>
            Gets a value of false indicating that this stream is not writeable.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Length">
            <summary>
            A value representing the length of the stream in bytes.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Position">
            <summary>
            The current position within the stream.
            Throws a NotSupportedException when attempting to set the position
            </summary>
            <exception cref="T:System.NotSupportedException">Attempting to set the position</exception>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Available">
            <summary>
            Returns 0 once the end of the stream (EOF) has been reached.
            Otherwise returns 1.
            </summary>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.BufferReadSize">
            <summary>
            Sets the size of chunks to read from the input stream
            0 means as larger as possible.
            </summary>
            <remarks>
            Used to handle decryption where the length of stream is unknown.
            </remarks>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow">
            <summary>
            Contains the output from the Inflation process.
            We need to have a window so that we can refer backwards into the output stream
            to repeat stuff.<br/>
            Author of the original java version : John Leuner
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.Write(System.Int32)">
            <summary>
            Write a byte to this output window
            </summary>
            <param name="abyte">value to write</param>
            <exception cref="T:System.InvalidOperationException">
            if window is full
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.Repeat(System.Int32,System.Int32)">
            <summary>
            Append a byte pattern already in the window itself
            </summary>
            <param name="len">length of pattern to copy</param>
            <param name="dist">distance from end of window pattern occurs</param>
            <exception cref="T:System.InvalidOperationException">
            If the repeated data overflows the window
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyStored(PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator,System.Int32)">
            <summary>
            Copy from input manipulator to internal window
            </summary>
            <param name="input">source of data</param>
            <param name="len">length of data to copy</param>
            <returns>the number of bytes copied</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyDict(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy dictionary to window
            </summary>
            <param name="dict">source dictionary</param>
            <param name="offset">offset of start in source dictionary</param>
            <param name="len">length of dictionary</param>
            <exception cref="T:System.InvalidOperationException">
            If window isnt empty
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetFreeSpace">
            <summary>
            Get remaining unfilled space in window
            </summary>
            <returns>Number of bytes left in window</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetAvailable">
            <summary>
            Get bytes available for output in window
            </summary>
            <returns>Number of bytes filled</returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyOutput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy contents of window to output
            </summary>
            <param name="output">buffer to copy to</param>
            <param name="offset">offset to start at</param>
            <param name="len">number of bytes to count</param>
            <returns>The number of bytes copied</returns>
            <exception cref="T:System.InvalidOperationException">
            If a window underflow occurs
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.Reset">
            <summary>
            Reset by clearing window so <see cref="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetAvailable">GetAvailable</see> returns 0
            </summary>
        </member>
        <member name="T:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator">
             <summary>
             This class allows us to retrieve a specified number of bits from
             the input buffer, as well as copy big byte blocks.
            
             It uses an int buffer to store up to 31 bits for direct
             manipulation.  This guarantees that we can get at least 16 bits,
             but we only need at most 15, so this is all safe.
            
             There are some optimizations in this class, for example, you must
             never peek more than 8 bits more than needed, and you must first
             peek bits before you may drop them.  This is not a general purpose
             class but optimized for the behaviour of the Inflater.
            
             authors of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.PeekBits(System.Int32)">
            <summary>
            Get the next n bits but don't increase input pointer.  n must be
            less or equal 16 and if this call succeeds, you must drop
            at least n - 8 bits in the next call.
            </summary>
            <returns>
            the value of the bits, or -1 if not enough bits available.  */
            </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.DropBits(System.Int32)">
            <summary>
            Drops the next n bits from the input.  You should have called PeekBits
            with a bigger or equal n before, to make sure that enough bits are in
            the bit buffer.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.GetBits(System.Int32)">
            <summary>
            Gets the next n bits and increases input pointer.  This is equivalent
            to PeekBits followed by dropBits, except for correct error handling.
            </summary>
            <returns>
            the value of the bits, or -1 if not enough bits available.
            </returns>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.SkipToByteBoundary">
            <summary>
            Skips to the next byte boundary.
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.CopyBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies length bytes from input buffer to output buffer starting
            at output[offset].  You have to make sure, that the buffer is
            byte aligned.  If not enough bytes are available, copies fewer
            bytes.
            </summary>
            <param name="output">
            The buffer to copy bytes to.
            </param>
            <param name="offset">
            The offset in the buffer at which copying starts
            </param>
            <param name="length">
            The length to copy, 0 is allowed.
            </param>
            <returns>
            The number of bytes copied, 0 if no bytes were available.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Length is less than zero
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Bit buffer isnt byte aligned
            </exception>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.#ctor">
            <summary>
            Constructs a default StreamManipulator with all buffers empty
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.Reset">
            <summary>
            resets state and empties internal buffers
            </summary>
        </member>
        <member name="M:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Add more input for consumption.
            Only call when IsNeedingInput returns true
            </summary>
            <param name="buf">data to be input</param>
            <param name="off">offset of first byte of input</param>
            <param name="len">length of input</param>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.AvailableBits">
            <summary>
            Gets the number of bits available in the bit buffer.  This must be
            only called when a previous PeekBits() returned -1.
            </summary>
            <returns>
            the number of bits available.
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.AvailableBytes">
            <summary>
            Gets the number of bytes available.
            </summary>
            <returns>
            The number of bytes available.
            </returns>
        </member>
        <member name="P:PdfSharp.SharpZipLib.Zip.Compression.Streams.StreamManipulator.IsNeedingInput">
            <summary>
            Returns true when SetInput can be called
            </summary>
        </member>
        <member name="T:PdfSharp.PageOrientation">
            <summary>
            Specifies the orientation of a page.
            </summary>
        </member>
        <member name="F:PdfSharp.PageOrientation.Portrait">
            <summary>
            The default page orientation.
            </summary>
        </member>
        <member name="F:PdfSharp.PageOrientation.Landscape">
            <summary>
            The width and height of the page are reversed.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Undefined">
            <summary>
            The width or height of the page are set manually and override the PageSize property.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A0">
            <summary>
            Identifies a pager sheet size of 841 mm times 1189 mm or 33.11 inch times 46.81 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A1">
            <summary>
            Identifies a pager sheet size of 594 mm times 841 mm or 23.39 inch times 33.1 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A2">
            <summary>
            Identifies a pager sheet size of 420 mm times 594 mm or 16.54 inch times 23.29 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A3">
            <summary>
            Identifies a pager sheet size of 297 mm times 420 mm or 11.69 inch times 16.54 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A4">
            <summary>
            Identifies a pager sheet size of 210 mm times 297 mm or 8.27 inch times 11.69 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.A5">
            <summary>
            Identifies a pager sheet size of 148 mm times 210 mm or 5.83 inch times 8.27 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA0">
            <summary>
            Identifies a pager sheet size of 860 mm times 1220 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA1">
            <summary>
            Identifies a pager sheet size of 610 mm times 860 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA2">
            <summary>
            Identifies a pager sheet size of 430 mm times 610 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA3">
            <summary>
            Identifies a pager sheet size of 305 mm times 430 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA4">
            <summary>
            Identifies a pager sheet size of 215 mm times 305 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.RA5">
            <summary>
            Identifies a pager sheet size of 153 mm times 215 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B0">
            <summary>
            Identifies a pager sheet size of 1000 mm times 1414 mm or 39.37 inch times 55.67 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B1">
            <summary>
            Identifies a pager sheet size of 707 mm times 1000 mm or 27.83 inch times 39.37 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B2">
            <summary>
            Identifies a pager sheet size of 500 mm times 707 mm or 19.68 inch times 27.83 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B3">
            <summary>
            Identifies a pager sheet size of 353 mm times 500 mm or 13.90 inch times 19.68 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B4">
            <summary>
            Identifies a pager sheet size of 250 mm times 353 mm or 9.84 inch times 13.90 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.B5">
            <summary>
            Identifies a pager sheet size of 176 mm times 250 mm or 6.93 inch times 9.84 inch.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Quarto">
            <summary>
            Identifies a pager sheet size of 10 inch times 8 inch or 254 mm times 203 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Foolscap">
            <summary>
            Identifies a pager sheet size of 13 inch times 8 inch or 330 mm times 203 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Executive">
            <summary>
             Identifies a pager sheet size of 10.5 inch times 7.25 inch or 267 mm times 184 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.GovernmentLetter">
            <summary>
            Identifies a pager sheet size of 10.5 inch times 8 inch 267 mm times 203 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Letter">
            <summary>
            Identifies a pager sheet size of 11 inch times 8.5 inch 279 mm times 216 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Legal">
            <summary>
            Identifies a pager sheet size of 14 inch times 8.5 inch 356 mm times 216 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Ledger">
            <summary>
            Identifies a pager sheet size of 17 inch times 11 inch or 432 mm times 279 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Tabloid">
            <summary>
            Identifies a pager sheet size of 17 inch times 11 inch or 432 mm times 279 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Post">
            <summary>
            Identifies a pager sheet size of 19.25 inch times 15.5 inch 489 mm times 394 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Crown">
            <summary>
            20 ×Identifies a pager sheet size of 20 inch times 15 inch or 508 mm times 381 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.LargePost">
            <summary>
            Identifies a pager sheet size of 21 inch times 16.5 inch 533 mm times 419 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Demy">
            <summary>
            Identifies a pager sheet size of 22.5 inch times 17.5 inch 572 mm times 445 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Medium">
            <summary>
            Identifies a pager sheet size of 23 inch times 18 inch or 584 mm times 457 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Royal">
            <summary>
            Identifies a pager sheet size of 25 inch times 20 inch or 635 mm times 508 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.Elephant">
            <summary>
            Identifies a pager sheet size of 28 inch times 23 inch or 711 mm times 584 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.DoubleDemy">
            <summary>
            Identifies a pager sheet size of 35 inch times 23.5 inch 889 mm times 597 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.QuadDemy">
            <summary>
            Identifies a pager sheet size of 45 inch times 35 inch or × mm times 1143 × 889 mm.
            </summary>
        </member>
        <member name="F:PdfSharp.PageSize.STMT">
            <summary>
            Identifies a pager sheet size of 8.5 inch times 5.5 inch 216 mm times 140 mm.
            </summary>
        </member>
        <member name="T:PdfSharp.PSMsgID">
            <summary>
            Represents IDs for error and diagnostic messages generated by PDFsharp.
            </summary>
        </member>
        <member name="T:PdfSharp.PageSizeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:PdfSharp.PageSizeConverter.ToSize(PdfSharp.PageSize)">
            <summary>
            Converts the specified page size enumeration to a pair of values in point.
            </summary>
        </member>
        <member name="T:PdfSharp.PSSR">
            <summary>
            The Pdf-Sharp-String-Resources.
            </summary>
        </member>
        <member name="M:PdfSharp.PSSR.GetString(PdfSharp.PSMsgID)">
            <summary>
            Gets the localized message identified by the specified DomMsgID.
            </summary>
        </member>
        <member name="M:PdfSharp.PSSR.TestResourceMessages">
            <summary>
            Writes all messages defined by PSMsgID.
            </summary>
        </member>
        <member name="P:PdfSharp.PSSR.ResMngr">
            <summary>
            Gets the resource manager for this module.
            </summary>
        </member>
        <member name="T:PdfSharp.ProductVersionInfo">
            <summary>
            Version info base for all PDFsharp related assemblies.
            </summary>
        </member>
        <member name="T:PdfSharp.VersionInfo">
            <summary>
            Version info of this assembly.
            </summary>
        </member>
    </members>
</doc>
